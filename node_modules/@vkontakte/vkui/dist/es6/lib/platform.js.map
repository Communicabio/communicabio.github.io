{"version":3,"sources":["../../../src/lib/platform.ts"],"names":["canUseDOM","OS","ANDROID","IOS","platform","useragent","ua","navigator","userAgent","test","osname","IS_PLATFORM_IOS","IS_PLATFORM_ANDROID"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,WAAYC,EAAZ;;WAAYA,E;AAAAA,EAAAA,E;AAAAA,EAAAA,E;GAAAA,E,KAAAA,E;;AAKZ,OAAO,IAAMC,OAAO,GAAGD,EAAE,CAACC,OAAnB;AACP,OAAO,IAAMC,GAAG,GAAGF,EAAE,CAACE,GAAf;AAIP,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAA8C;AACnD,MAAMC,EAAE,GAAGD,SAAS,IAAIL,SAAS,IAAIO,SAAS,CAACC,SAApC,IAAiD,EAA5D;AAEA,SAAO,WAAWC,IAAX,CAAgBH,EAAhB,IAAsBJ,OAAtB,GAAgCC,GAAvC;AACD;AAED,IAAMO,MAAM,GAAGN,QAAQ,EAAvB;AAEA;;;;AAGA,OAAO,IAAMO,eAAwB,GAAGD,MAAM,KAAKP,GAA5C;AACP;;;;AAGA,OAAO,IAAMS,mBAA4B,GAAGF,MAAM,KAAKR,OAAhD","sourcesContent":["import { canUseDOM } from './dom';\n\nexport enum OS {\n  ANDROID = 'android',\n  IOS = 'ios',\n}\n\nexport const ANDROID = OS.ANDROID;\nexport const IOS = OS.IOS;\n\nexport type OSType = OS.ANDROID | OS.IOS;\n\nexport function platform(useragent?: string): OSType {\n  const ua = useragent || canUseDOM && navigator.userAgent || '';\n\n  return /android/i.test(ua) ? ANDROID : IOS;\n}\n\nconst osname = platform();\n\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_IOS: boolean = osname === IOS;\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_ANDROID: boolean = osname === ANDROID;\n"],"file":"platform.js"}
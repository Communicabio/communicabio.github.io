{"version":3,"sources":["../../../src/lib/SSR.tsx"],"names":["React","platform","SSRContext","createContext","SSRWrapper","userAgent","children"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAiBC,QAAjB,QAAiC,YAAjC;AAOA,OAAO,IAAMC,UAA8C,GAAGF,KAAK,CAACG,aAAN,CAAoB;AAAEF,EAAAA,QAAQ,EAAE;AAAZ,CAApB,CAAvD;AAMP,OAAO,IAAMG,UAAoD,GAAG,SAAvDA,UAAuD;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,QAAd,QAAcA,QAAd;AAAA,sBAClE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE;AAAEL,MAAAA,QAAQ,EAAEA,QAAQ,CAACI,SAAD;AAApB;AAA5B,KACGC,QADH,CADkE;AAAA,CAA7D","sourcesContent":["import React from 'react';\nimport { OSType, platform } from './platform';\nimport { HasChildren } from '../types';\n\nexport interface SSRContextInterface {\n  platform: OSType;\n}\n\nexport const SSRContext: React.Context<SSRContextInterface> = React.createContext({ platform: null });\n\nexport interface SSRWrapperProps extends HasChildren {\n  userAgent?: string;\n}\n\nexport const SSRWrapper: React.FunctionComponent<SSRWrapperProps> = ({ userAgent, children }: SSRWrapperProps) =>\n  <SSRContext.Provider value={{ platform: platform(userAgent) }}>\n    {children}\n  </SSRContext.Provider>\n;\n"],"file":"SSR.js"}
{"version":3,"sources":["../../../../src/components/ModalPage/ModalPage.tsx"],"names":["React","Component","getClassName","classNames","withInsets","isNumeric","withModalRootContext","withPlatform","ModalPage","prevProps","children","props","updateModalHeight","className","header","insets","platform","bottom","paddingBottom","settlingHeight"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA4D,OAA5D;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAGA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;IAuBMC,S;;;;;;;;;;;;;uCACeC,S,EAA2B;AAC5C,UAAIA,SAAS,CAACC,QAAV,KAAuB,KAAKC,KAAL,CAAWD,QAAtC,EAAgD;AAC9C,aAAKC,KAAL,CAAWC,iBAAX;AACD;AACF;;;6BAOQ;AAAA,wBACmD,KAAKD,KADxD;AAAA,UACCD,QADD,eACCA,QADD;AAAA,UACWG,SADX,eACWA,SADX;AAAA,UACsBC,MADtB,eACsBA,MADtB;AAAA,UAC8BC,MAD9B,eAC8BA,MAD9B;AAAA,UACsCC,QADtC,eACsCA,QADtC;AAGP,0BACE;AAAK,QAAA,SAAS,EAAEb,UAAU,CAACD,YAAY,CAAC,WAAD,EAAcc,QAAd,CAAb,EAAsCH,SAAtC;AAA1B,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGC,MADH,CADF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAuC,QAAA,KAAK,EAAET,SAAS,CAACU,MAAM,CAACE,MAAR,CAAT,GAA2B;AAAEC,UAAAA,aAAa,EAAEH,MAAM,CAACE;AAAxB,SAA3B,GAA8D;AAA5G,SACGP,QADH,CADF,CALF,CADF,CADF,CADF;AAiBD;;;;EAhCqBT,S;;gBAAlBO,S,kBAO2C;AAC7CW,EAAAA,cAAc,EAAE,EAD6B;AAE7CJ,EAAAA,MAAM,EAAE;AAFqC,C;;AA4BjD,eAAeX,UAAU,CAACG,YAAY,CAACD,oBAAoB,CAACE,SAAD,CAArB,CAAb,CAAzB","sourcesContent":["import React, { Component, HTMLAttributes, ReactNode } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform } from '../../types';\nimport { ModalRootContextInterface } from '../ModalRoot/ModalRootContext';\nimport withModalRootContext from '../ModalRoot/withModalRootContext';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface ModalPageProps extends HTMLAttributes<HTMLDivElement>, HasInsets, HasPlatform {\n  id: string;\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header: ReactNode;\n  onClose?(): void;\n  /**\n   * Процент, на который изначально будет открыта модальная страница\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  /**\n   * @ignore\n   */\n  updateModalHeight?: ModalRootContextInterface['updateModalHeight'];\n}\n\nclass ModalPage extends Component<ModalPageProps> {\n  componentDidUpdate(prevProps: ModalPageProps) {\n    if (prevProps.children !== this.props.children) {\n      this.props.updateModalHeight();\n    }\n  }\n\n  static defaultProps: Partial<ModalPageProps> = {\n    settlingHeight: 75,\n    insets: {},\n  };\n\n  render() {\n    const { children, className, header, insets, platform } = this.props;\n\n    return (\n      <div className={classNames(getClassName('ModalPage', platform), className)}>\n        <div className=\"ModalPage__in-wrap\">\n          <div className=\"ModalPage__in\">\n            <div className=\"ModalPage__header\">\n              {header}\n            </div>\n\n            <div className=\"ModalPage__content\">\n              <div className=\"ModalPage__content-in\" style={isNumeric(insets.bottom) ? { paddingBottom: insets.bottom } : null}>\n                {children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withInsets(withPlatform(withModalRootContext(ModalPage)));\n"],"file":"ModalPage.js"}
import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';
import classNames from '../../lib/classNames';
import getClassName from '../../helpers/getClassName';
import Tappable from '../Tappable/Tappable';
import Icon24Chevron from '@vkontakte/icons/dist/24/chevron';
import { IOS } from '../../lib/platform';
import usePlatform from '../../hooks/usePlatform';

var SimpleCell = function SimpleCell(_ref) {
  var before = _ref.before,
      indicator = _ref.indicator,
      children = _ref.children,
      after = _ref.after,
      description = _ref.description,
      className = _ref.className,
      expandable = _ref.expandable,
      multiline = _ref.multiline,
      restProps = _objectWithoutProperties(_ref, ["before", "indicator", "children", "after", "description", "className", "expandable", "multiline"]);

  var platform = usePlatform();
  var hasAfter = after || expandable && platform === IOS;
  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {
    Component: restProps.href ? 'a' : 'div',
    className: classNames(className, getClassName('SimpleCell', platform), {
      'SimpleCell--exp': expandable,
      'SimpleCell--mult': multiline
    })
  }), before, /*#__PURE__*/React.createElement("div", {
    className: "SimpleCell__main"
  }, /*#__PURE__*/React.createElement("div", {
    className: "SimpleCell__children"
  }, children), description && /*#__PURE__*/React.createElement("div", {
    className: "SimpleCell__description"
  }, description)), indicator && /*#__PURE__*/React.createElement("div", {
    className: "SimpleCell__indicator"
  }, indicator), hasAfter && /*#__PURE__*/React.createElement("div", {
    className: "SimpleCell__after"
  }, after, expandable && platform === IOS && /*#__PURE__*/React.createElement(Icon24Chevron, null)));
};

export default SimpleCell;
//# sourceMappingURL=SimpleCell.js.map
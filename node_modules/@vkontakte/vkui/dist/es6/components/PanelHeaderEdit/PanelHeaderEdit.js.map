{"version":3,"sources":["../../../../src/components/PanelHeaderEdit/PanelHeaderEdit.tsx"],"names":["React","PanelHeaderButton","ANDROID","Icon28EditOutline","Icon28DoneOutline","usePlatform","PanelHeaderEdit","isActive","editLabel","doneLabel","restProps","iOSText","AndroidIcon","platform","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,OAAOC,iBAAP,MAA0D,wCAA1D;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAiBA,IAAMC,eAAwD,GAAG,SAA3DA,eAA2D,OAKrC;AAAA,MAJ1BC,QAI0B,QAJ1BA,QAI0B;AAAA,MAH1BC,SAG0B,QAH1BA,SAG0B;AAAA,MAF1BC,SAE0B,QAF1BA,SAE0B;AAAA,MADvBC,SACuB;;AAC1B,MAAMC,OAAO,GAAGJ,QAAQ,GAAGE,SAAH,GAAeD,SAAvC;AACA,MAAMI,WAAW,GAAGL,QAAQ,gBAAG,oBAAC,iBAAD,OAAH,gBAA2B,oBAAC,iBAAD,OAAvD;AACA,MAAMM,QAAQ,GAAGR,WAAW,EAA5B;AAEA,sBACE,oBAAC,iBAAD,EAAuBK,SAAvB,EACGG,QAAQ,KAAKX,OAAb,GAAuBU,WAAvB,GAAqCD,OADxC,CADF;AAKD,CAfD;;AAiBAL,eAAe,CAACQ,YAAhB,GAA+B;AAC7BP,EAAAA,QAAQ,EAAE,KADmB;AAE7BC,EAAAA,SAAS,EAAE,eAFkB;AAG7BC,EAAAA,SAAS,EAAE;AAHkB,CAA/B;AAMA,eAAeH,eAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport PanelHeaderButton, { PanelHeaderButtonProps } from '../PanelHeaderButton/PanelHeaderButton';\nimport { ANDROID } from '../../lib/platform';\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DoneOutline from '@vkontakte/icons/dist/28/done_outline';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface PanelHeaderEditProps extends PanelHeaderButtonProps {\n  /**\n   * Включен ли режим редактирования\n   */\n  isActive?: boolean;\n  /**\n   * iOS only. Текст кнопки, когда режим редактирования не активен\n   */\n  editLabel?: string;\n  /**\n   * iOS only. Текст кнопки при активном режиме редактирования для выхода из него\n   */\n  doneLabel?: string;\n}\n\nconst PanelHeaderEdit: FunctionComponent<PanelHeaderEditProps> = ({\n  isActive,\n  editLabel,\n  doneLabel,\n  ...restProps\n}: PanelHeaderEditProps) => {\n  const iOSText = isActive ? doneLabel : editLabel;\n  const AndroidIcon = isActive ? <Icon28DoneOutline /> : <Icon28EditOutline />;\n  const platform = usePlatform();\n\n  return (\n    <PanelHeaderButton {...restProps}>\n      {platform === ANDROID ? AndroidIcon : iOSText}\n    </PanelHeaderButton>\n  );\n};\n\nPanelHeaderEdit.defaultProps = {\n  isActive: false,\n  editLabel: 'Редактировать',\n  doneLabel: 'Готово',\n};\n\nexport default PanelHeaderEdit;\n"],"file":"PanelHeaderEdit.js"}
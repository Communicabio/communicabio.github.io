{"version":3,"sources":["../../../../src/components/PanelHeader/PanelHeader.tsx"],"names":["React","useContext","usePlatform","getClassname","classNames","FixedLayout","Separator","ANDROID","ConfigProviderContext","WebviewType","PanelContext","PanelHeader","className","left","addon","children","right","separator","visor","transparent","getRef","getRootRef","restProps","platform","webviewType","panelContext","needSeparator","isPrimitive","VKAPPS","undefined","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAA2CC,UAA3C,QAA6D,OAA7D;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,SAASC,qBAAT,EAAgCC,WAAhC,QAAmD,yCAAnD;AACA,SAASC,YAAT,QAA6B,uBAA7B;;AAiBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAYI;AAAA,MAXtBC,SAWsB,QAXtBA,SAWsB;AAAA,MAVtBC,IAUsB,QAVtBA,IAUsB;AAAA,MATtBC,KASsB,QATtBA,KASsB;AAAA,MARtBC,QAQsB,QARtBA,QAQsB;AAAA,MAPtBC,KAOsB,QAPtBA,KAOsB;AAAA,MANtBC,SAMsB,QANtBA,SAMsB;AAAA,MALtBC,KAKsB,QALtBA,KAKsB;AAAA,MAJtBC,WAIsB,QAJtBA,WAIsB;AAAA,MAHtBC,MAGsB,QAHtBA,MAGsB;AAAA,MAFtBC,UAEsB,QAFtBA,UAEsB;AAAA,MADnBC,SACmB;;AACtB,MAAMC,QAAQ,GAAGrB,WAAW,EAA5B;;AADsB,oBAEED,UAAU,CAACO,qBAAD,CAFZ;AAAA,MAEdgB,WAFc,eAEdA,WAFc;;AAGtB,MAAMC,YAAY,GAAGxB,UAAU,CAACS,YAAD,CAA/B;AACA,MAAIgB,aAAa,GAAGT,SAApB;;AAEA,MAAI,OAAOA,SAAP,KAAqB,SAAzB,EAAoC;AAClCS,IAAAA,aAAa,GAAGD,YAAY,CAACR,SAA7B;AACD;;AAED,MAAMU,WAAW,GAAG,OAAOZ,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAAxE;AAEA,sBACE,wCACMO,SADN;AAEE,IAAA,SAAS,EACPlB,UAAU,CACRD,YAAY,CAAC,aAAD,EAAgBoB,QAAhB,CADJ,EAER;AACE,4BAAsBJ,WADxB;AAEE,0BAAoBD,KAFtB;AAGE,0BAAoBQ,aAAa,IAAIR,KAHvC;AAIE,6BAAuBM,WAAW,KAAKf,WAAW,CAACmB,MAJrD;AAKE,8BAAwBf,IAAI,KAAKgB,SALnC;AAME,+BAAyBb,KAAK,KAAKa;AANrC,KAFQ,EAURjB,SAVQ,CAHd;AAgBE,IAAA,GAAG,EAAES;AAhBP,mBAkBE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAC,KAAtB;AAA4B,IAAA,SAAS,EAAC,oBAAtC;AAA2D,IAAA,UAAU,EAAED;AAAvE,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGP,IADH,EAEGU,QAAQ,KAAKhB,OAAb,IAAwBO,KAF3B,CADF,eAKE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGa,WAAW,gBAAG,kCAAOZ,QAAP,CAAH,GAA6BA,QAD3C,CALF,eAQE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGS,WAAW,KAAKf,WAAW,CAACmB,MAA5B,IAAsCZ,KADzC,CARF,CADF,CAlBF,EAgCGU,aAAa,IAAIR,KAAjB,iBAA0B,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC;AAArB,IAhC7B,CADF;AAoCD,CA5DD;;AA8DAP,WAAW,CAACmB,YAAZ,GAA2B;AACzBb,EAAAA,SAAS,EAAE,IADc;AAEzBE,EAAAA,WAAW,EAAE,KAFY;AAGzBD,EAAAA,KAAK,EAAE;AAHkB,CAA3B;AAMA,eAAeP,WAAf","sourcesContent":["import React, { HTMLAttributes, ReactNode, useContext } from 'react';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassname from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Separator from '../Separator/Separator';\nimport { ANDROID } from '../../lib/platform';\nimport { HasRef, HasRootRef } from '../../types';\nimport { ConfigProviderContext, WebviewType } from '../ConfigProvider/ConfigProviderContext';\nimport { PanelContext } from '../Panel/PanelContext';\n\nexport interface PanelHeaderProps extends HTMLAttributes<HTMLDivElement>, HasRef<HTMLDivElement>, HasRootRef<HTMLDivElement> {\n  left?: ReactNode;\n  /**\n   * @deprecated будет удалено в 4-й версии. Раньше использовалось, как текстовое дополнение к PanelHeaderBack в iOS.\n   */\n  addon?: ReactNode;\n  right?: ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n}\n\nconst PanelHeader = ({\n  className,\n  left,\n  addon,\n  children,\n  right,\n  separator,\n  visor,\n  transparent,\n  getRef,\n  getRootRef,\n  ...restProps\n}: PanelHeaderProps) => {\n  const platform = usePlatform();\n  const { webviewType } = useContext(ConfigProviderContext);\n  const panelContext = useContext(PanelContext);\n  let needSeparator = separator;\n\n  if (typeof separator !== 'boolean') {\n    needSeparator = panelContext.separator;\n  }\n\n  const isPrimitive = typeof children === 'string' || typeof children === 'number';\n\n  return (\n    <div\n      {...restProps}\n      className={\n        classNames(\n          getClassname('PanelHeader', platform),\n          {\n            'PanelHeader--trnsp': transparent,\n            'PanelHeader--vis': visor,\n            'PanelHeader--sep': needSeparator && visor,\n            'PanelHeader--vkapps': webviewType === WebviewType.VKAPPS,\n            'PanelHeader--no-left': left === undefined,\n            'PanelHeader--no-right': right === undefined,\n          },\n          className,\n        )\n      }\n      ref={getRootRef}\n    >\n      <FixedLayout vertical=\"top\" className=\"PanelHeader__fixed\" getRootRef={getRef}>\n        <div className=\"PanelHeader__in\">\n          <div className=\"PanelHeader__left\">\n            {left}\n            {platform !== ANDROID && addon}\n          </div>\n          <div className=\"PanelHeader__content\">\n            {isPrimitive ? <span>{children}</span> : children}\n          </div>\n          <div className=\"PanelHeader__right\">\n            {webviewType !== WebviewType.VKAPPS && right}\n          </div>\n        </div>\n      </FixedLayout>\n      {needSeparator && visor && <Separator className=\"PanelHeader__separator\" />}\n    </div>\n  );\n};\n\nPanelHeader.defaultProps = {\n  separator: true,\n  transparent: false,\n  visor: true,\n};\n\nexport default PanelHeader;\n"],"file":"PanelHeader.js"}
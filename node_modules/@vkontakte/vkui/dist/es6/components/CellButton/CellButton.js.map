{"version":3,"sources":["../../../../src/components/CellButton/CellButton.tsx"],"names":["React","Tappable","getClassName","classNames","usePlatform","CellButton","className","align","mode","before","children","stopPropagation","Component","restProps","platform","href","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAyD,OAAzD;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAYA,IAAMC,UAAoD,GAAG,SAAvDA,UAAuD,OAStC;AAAA,MARrBC,SAQqB,QARrBA,SAQqB;AAAA,MAPrBC,KAOqB,QAPrBA,KAOqB;AAAA,MANrBC,IAMqB,QANrBA,IAMqB;AAAA,MALrBC,MAKqB,QALrBA,MAKqB;AAAA,MAJrBC,QAIqB,QAJrBA,QAIqB;AAAA,MAHrBC,eAGqB,QAHrBA,eAGqB;AAAA,MAFrBC,SAEqB,QAFrBA,SAEqB;AAAA,MADlBC,SACkB;;AACrB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,sBACE,oBAAC,QAAD,eACMS,SADN;AAEE,IAAA,SAAS,EAAEV,UAAU,CACnBD,YAAY,CAAC,YAAD,EAAeY,QAAf,CADO,EAEnBR,SAFmB,4BAGAE,IAHA,6BAIAD,KAJA,EAFvB;AAQE,IAAA,SAAS,EAAEM,SAAS,CAACE,IAAV,GAAiB,GAAjB,GAAuBH;AARpC,mBAUE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGH,MAAM,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCA,MAArC,CADb,EAEGC,QAAQ,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAsCA,QAAtC,CAFf,CAVF,CADF;AAiBD,CA7BD;;AA+BAL,UAAU,CAACW,YAAX,GAA0B;AACxBR,EAAAA,IAAI,EAAE,SADkB;AAExBI,EAAAA,SAAS,EAAE,QAFa;AAGxBL,EAAAA,KAAK,EAAE,MAHiB;AAIxBI,EAAAA,eAAe,EAAE;AAJO,CAA1B;AAOA,eAAeN,UAAf","sourcesContent":["import React, { ButtonHTMLAttributes, ElementType } from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasAlign } from '../../types';\n\nexport interface CellButtonProps extends ButtonHTMLAttributes<HTMLElement>, HasAlign {\n  mode?: 'primary' | 'danger';\n  before?: React.ReactNode;\n  Component?: ElementType;\n  stopPropagation?: boolean;\n  href?: string;\n  target?: string;\n}\n\nconst CellButton: React.FunctionComponent<CellButtonProps> = ({\n  className,\n  align,\n  mode,\n  before,\n  children,\n  stopPropagation,\n  Component,\n  ...restProps\n}: CellButtonProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        getClassName('CellButton', platform),\n        className,\n        `CellButton--lvl-${mode}`,\n        `CellButton--aln-${align}`,\n      )}\n      Component={restProps.href ? 'a' : Component}\n    >\n      <div className=\"CellButton__in\">\n        {before && <div className=\"CellButton__before\">{before}</div>}\n        {children && <div className=\"CellButton__content\">{children}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\nCellButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  align: 'left',\n  stopPropagation: true,\n};\n\nexport default CellButton;\n"],"file":"CellButton.js"}
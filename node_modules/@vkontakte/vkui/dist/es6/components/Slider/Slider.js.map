{"version":3,"sources":["../../../../src/components/Slider/Slider.tsx"],"names":["React","Component","Touch","classNames","getClassName","withPlatform","canUseDOM","precisionRound","number","precision","factor","Math","pow","round","Slider","props","e","absolutePosition","validateAbsolute","startX","state","containerLeft","percentPosition","absoluteToPecent","onChange","percentToValue","isControlledOutside","setState","target","originalEvent","active","closest","shiftX","preventDefault","callback","container","offsetLeft","containerWidth","offsetWidth","getRootRef","current","hasOwnProperty","value","absolute","res","max","min","step","stepCount","absStep","percent","stepFloatPart","split","length","window","addEventListener","onResize","validatePercent","valueToPercent","prevProps","removeEventListener","className","defaultValue","platform","top","bottom","restProps","getRef","onStart","onMoveX","onEnd","width"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { HasFormLabels, HasPlatform, HasRootRef, OldRef } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface SliderProps extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'onChange'>,\n  HasFormLabels {\n  min?: number;\n  max?: number;\n  value?: number;\n  step?: number;\n  onChange?(value: number, e: TouchEvent): void;\n  defaultValue?: number;\n}\n\nexport interface SliderState {\n  containerLeft: number;\n  startX: number;\n  percentPosition: number;\n  active: boolean;\n  containerWidth: number;\n}\n\nexport type OnSliderResize = (callback?: VoidFunction | Event) => void;\n\nexport function precisionRound(number: number, precision: number) {\n  let factor = Math.pow(10, precision || 1);\n  return Math.round(number * factor) / factor;\n}\n\nclass Slider extends Component<SliderProps, SliderState> {\n  constructor(props: SliderProps) {\n    super(props);\n    this.state = {\n      startX: 0,\n      containerLeft: 0,\n      percentPosition: 0,\n      active: false,\n      containerWidth: 0,\n    };\n    this.isControlledOutside = this.props.hasOwnProperty('value');\n  }\n\n  static defaultProps: SliderProps = {\n    min: 0,\n    max: 100,\n    step: 0,\n  };\n\n  isControlledOutside: boolean;\n\n  container: HTMLDivElement;\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(e.startX - this.state.containerLeft);\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n\n    this.onChange(this.percentToValue(percentPosition), e);\n\n    if (this.isControlledOutside) {\n      this.setState({ startX: absolutePosition });\n    } else {\n      this.setState({\n        startX: absolutePosition,\n        percentPosition,\n      });\n    }\n\n    const target = e.originalEvent.target as HTMLElement;\n\n    this.setState({ active: !!target.closest('.Slider__thumb') });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n\n    this.onChange(this.percentToValue(percentPosition), e);\n\n    if (!this.isControlledOutside) {\n      this.setState({ percentPosition });\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  onEnd: TouchEventHandler = () => {\n    this.setState({\n      active: false,\n    });\n  };\n\n  onResize: OnSliderResize = (callback?: VoidFunction) => {\n    this.setState({\n      containerLeft: this.container.offsetLeft,\n      containerWidth: this.container.offsetWidth,\n    }, () => {\n      typeof callback === 'function' && callback();\n    });\n  };\n\n  onChange(value: number, e: TouchEvent) {\n    this.props.onChange && this.props.onChange(value, e);\n  }\n\n  validateAbsolute(absolute: number) {\n    let res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n    if (this.props.step > 0) {\n      const stepCount = (this.props.max - this.props.min) / this.props.step;\n      const absStep = this.state.containerWidth / stepCount;\n\n      res = Math.round(res / absStep) * absStep;\n    }\n\n    return res;\n  }\n\n  validatePercent(percent: number) {\n    return Math.max(0, Math.min(percent, 100));\n  }\n\n  absoluteToPecent(absolute: number) {\n    return absolute * 100 / this.state.containerWidth;\n  }\n\n  percentToValue(percent: number) {\n    const res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n    if (this.props.step > 0) {\n      const stepFloatPart = `${this.props.step}`.split('.')[1] || '';\n      return precisionRound(res, stepFloatPart.length);\n    }\n    return res;\n  }\n\n  valueToPercent(value: number) {\n    return (value - this.props.min) * 100 / (this.props.max - this.props.min);\n  }\n\n  get value() {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return this.props.min;\n    }\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('resize', this.onResize);\n      this.onResize(() => {\n        this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.value)) });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: SliderProps) {\n    if (this.isControlledOutside && this.props.value !== prevProps.value) {\n      this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.props.value)) });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  getRef: OldRef<HTMLDivElement> = (container: HTMLDivElement) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render() {\n    const { className, min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, top, bottom, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(getClassName('Slider', platform), className)}\n        ref={this.getRef}\n      >\n        <Touch onStart={this.onStart} onMoveX={this.onMoveX} onEnd={this.onEnd} className=\"Slider__in\">\n          <div className=\"Slider__dragger\" style={{ width: `${this.state.percentPosition}%` }}>\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end', {\n                'Slider__thumb--active': this.state.active,\n              })}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(Slider);\n"],"file":"Slider.js"}
{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefresh.tsx"],"names":["React","PureComponent","PropTypes","Touch","TouchRootContext","FixedLayout","classNames","IOS","ANDROID","getClassName","PullToRefreshSpinner","withPlatform","canUseDOM","cancelEvent","event","originalEvent","preventDefault","stopPropagation","PullToRefresh","props","e","state","refreshing","setState","touchDown","isY","shiftY","params","start","max","pageYOffset","window","watching","positionMultiplier","shift","Math","touchY","currentY","min","maxY","progress","abs","spinnerY","spinnerProgress","canRefresh","contentShift","platform","runRefreshing","refreshingFinished","resetRefreshingState","contentRef","createRef","document","addEventListener","onWindowTouchMove","cancelable","passive","removeEventListener","prevProps","isFetching","onRefreshingFinish","onRefresh","children","className","restProps","spinnerTransform","contentTransform","onTouchStart","onTouchMove","onTouchEnd","transform","WebkitTransform","opacity","context","any"],"mappings":"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","sourcesContent":["import React, { PureComponent, RefObject } from 'react';\nimport PropTypes, { Requireable } from 'prop-types';\nimport Touch, { TouchProps, TouchEvent } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport { IOS, ANDROID } from '../../lib/platform';\nimport getClassName from '../../helpers/getClassName';\nimport PullToRefreshSpinner from './PullToRefreshSpinner';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface PullToRefreshProps extends TouchProps, HasPlatform {\n  /**\n   * Будет вызвана для обновления контента\n   */\n  onRefresh(): void;\n  /**\n   * Определяет, выполняется ли обновление. Для скрытия спиннера после получения контента необходимо передать `false`\n   */\n  isFetching?: boolean;\n}\n\nexport interface PullToRefreshState {\n  watching: boolean;\n  refreshing: boolean;\n  canRefresh: boolean;\n\n  touchDown: boolean;\n  refreshingFinished: boolean;\n\n  touchY: number;\n  spinnerY: PullToRefreshParams['start'];\n  spinnerProgress: number;\n  contentShift: number;\n}\n\nexport interface PullToRefreshContext {\n  document: Requireable<{}>;\n  window: Requireable<{}>;\n}\n\nexport interface PullToRefreshParams {\n  start: number;\n  max: number;\n  maxY: number;\n  refreshing: number;\n  positionMultiplier: number;\n}\n\nexport type TouchEventHandler = (event: TouchEvent) => void;\n\nfunction cancelEvent(event: any) {\n  if (!event) {\n    return false;\n  }\n  while (event.originalEvent) {\n    event = event.originalEvent;\n  }\n  if (event.preventDefault) {\n    event.preventDefault();\n  }\n  if (event.stopPropagation) {\n    event.stopPropagation();\n  }\n  return false;\n}\n\nclass PullToRefresh extends PureComponent<PullToRefreshProps, PullToRefreshState> {\n  constructor(props: PullToRefreshProps) {\n    super(props);\n\n    this.params = {\n      start: props.platform === ANDROID ? -45 : -10,\n      max: props.platform === ANDROID ? 80 : 50,\n      maxY: props.platform === ANDROID ? 80 : 400,\n      refreshing: props.platform === ANDROID ? 50 : 36,\n\n      positionMultiplier: props.platform === ANDROID ? 1 : 0.21,\n    };\n\n    this.state = {\n      watching: false,\n      refreshing: false,\n      canRefresh: false,\n\n      touchDown: false,\n      refreshingFinished: false,\n\n      touchY: 0,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    };\n\n    this.contentRef = React.createRef();\n  }\n\n  params: PullToRefreshParams;\n\n  contentRef: RefObject<HTMLDivElement>;\n\n  static contextTypes: PullToRefreshContext = {\n    window: PropTypes.any,\n    document: PropTypes.any,\n  };\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  get window() {\n    return this.context.window || window;\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      this.document.addEventListener('touchmove', this.onWindowTouchMove, {\n        cancelable: true,\n        passive: false,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    // Здесь нужен последний аргумент с такими же параметрами, потому что\n    // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n    // https://github.com/VKCOM/VKUI/issues/444\n    if (canUseDOM) {\n      this.document.removeEventListener('touchmove', this.onWindowTouchMove, {\n        cancelable: true,\n        passive: false,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: PullToRefreshProps) {\n    if (prevProps.isFetching && !this.props.isFetching) {\n      this.onRefreshingFinish();\n    }\n  }\n\n  onTouchStart: TouchEventHandler = (e: TouchEvent) => {\n    if (this.state.refreshing) {\n      cancelEvent(e);\n    }\n    this.setState({ touchDown: true });\n  };\n\n  onWindowTouchMove: EventListener = (event: Event) => {\n    if (this.state.refreshing) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  onTouchMove: TouchEventHandler = (e: TouchEvent) => {\n    const { isY, shiftY } = e;\n    const { start, max } = this.params;\n    const pageYOffset = this.window.pageYOffset;\n\n    const { refreshing, watching, touchDown } = this.state;\n\n    if (watching && touchDown) {\n      cancelEvent(e);\n\n      const { positionMultiplier } = this.params;\n\n      const shift = Math.max(0, shiftY - this.state.touchY);\n\n      const currentY = Math.max(start, Math.min(this.params.maxY, start + shift * positionMultiplier));\n      const progress = currentY > -10 ? Math.abs((currentY + 10) / max) * 80 : 0;\n\n      this.setState({\n        spinnerY: currentY,\n        spinnerProgress: Math.min(80, Math.max(0, progress)),\n        canRefresh: progress > 80,\n        contentShift: (currentY + 10) * 2.3,\n      });\n\n      if (progress > 85 && !refreshing && this.props.platform === IOS) {\n        this.runRefreshing();\n      }\n    } else if (isY && pageYOffset === 0 && shiftY > 0 && !refreshing && touchDown) {\n      cancelEvent(e);\n\n      this.setState({\n        watching: true,\n        touchY: shiftY,\n        spinnerY: start,\n        spinnerProgress: 0,\n      });\n    }\n  };\n\n  onTouchEnd: VoidFunction = () => {\n    const { refreshing, canRefresh, refreshingFinished } = this.state;\n\n    this.setState({\n      watching: false,\n      touchDown: false,\n    }, () => {\n      if (canRefresh && !refreshing) {\n        this.runRefreshing();\n      } else if (refreshing && refreshingFinished) {\n        this.resetRefreshingState();\n      } else {\n        this.setState({\n          spinnerY: refreshing ? this.params.refreshing : this.params.start,\n          spinnerProgress: 0,\n          contentShift: 0,\n        });\n      }\n    });\n  };\n\n  runRefreshing() {\n    if (!this.state.refreshing && this.props.onRefresh) {\n      this.setState({\n        refreshing: true,\n        spinnerY: this.props.platform === ANDROID ? this.params.refreshing : this.state.spinnerY,\n      });\n\n      this.props.onRefresh();\n    }\n  }\n\n  onRefreshingFinish: VoidFunction = () => {\n    this.setState({\n      refreshingFinished: true,\n    }, () => {\n      !this.state.touchDown && this.resetRefreshingState();\n    });\n  };\n\n  resetRefreshingState() {\n    this.setState({\n      watching: false,\n      canRefresh: false,\n      refreshing: false,\n      refreshingFinished: false,\n      spinnerY: this.params.start,\n      spinnerProgress: 0,\n      contentShift: 0,\n    });\n  }\n\n  render() {\n    const { children, className, onRefresh, isFetching, platform, ...restProps } = this.props;\n    const { watching, refreshing, spinnerY, spinnerProgress, canRefresh, touchDown, contentShift } = this.state;\n\n    const spinnerTransform = `translate3d(0, ${spinnerY}px, 0)`;\n    let contentTransform = '';\n\n    if (platform === IOS && refreshing && !touchDown) {\n      contentTransform = 'translate3d(0, 100px, 0)';\n    } else if (platform === IOS && contentShift) {\n      contentTransform = `translate3d(0, ${contentShift}px, 0)`;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <Touch\n          {...restProps}\n          onStart={this.onTouchStart}\n          onMove={this.onTouchMove}\n          onEnd={this.onTouchEnd}\n          className={classNames(getClassName('PullToRefresh', platform), className, {\n            'PullToRefresh--watching': watching,\n            'PullToRefresh--refreshing': refreshing,\n          })}\n        >\n          <FixedLayout className=\"PullToRefresh__controls\">\n            <PullToRefreshSpinner\n              style={{\n                transform: spinnerTransform,\n                WebkitTransform: spinnerTransform,\n                opacity: watching || refreshing || canRefresh ? 1 : 0,\n              }}\n              on={refreshing}\n              progress={refreshing ? null : spinnerProgress}\n            />\n          </FixedLayout>\n\n          <div\n            className=\"PullToRefresh__content\"\n            ref={this.contentRef}\n            style={{\n              transform: contentTransform,\n              WebkitTransform: contentTransform,\n            }}\n          >\n            {children}\n          </div>\n        </Touch>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport default withPlatform(PullToRefresh);\n"],"file":"PullToRefresh.js"}
{"version":3,"sources":["../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"names":["calcStrokeDashOffset","value","radius","progress","Math","PI","PullToRefreshSpinner","on","size","strokeWidth","style","dasharray","circleCenter","dashoffset","width","height","transformOrigin","defaultProps","React","memo"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA,SAASA,oBAAT,CAA8BC,KAA9B,EAA6CC,MAA7C,EAA6D;AAC3D,MAAMC,QAAQ,GAAGF,KAAK,GAAG,GAAzB;AACA,SAAO,IAAIG,IAAI,CAACC,EAAT,GAAcH,MAAd,IAAwB,IAAIC,QAA5B,CAAP;AACD;;AASD,IAAMG,oBAAkE,GAAG,SAArEA,oBAAqE,OAM1C;AAAA,MAL/BC,EAK+B,QAL/BA,EAK+B;AAAA,MAJ/BJ,QAI+B,QAJ/BA,QAI+B;AAAA,MAH/BK,IAG+B,QAH/BA,IAG+B;AAAA,MAF/BC,WAE+B,QAF/BA,WAE+B;AAAA,MAD/BC,KAC+B,QAD/BA,KAC+B;AAC/B,MAAMR,MAAM,GAAG,MAAMM,IAAN,GAAa,MAAMC,WAAlC;AACA,MAAME,SAAS,GAAG,IAAIP,IAAI,CAACC,EAAT,GAAcH,MAAhC;AACA,MAAMU,YAAY,GAAG,MAAMJ,IAA3B;AAEA,MAAMK,UAAU,GAAGb,oBAAoB,CAACO,EAAE,GAAG,EAAH,GAAQJ,QAAX,EAAqBD,MAArB,CAAvC;AAEA,sBACE;AACE,IAAA,SAAS,EAAE,yBAAW,wBAAX,EAAqC;AAC9C,oCAA8BK;AADgB,KAArC,CADb;AAIE,IAAA,KAAK,EAAEG;AAJT,kBAME;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAEN,IADF;AAELO,MAAAA,MAAM,EAAEP;AAFH,KAFT;AAME,IAAA,OAAO,gBAASA,IAAT,cAAiBA,IAAjB,CANT;AAOE,IAAA,KAAK,EAAC;AAPR,kBASE;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAEN,IADF;AAELO,MAAAA,MAAM,EAAEP,IAFH;AAGLQ,MAAAA,eAAe,YAAKJ,YAAL,gBAAuBA,YAAvB;AAHV;AADT,kBAOE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,eAAe,EAAED,SAHnB;AAIE,IAAA,gBAAgB,EAAEE,UAJpB;AAKE,IAAA,WAAW,EAAEJ,WALf;AAME,IAAA,aAAa,EAAC,OANhB;AAOE,IAAA,EAAE,EAAEG,YAPN;AAQE,IAAA,EAAE,EAAEA,YARN;AASE,IAAA,CAAC,EAAEV;AATL,IAPF,CATF,CANF,CADF;AAsCD,CAnDD;;AAqDAI,oBAAoB,CAACW,YAArB,GAAoC;AAClCT,EAAAA,IAAI,EAAE,EAD4B;AAElCC,EAAAA,WAAW,EAAE,GAFqB;AAGlCF,EAAAA,EAAE,EAAE,IAH8B;AAIlCJ,EAAAA,QAAQ,EAAE;AAJwB,CAApC;;eAOee,eAAMC,IAAN,CAAWb,oBAAX,C","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n}\n\nconst PullToRefreshSpinner: FunctionComponent<PullToRefreshSpinnerProps> = ({\n  on,\n  progress,\n  size,\n  strokeWidth,\n  style,\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      className={classNames('PullToRefresh__spinner', {\n        'PullToRefresh__spinner--on': on,\n      })}\n      style={style}\n    >\n      <svg\n        className=\"PullToRefresh__spinner-self\"\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            className=\"PullToRefresh__spinner-path\"\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nPullToRefreshSpinner.defaultProps = {\n  size: 24,\n  strokeWidth: 2.5,\n  on: true,\n  progress: null,\n};\n\nexport default React.memo(PullToRefreshSpinner);\n"],"file":"PullToRefreshSpinner.js"}
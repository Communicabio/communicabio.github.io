{"version":3,"sources":["../../../src/components/Counter/Counter.tsx"],"names":["baseClassName","Counter","props","mode","size","children","defaultProps","React","memo"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAGA,IAAMA,aAAa,GAAG,2BAAa,SAAb,CAAtB;;AAUA,IAAMC,OAA8C,GAAG,SAAjDA,OAAiD,CAACC,KAAD,EAAyB;AAAA,MACtEC,IADsE,GAC7CD,KAD6C,CACtEC,IADsE;AAAA,MAChEC,IADgE,GAC7CF,KAD6C,CAChEE,IADgE;AAAA,MAC1DC,QAD0D,GAC7CH,KAD6C,CAC1DG,QAD0D;AAG9E,sBACE;AAAK,IAAA,SAAS,EAAE,yBAAWL,aAAX,qBAAsCG,IAAtC,wBAA4DC,IAA5D;AAAhB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGC,QADH,CADF,CADF;AAOD,CAVD;;AAYAJ,OAAO,CAACK,YAAR,GAAuB;AACrBH,EAAAA,IAAI,EAAE,WADe;AAErBC,EAAAA,IAAI,EAAE;AAFe,CAAvB;;eAKeG,eAAMC,IAAN,CAAWP,OAAX,C","sourcesContent":["import React from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { HasChildren } from '../../types';\n\nconst baseClassName = getClassName('Counter');\n\nexport interface CounterProps extends HasChildren {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: 'secondary' | 'primary' | 'prominent';\n  size?: 's' | 'm';\n}\n\nconst Counter: React.FunctionComponent<CounterProps> = (props: CounterProps) => {\n  const { mode, size, children } = props;\n\n  return (\n    <div className={classNames(baseClassName, `Counter--${mode}`, `Counter--s-${size}`)}>\n      <div className=\"Counter__in\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nCounter.defaultProps = {\n  mode: 'secondary',\n  size: 'm',\n};\n\nexport default React.memo(Counter);\n"],"file":"Counter.js"}
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _usePlatform = _interopRequireDefault(require("../../../hooks/usePlatform"));

var _classNames = _interopRequireDefault(require("../../../lib/classNames"));

var _getClassName = _interopRequireDefault(require("../../../helpers/getClassName"));

var _platform = require("../../../lib/platform");

var _Headline = _interopRequireDefault(require("../Headline/Headline"));

var Title = function Title(_ref) {
  var children = _ref.children,
      className = _ref.className,
      weight = _ref.weight,
      level = _ref.level,
      restProps = (0, _objectWithoutProperties2.default)(_ref, ["children", "className", "weight", "level"]);
  var platform = (0, _usePlatform.default)();
  var Component = 'div';

  switch (level) {
    case '1':
      Component = 'h1';
      break;

    case '2':
      Component = 'h2';
      break;

    case '3':
      Component = 'h3';
      break;
  }

  var titleWeight = weight;

  if (platform === _platform.ANDROID) {
    if (level === '3') {
      var headlineWeight;

      switch (weight) {
        case 'heavy':
        case 'bold':
        case 'semibold':
          headlineWeight = 'medium';
          break;

        default:
          headlineWeight = weight;
      }

      return /*#__PURE__*/_react.default.createElement(_Headline.default, (0, _extends2.default)({}, restProps, {
        weight: headlineWeight,
        className: className
      }), children);
    }

    if (platform === _platform.ANDROID) {
      if (level === '1' && weight === 'heavy') {
        titleWeight = 'bold';
      }

      if (level === '2') {
        switch (weight) {
          case 'heavy':
            titleWeight = 'bold';
            break;

          case 'semibold':
            titleWeight = 'medium';
        }
      }
    }
  }

  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({}, restProps, {
    className: (0, _classNames.default)((0, _getClassName.default)('Title', platform), "Title--w-".concat(titleWeight), "Title--l-".concat(level), className)
  }), children);
};

var _default = Title;
exports.default = _default;
//# sourceMappingURL=Title.js.map
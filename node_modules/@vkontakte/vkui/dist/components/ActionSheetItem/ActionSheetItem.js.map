{"version":3,"sources":["../../../src/components/ActionSheetItem/ActionSheetItem.tsx"],"names":["ActionSheetItem","className","children","autoclose","mode","before","isLast","restProps","platform","href","defaultProps"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAgBA,IAAMA,eAA8D,GAAG,SAAjEA,eAAiE,OAU3C;AAAA,MAT1BC,SAS0B,QAT1BA,SAS0B;AAAA,MAR1BC,QAQ0B,QAR1BA,QAQ0B;AAAA,MAP1BC,SAO0B,QAP1BA,SAO0B;AAAA,MAN1BC,IAM0B,QAN1BA,IAM0B;AAAA,MAH1BC,MAG0B,QAH1BA,MAG0B;AAAA,MAF1BC,MAE0B,QAF1BA,MAE0B;AAAA,MADvBC,SACuB;AAC1B,MAAMC,QAAQ,GAAG,2BAAjB;AAEA,sBACE,6BAAC,iBAAD,6BACMD,SADN;AAEE,IAAA,SAAS,EACP,0BACE,2BAAa,iBAAb,EAAgCC,QAAhC,CADF,EAEEP,SAFF,6BAGsBG,IAHtB,qCAIK,uBAJL,EAI+BE,MAJ/B,EAHJ;AAUE,IAAA,SAAS,EAAEC,SAAS,CAACE,IAAV,GAAiB,GAAjB,GAAuB;AAVpC,MAYGJ,MAAM,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0CA,MAA1C,CAZb,eAaE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KAA4CH,QAA5C,CADF,CADF,CAbF,CADF;AAuBD,CApCD;;AAsCAF,eAAe,CAACU,YAAhB,GAA+B;AAC7BN,EAAAA,IAAI,EAAE;AADuB,CAA/B;eAIeJ,e","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface ActionSheetItemProps extends HTMLAttributes<HTMLElement> {\n  mode?: 'default' | 'destructive' | 'cancel';\n  before?: React.ReactNode;\n  // meta?: React.ReactNode,\n  // subtitle?: React.ReactNode,\n  autoclose?: boolean;\n  href?: string;\n  target?: string;\n  /**\n   * @ignore\n   */\n  isLast?: boolean;\n}\n\nconst ActionSheetItem: React.FunctionComponent<ActionSheetItemProps> = ({\n  className,\n  children,\n  autoclose,\n  mode,\n  // meta,\n  // subtitle,\n  before,\n  isLast,\n  ...restProps\n}: ActionSheetItemProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={\n        classNames(\n          getClassName('ActionSheetItem', platform),\n          className,\n          `ActionSheetItem--${mode}`,\n          { ['ActionSheetItem--last']: isLast },\n        )\n      }\n      Component={restProps.href ? 'a' : 'div'}\n    >\n      {before && <div className=\"ActionSheetItem__before\">{before}</div>}\n      <div className=\"ActionSheetItem__container\">\n        <div className=\"ActionSheetItem__content\">\n          <div className=\"ActionSheetItem__children\">{children}</div>\n          {/* {meta && <div className=\"ActionSheetItem__meta\">{meta}</div>} */}\n          {/* {subtitle && <div className=\"ActionSheetItem__descr\">{subtitle}</div>} */}\n        </div>\n      </div>\n    </Tappable>\n  );\n};\n\nActionSheetItem.defaultProps = {\n  mode: 'default',\n};\n\nexport default ActionSheetItem;\n"],"file":"ActionSheetItem.js"}
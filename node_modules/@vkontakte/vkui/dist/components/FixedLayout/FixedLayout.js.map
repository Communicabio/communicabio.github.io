{"version":3,"sources":["../../../src/components/FixedLayout/FixedLayout.tsx"],"names":["FixedLayout","position","top","e","panelScroll","detail","scrolls","props","panel","setState","el","offsetTop","element","getRootRef","current","document","addEventListener","transitionStartEventName","onViewTransitionStart","transitionEndEventName","onViewTransitionEnd","removeEventListener","className","children","style","vertical","insets","platform","filled","separator","restProps","tabbarPadding","context","hasTabbar","tabbarHeight","paddingBottom","bottom","getRef","state","React","Component","PropTypes","any","bool"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport PropTypes, { Requireable } from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport { transitionEndEventName, TransitionStartEventDetail, transitionStartEventName } from '../View/View';\nimport { tabbarHeight } from '../../appearance/constants';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform, HasRootRef, OldRef } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\nimport withPanelContext from '../Panel/withPanelContext';\n\nexport interface FixedLayoutProps extends\n  HTMLAttributes<HTMLDivElement>,\n  HasRootRef<HTMLDivElement>,\n  HasInsets,\n  HasPlatform {\n  vertical?: 'top' | 'bottom';\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n  /**\n   * @ignore\n   */\n  panel?: string;\n  /**\n   * @ignore\n   */\n  separator?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: 'absolute' | null;\n  top: number;\n}\n\nexport interface FixedLayoutContext {\n  document: Requireable<{}>;\n  hasTabbar: Requireable<boolean>;\n}\n\nclass FixedLayout extends React.Component<FixedLayoutProps, FixedLayoutState> {\n  state: FixedLayoutState = {\n    position: null,\n    top: null,\n  };\n\n  el: HTMLDivElement;\n\n  static contextTypes: FixedLayoutContext = {\n    document: PropTypes.any,\n    hasTabbar: PropTypes.bool,\n  };\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  componentDidMount() {\n    this.document.addEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.addEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  componentWillUnmount() {\n    this.document.removeEventListener(transitionStartEventName, this.onViewTransitionStart);\n    this.document.removeEventListener(transitionEndEventName, this.onViewTransitionEnd);\n  }\n\n  onViewTransitionStart: EventListener = (e: CustomEvent<TransitionStartEventDetail>) => {\n    let panelScroll = e.detail.scrolls[this.props.panel] || 0;\n    this.setState({\n      position: 'absolute',\n      top: this.el.offsetTop + panelScroll,\n    });\n  };\n\n  onViewTransitionEnd: VoidFunction = () => {\n    this.setState({\n      position: null,\n      top: null,\n    });\n  };\n\n  getRef: OldRef<HTMLDivElement> = (element: HTMLDivElement) => {\n    this.el = element;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(element);\n      } else {\n        getRootRef.current = element;\n      }\n    }\n  };\n\n  render() {\n    const { className, children, style, vertical, getRootRef, insets, platform, filled, separator, ...restProps } = this.props;\n    const tabbarPadding = this.context.hasTabbar ? tabbarHeight : 0;\n    const paddingBottom = vertical === 'bottom' && isNumeric(insets.bottom) ? insets.bottom + tabbarPadding : null;\n\n    return (\n      <div\n        {...restProps}\n        ref={this.getRef}\n        className={classNames(getClassName('FixedLayout', platform), {\n          'FixedLayout--filled': filled,\n        }, `FixedLayout--${vertical}`, className)}\n        style={{ ...style, ...this.state, paddingBottom }}\n      >\n        <div className=\"FixedLayout__in\">{children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(withInsets(withPanelContext(FixedLayout)));\n"],"file":"FixedLayout.js"}
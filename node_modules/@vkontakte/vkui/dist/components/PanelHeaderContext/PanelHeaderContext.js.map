{"version":3,"sources":["../../../src/components/PanelHeaderContext/PanelHeaderContext.tsx"],"names":["PanelHeaderContext","closing","React","createRef","setState","prevProps","props","opened","waitAnimationFinish","onAnimationFinish","eventHandler","eventName","transitionEvents","animationEndEventName","element","elementRef","current","removeEventListener","addEventListener","children","className","onClose","platform","restProps","state","baseClassNames","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;IAYMA,kB;;;;;;;;;;;;;;;wFAK6B;AAC/BC,MAAAA,OAAO,EAAE;AADsB,K;6FAIOC,eAAMC,SAAN,E;oGAqBN,YAAM;AACtC,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;;;;;uCArBkBI,S,EAAoC;AACrD,UAAI,KAAKC,KAAL,CAAWC,MAAX,KAAsBF,SAAS,CAACE,MAApC,EAA4C;AAC1C,YAAI,KAAKD,KAAL,CAAWC,MAAX,KAAsB,KAA1B,EAAiC;AAC/B,eAAKH,QAAL,CAAc;AAAEH,YAAAA,OAAO,EAAE;AAAX,WAAd;AACA,eAAKO,mBAAL,CAAyB,KAAKC,iBAA9B;AACD;AACF;AACF;;;wCAEmBC,Y,EAA4B;AAC9C,UAAMC,SAAS,GAAGC,0BAAiBC,qBAAnC;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBC,OAAhC;;AAEA,UAAIF,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACG,mBAAR,CAA4BN,SAA5B,EAAuCD,YAAvC;AACAI,QAAAA,OAAO,CAACI,gBAAR,CAAyBP,SAAzB,EAAoCD,YAApC;AACD;AACF;;;6BAMQ;AAAA,wBACkE,KAAKJ,KADvE;AAAA,UACCa,QADD,eACCA,QADD;AAAA,UACWC,SADX,eACWA,SADX;AAAA,UACsBb,MADtB,eACsBA,MADtB;AAAA,UAC8Bc,OAD9B,eAC8BA,OAD9B;AAAA,UACuCC,QADvC,eACuCA,QADvC;AAAA,UACoDC,SADpD;AAAA,UAECtB,OAFD,GAEa,KAAKuB,KAFlB,CAECvB,OAFD;AAGP,UAAMwB,cAAc,GAAG,2BAAa,oBAAb,EAAmCH,QAAnC,CAAvB;AAEA,0BACE,6BAAC,oBAAD,6BAAiBC,SAAjB;AAA4B,QAAA,SAAS,EAAE,yBAAWE,cAAX,EAA2B;AAChE,wCAA8BlB,MADkC;AAEhE,yCAA+BN;AAFiC,SAA3B,EAGpCmB,SAHoC,CAAvC;AAGe,QAAA,QAAQ,EAAC;AAHxB,uBAIE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAwC,QAAA,GAAG,EAAE,KAAKL;AAAlD,SACG,CAACR,MAAM,IAAIN,OAAX,KAAuBkB,QAD1B,CAJF,EAOG,CAACZ,MAAM,IAAIN,OAAX,kBAAuB;AAAK,QAAA,OAAO,EAAEoB,OAAd;AAAuB,QAAA,SAAS,EAAC;AAAjC,QAP1B,CADF;AAWD;;;EAlD8BK,gB;;8BAA3B1B,kB,kBACoD;AACtDO,EAAAA,MAAM,EAAE;AAD8C,C;;eAoD3C,2BAAaP,kBAAb,C","sourcesContent":["import React, { Component, HTMLAttributes, RefObject } from 'react';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport transitionEvents from '../../lib/transitionEvents';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasPlatform } from '../../types';\n\nexport interface PanelHeaderContextProps extends HTMLAttributes<HTMLDivElement>, HasPlatform {\n  opened: boolean;\n  onClose(): void;\n}\n\nexport interface PanelHeaderContextState {\n  closing: boolean;\n}\n\nclass PanelHeaderContext extends Component<PanelHeaderContextProps, PanelHeaderContextState> {\n  static defaultProps: Partial<PanelHeaderContextProps> = {\n    opened: false,\n  };\n\n  state: PanelHeaderContextState = {\n    closing: false,\n  };\n\n  elementRef: RefObject<HTMLDivElement> = React.createRef();\n\n  componentDidUpdate(prevProps: PanelHeaderContextProps) {\n    if (this.props.opened !== prevProps.opened) {\n      if (this.props.opened === false) {\n        this.setState({ closing: true });\n        this.waitAnimationFinish(this.onAnimationFinish);\n      }\n    }\n  }\n\n  waitAnimationFinish(eventHandler: VoidFunction) {\n    const eventName = transitionEvents.animationEndEventName;\n    const element = this.elementRef.current;\n\n    if (element) {\n      element.removeEventListener(eventName, eventHandler);\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n\n  onAnimationFinish: VoidFunction = () => {\n    this.setState({ closing: false });\n  };\n\n  render() {\n    const { children, className, opened, onClose, platform, ...restProps } = this.props;\n    const { closing } = this.state;\n    const baseClassNames = getClassName('PanelHeaderContext', platform);\n\n    return (\n      <FixedLayout {...restProps} className={classNames(baseClassNames, {\n        'PanelHeaderContext--opened': opened,\n        'PanelHeaderContext--closing': closing,\n      }, className)} vertical=\"top\">\n        <div className=\"PanelHeaderContext__in\" ref={this.elementRef}>\n          {(opened || closing) && children}\n        </div>\n        {(opened || closing) && <div onClick={onClose} className=\"PanelHeaderContext__fade\" />}\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withPlatform(PanelHeaderContext);\n"],"file":"PanelHeaderContext.js"}
{"version":3,"sources":["../../../src/components/Banner/Banner.tsx"],"names":["Banner","props","platform","className","mode","imageTheme","size","before","asideMode","header","subheader","text","children","background","actions","onDismiss","restProps","InnerComponent","Tappable","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA4DA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,CAACC,KAAD,EAAwB;AACrE,MAAMC,QAAQ,GAAG,2BAAjB;AADqE,MAGnEC,SAHmE,GAMjEF,KANiE,CAGnEE,SAHmE;AAAA,MAGxDC,IAHwD,GAMjEH,KANiE,CAGxDG,IAHwD;AAAA,MAGlDC,UAHkD,GAMjEJ,KANiE,CAGlDI,UAHkD;AAAA,MAGtCC,IAHsC,GAMjEL,KANiE,CAGtCK,IAHsC;AAAA,MAGhCC,MAHgC,GAMjEN,KANiE,CAGhCM,MAHgC;AAAA,MAGxBC,SAHwB,GAMjEP,KANiE,CAGxBO,SAHwB;AAAA,MAGbC,MAHa,GAMjER,KANiE,CAGbQ,MAHa;AAAA,MAGLC,SAHK,GAMjET,KANiE,CAGLS,SAHK;AAAA,MAGMC,IAHN,GAMjEV,KANiE,CAGMU,IAHN;AAAA,MAGYC,QAHZ,GAMjEX,KANiE,CAGYW,QAHZ;AAAA,MAGsBC,UAHtB,GAMjEZ,KANiE,CAGsBY,UAHtB;AAAA,MAGkCC,OAHlC,GAMjEb,KANiE,CAGkCa,OAHlC;AAAA,MAInEC,SAJmE,GAMjEd,KANiE,CAInEc,SAJmE;AAAA,MAKhEC,SALgE,0CAMjEf,KANiE;AAQrE,MAAMgB,cAAc,GAAGT,SAAS,KAAK,QAAd,GAAyBU,iBAAzB,GAAoC,KAA3D;AAEA,sBACE,+DACMF,SADN;AAEE,IAAA,SAAS,EAAE,yBACT,2BAAa,QAAb,EAAuBd,QAAvB,CADS,uBAEKE,IAFL,wBAGKE,IAHL,GAGa;AACpB,0BAAoBF,IAAI,KAAK,OAAT,IAAoBC,UAAU,KAAK;AADnC,KAHb,EAKNF,SALM;AAFb,mBAUE,6BAAC,cAAD;AAAgB,IAAA,SAAS,EAAC;AAA1B,KACGC,IAAI,KAAK,OAAT,IAAoBS,UAApB,iBACD;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,UADH,CAFF,EAOGN,MAAM,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAiCA,MAAjC,CAPb,eASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGE,MAAM,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAiCA,MAAjC,CADb,EAEGC,SAAS,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAAoCA,SAApC,CAFhB,EAGGC,IAAI,iBAAI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BA,IAA/B,CAHX,EAKGG,OAAO,iBACR;AAAK,IAAA,SAAS,EAAC;AAAf,KAAkCA,OAAlC,CANF,CATF,EAmBGN,SAAS,KAAK,QAAd,iBACD;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE,6BAAC,gBAAD,OADF,CApBF,EAyBGA,SAAS,KAAK,SAAd,iBACD;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,OAAO,EAAEO;AAA9C,KACGX,IAAI,KAAK,OAAT,gBAAmB,6BAAC,qBAAD,OAAnB,gBAA2C,6BAAC,0BAAD,OAD9C,CADF,CA1BF,CAVF,CADF;AA8CD,CAxDD;;AA0DAJ,MAAM,CAACmB,YAAP,GAAsB;AACpBf,EAAAA,IAAI,EAAE,MADc;AAEpBE,EAAAA,IAAI,EAAE,GAFc;AAGpBD,EAAAA,UAAU,EAAE;AAHQ,CAAtB;eAMeL,M","sourcesContent":["import React, { FunctionComponent, ReactNode, HTMLAttributes, MouseEventHandler } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\nimport Icon24DismissDark from '@vkontakte/icons/dist/24/dismiss_dark';\nimport Tappable from '../Tappable/Tappable';\n\nexport interface BannerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип баннера.\n   */\n  mode?: 'tint' | 'image';\n  size?: 's' | 'm';\n  /**\n   * Тип действия в правой части баннера.\n   *\n   * - `dismiss` – отображается иконка крестика, при клике на неё сработает свойство `onDismiss`.\n   * - `expand` – отображается иконка шеврона, которая подразумевает, что при клике на баннер можно куда-то перейти.\n   */\n  asideMode?: 'dismiss' | 'expand';\n  /**\n   * Срабатывает при клике на иконку крестика при `asideMode=\"dismiss\"`.\n   */\n  onDismiss?: MouseEventHandler<HTMLDivElement>;\n  /**\n   * Содержимое, отображаемое в левой части баннера.\n   */\n  before?: ReactNode;\n  /**\n   * Заголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  header?: ReactNode;\n  /**\n   * Подзаголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  subheader?: ReactNode;\n  /**\n   * Текст баннера. <br />\n   * Это свойство следует использовать без указания `header` и `subheader`.\n   */\n  text?: ReactNode;\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * - `light` – в качестве фона используется светлое изображение, цвет текста в баннере будет тёмным.\n   * - `dark` – в качестве фона используется тёмное изображение, цвет текста будет светлым.\n   */\n  imageTheme?: 'light' | 'dark';\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * Элемент, который нужно стилизовать цветом и/или фоном. Этот элемент будет растянут на 100% ширины и высоты баннера.\n   */\n  background?: ReactNode;\n  /**\n   * Кнопки, отображаемые в баннере.\n   *\n   * - В режиме `tint` или в `image` со светлым фоном рекомендуется использовать только `<Button mode=\"primary\" />` или `<Button mode=\"tertiary\" />`.\n   * - В режиме `image` с тёмным фоном – `<Button mode=\"overlay\" />`.\n   */\n  actions?: ReactNode;\n}\n\nconst Banner: FunctionComponent<BannerProps> = (props: BannerProps) => {\n  const platform = usePlatform();\n  const {\n    className, mode, imageTheme, size, before, asideMode, header, subheader, text, children, background, actions,\n    onDismiss,\n    ...restProps\n  } = props;\n\n  const InnerComponent = asideMode === 'expand' ? Tappable : 'div';\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        getClassName('Banner', platform),\n        `Banner--md-${mode}`,\n        `Banner--sz-${size}`, {\n          'Banner--inverted': mode === 'image' && imageTheme === 'dark',\n        }, className,\n      )}\n    >\n      <InnerComponent className=\"Banner__in\">\n        {mode === 'image' && background &&\n        <div className=\"Banner__bg\">\n          {background}\n        </div>\n        }\n\n        {before && <div className=\"Banner__before\">{before}</div>}\n\n        <div className=\"Banner__content\">\n          {header && <div className=\"Banner__header\">{header}</div>}\n          {subheader && <div className=\"Banner__subheader\">{subheader}</div>}\n          {text && <div className=\"Banner__text\">{text}</div>}\n\n          {actions &&\n          <div className=\"Banner__actions\">{actions}</div>\n          }\n        </div>\n\n        {asideMode === 'expand' &&\n        <div className=\"Banner__expand\">\n          <Icon24Chevron />\n        </div>\n        }\n\n        {asideMode === 'dismiss' &&\n        <div className=\"Banner__dismiss\">\n          <div className=\"Banner__dismissIcon\" onClick={onDismiss}>\n            {mode === 'image' ? <Icon24DismissDark /> : <Icon24DismissSubstract />}\n          </div>\n        </div>\n        }\n      </InnerComponent>\n    </div>\n  );\n};\n\nBanner.defaultProps = {\n  mode: 'tint',\n  size: 's',\n  imageTheme: 'dark',\n};\n\nexport default Banner;\n"],"file":"Banner.js"}
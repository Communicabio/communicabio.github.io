{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar CellButton = function CellButton(_ref) {\n  var className = _ref.className,\n      align = _ref.align,\n      mode = _ref.mode,\n      before = _ref.before,\n      children = _ref.children,\n      stopPropagation = _ref.stopPropagation,\n      Component = _ref.Component,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"align\", \"mode\", \"before\", \"children\", \"stopPropagation\", \"Component\"]);\n\n  var platform = usePlatform();\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    className: classNames(getClassName('CellButton', platform), className, \"CellButton--lvl-\".concat(mode), \"CellButton--aln-\".concat(align)),\n    Component: restProps.href ? 'a' : Component\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CellButton__in\"\n  }, before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CellButton__before\"\n  }, before), children && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CellButton__content\"\n  }, children)));\n};\n\nCellButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  align: 'left',\n  stopPropagation: true\n};\nexport default CellButton;","map":{"version":3,"sources":["../../../../src/components/CellButton/CellButton.tsx"],"names":["CellButton","className","align","mode","before","children","stopPropagation","Component","restProps","platform","usePlatform","classNames","getClassName"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAYA,IAAMA,UAAoD,GAAG,SAAvDA,UAAuD,CAAA,IAAA,EAStC;AAAA,MARrBC,SAQqB,GAAA,IAAA,CARrBA,SAQqB;AAAA,MAPrBC,KAOqB,GAAA,IAAA,CAPrBA,KAOqB;AAAA,MANrBC,IAMqB,GAAA,IAAA,CANrBA,IAMqB;AAAA,MALrBC,MAKqB,GAAA,IAAA,CALrBA,MAKqB;AAAA,MAJrBC,QAIqB,GAAA,IAAA,CAJrBA,QAIqB;AAAA,MAHrBC,eAGqB,GAAA,IAAA,CAHrBA,eAGqB;AAAA,MAFrBC,SAEqB,GAAA,IAAA,CAFrBA,SAEqB;AAAA,MADlBC,SACkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,CAAA;;AACrB,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CACnBC,YAAY,CAAA,YAAA,EADO,QACP,CADO,EAAA,SAAA,EAAA,mBAAA,MAAA,CAAA,IAAA,CAAA,EAAA,mBAAA,MAAA,CAFvB,KAEuB,CAAA,CAFvB;AAQE,IAAA,SAAS,EAAEJ,SAAS,CAATA,IAAAA,GAAAA,GAAAA,GAAuBD;AARpC,GAAA,CAAA,EAAA,aAUE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGH,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAEGC,QAAQ,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAbnB,QAamB,CAFf,CAVF,CADF;AAZF,CAAA;;AA+BAL,UAAU,CAAVA,YAAAA,GAA0B;AACxBG,EAAAA,IAAI,EADoB,SAAA;AAExBI,EAAAA,SAAS,EAFe,QAAA;AAGxBL,EAAAA,KAAK,EAHmB,MAAA;AAIxBI,EAAAA,eAAe,EAAE;AAJO,CAA1BN;AAOA,eAAA,UAAA","sourcesContent":["import React, { ButtonHTMLAttributes, ElementType } from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport { HasAlign } from '../../types';\n\nexport interface CellButtonProps extends ButtonHTMLAttributes<HTMLElement>, HasAlign {\n  mode?: 'primary' | 'danger';\n  before?: React.ReactNode;\n  Component?: ElementType;\n  stopPropagation?: boolean;\n  href?: string;\n  target?: string;\n}\n\nconst CellButton: React.FunctionComponent<CellButtonProps> = ({\n  className,\n  align,\n  mode,\n  before,\n  children,\n  stopPropagation,\n  Component,\n  ...restProps\n}: CellButtonProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Tappable\n      {...restProps}\n      className={classNames(\n        getClassName('CellButton', platform),\n        className,\n        `CellButton--lvl-${mode}`,\n        `CellButton--aln-${align}`,\n      )}\n      Component={restProps.href ? 'a' : Component}\n    >\n      <div className=\"CellButton__in\">\n        {before && <div className=\"CellButton__before\">{before}</div>}\n        {children && <div className=\"CellButton__content\">{children}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\nCellButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  align: 'left',\n  stopPropagation: true,\n};\n\nexport default CellButton;\n"]},"metadata":{},"sourceType":"module"}
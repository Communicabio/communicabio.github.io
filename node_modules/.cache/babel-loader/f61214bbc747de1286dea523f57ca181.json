{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.transitionEndEventName = exports.transitionStartEventName = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classNames = _interopRequireDefault(require(\"../../lib/classNames\"));\n\nvar _animate = _interopRequireDefault(require(\"../../lib/animate\"));\n\nvar _transitionEvents = _interopRequireDefault(require(\"../../lib/transitionEvents\"));\n\nvar _getClassName = _interopRequireDefault(require(\"../../helpers/getClassName\"));\n\nvar _platform = require(\"../../lib/platform\");\n\nvar _Touch = _interopRequireDefault(require(\"../Touch/Touch\"));\n\nvar _removeObjectKeys = _interopRequireDefault(require(\"../../lib/removeObjectKeys\"));\n\nvar _withPlatform = _interopRequireDefault(require(\"../../hoc/withPlatform\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar transitionStartEventName = 'VKUI:View:transition-start';\nexports.transitionStartEventName = transitionStartEventName;\nvar transitionEndEventName = 'VKUI:View:transition-end';\nexports.transitionEndEventName = transitionEndEventName;\nvar SwipeBackResults;\n\n(function (SwipeBackResults) {\n  SwipeBackResults[SwipeBackResults[\"fail\"] = 1] = \"fail\";\n  SwipeBackResults[SwipeBackResults[\"success\"] = 2] = \"success\";\n})(SwipeBackResults || (SwipeBackResults = {}));\n\nvar scrollsCache = {};\nvar swipeBackExcludedTags = ['input', 'textarea'];\n\nvar View = /*#__PURE__*/function (_Component) {\n  (0, _inherits2.default)(View, _Component);\n\n  var _super = _createSuper(View);\n\n  function View(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, View);\n    _this = _super.call(this, props);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"transitionEndHandler\", function (e) {\n      if (!e || ['animation-ios-next-forward', 'animation-ios-prev-back', 'animation-android-next-forward', 'animation-android-prev-back'].includes(e.animationName)) {\n        var activePanel = _this.props.activePanel;\n        var isBack = _this.state.isBack;\n        var prevPanel = _this.state.prevPanel;\n\n        _this.document.dispatchEvent(new _this.window.CustomEvent(transitionEndEventName));\n\n        _this.setState({\n          prevPanel: null,\n          nextPanel: null,\n          visiblePanels: [activePanel],\n          activePanel: activePanel,\n          animated: false,\n          isBack: undefined,\n          scrolls: isBack ? (0, _removeObjectKeys.default)(_this.state.scrolls, [prevPanel]) : _this.state.scrolls\n        }, function () {\n          isBack && _this.window.scrollTo(0, _this.state.scrolls[activePanel]);\n          _this.props.onTransition && _this.props.onTransition({\n            isBack: isBack,\n            from: prevPanel,\n            to: activePanel\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"swipingBackTransitionEndHandler\", function (e) {\n      // indexOf because of vendor prefixes in old browsers\n      var target = e.target;\n\n      if (e.propertyName.includes('transform') && target.classList.contains('View__panel--swipe-back-next')) {\n        switch (_this.state.swipeBackResult) {\n          case SwipeBackResults.fail:\n            _this.onSwipeBackCancel();\n\n            break;\n\n          case SwipeBackResults.success:\n            _this.onSwipeBackSuccess();\n\n        }\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onScrollTop\", function () {\n      var activePanel = _this.state.activePanel;\n\n      if (activePanel) {\n        var scrollTop = _this.document.body.scrollTop || _this.document.documentElement.scrollTop;\n\n        if (scrollTop) {\n          (0, _animate.default)({\n            duration: 200,\n            timing: function timing(n) {\n              return Math.sqrt(n);\n            },\n            draw: function draw(val) {\n              _this.window.scrollTo(0, scrollTop - val * scrollTop);\n            }\n          });\n        }\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onMoveX\", function (e) {\n      var target = e.originalEvent.target;\n\n      if (target && typeof target.tagName === 'string' && swipeBackExcludedTags.includes(target.tagName.toLowerCase())) {\n        return;\n      }\n\n      var platform = _this.props.platform;\n\n      if (platform === _platform.IOS && !_this.context.isWebView && (e.startX <= 70 || e.startX >= _this.window.innerWidth - 70) && !_this.state.browserSwipe) {\n        _this.setState({\n          browserSwipe: true\n        });\n      }\n\n      if (platform === _platform.IOS && _this.context.isWebView && _this.props.onSwipeBack) {\n        if (_this.state.animated && e.startX <= 70) {\n          return;\n        }\n\n        if (e.startX <= 70 && !_this.state.swipingBack && _this.props.history.length > 1) {\n          _this.setState({\n            swipingBack: true,\n            swipebackStartX: e.startX,\n            startT: e.startT,\n            swipeBackPrevPanel: _this.state.activePanel,\n            swipeBackNextPanel: _this.props.history.slice(-2)[0],\n            scrolls: _objectSpread({}, _this.state.scrolls, (0, _defineProperty2.default)({}, _this.state.activePanel, _this.window.pageYOffset))\n          });\n        }\n\n        if (_this.state.swipingBack) {\n          var swipeBackShift;\n\n          if (e.shiftX < 0) {\n            swipeBackShift = 0;\n          } else if (e.shiftX > _this.window.innerWidth - _this.state.swipebackStartX) {\n            swipeBackShift = _this.window.innerWidth;\n          } else {\n            swipeBackShift = e.shiftX;\n          }\n\n          _this.setState({\n            swipeBackShift: swipeBackShift\n          });\n        }\n      }\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"onEnd\", function () {\n      if (_this.state.swipingBack) {\n        var speed = _this.state.swipeBackShift / (Date.now() - _this.state.startT.getTime()) * 1000;\n\n        if (_this.state.swipeBackShift === 0) {\n          _this.onSwipeBackCancel();\n        } else if (_this.state.swipeBackShift >= _this.window.innerWidth) {\n          _this.onSwipeBackSuccess();\n        } else if (speed > 250 || _this.state.swipebackStartX + _this.state.swipeBackShift > _this.window.innerWidth / 2) {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.success\n          });\n        } else {\n          _this.setState({\n            swipeBackResult: SwipeBackResults.fail\n          });\n        }\n      }\n    });\n    _this.state = {\n      scrolls: scrollsCache[props.id] || {},\n      animated: false,\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n      browserSwipe: false\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(View, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.id) {\n        scrollsCache[this.props.id] = this.state.scrolls;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      this.props.popout && !prevProps.popout && this.blurActiveElement();\n      this.props.modal && !prevProps.modal && this.blurActiveElement(); // Нужен переход\n\n      if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n        var firstLayer = this.panels.find(function (panel) {\n          return panel.props.id === prevProps.activePanel || panel.props.id === _this2.props.activePanel;\n        });\n        var isBack = firstLayer && firstLayer.props.id === this.props.activePanel;\n        this.blurActiveElement();\n        this.setState({\n          visiblePanels: [prevProps.activePanel, this.props.activePanel],\n          prevPanel: prevProps.activePanel,\n          nextPanel: this.props.activePanel,\n          activePanel: null,\n          animated: true,\n          scrolls: _objectSpread({}, prevState.scrolls, (0, _defineProperty2.default)({}, prevProps.activePanel, this.window.pageYOffset)),\n          isBack: isBack\n        });\n      } // Закончилась анимация свайпа назад\n\n\n      if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n        var nextPanel = this.props.activePanel;\n        var prevPanel = prevProps.activePanel;\n        this.setState({\n          swipeBackPrevPanel: null,\n          swipeBackNextPanel: null,\n          swipingBack: false,\n          swipeBackResult: null,\n          swipebackStartX: 0,\n          swipeBackShift: 0,\n          activePanel: nextPanel,\n          visiblePanels: [nextPanel],\n          scrolls: (0, _removeObjectKeys.default)(prevState.scrolls, [prevState.swipeBackPrevPanel])\n        }, function () {\n          _this2.document.dispatchEvent(new _this2.window.CustomEvent(transitionEndEventName));\n\n          window.scrollTo(0, prevState.scrolls[_this2.state.activePanel]);\n          prevProps.onTransition && prevProps.onTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel\n          });\n        });\n      }\n\n      var scrolls = this.state.scrolls; // Начался переход\n\n      if (!prevState.animated && this.state.animated) {\n        this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, {\n          detail: {\n            scrolls: scrolls\n          }\n        }));\n        var nextPanelElement = this.pickPanel(this.state.nextPanel);\n        var prevPanelElement = this.pickPanel(this.state.prevPanel);\n        prevPanelElement.scrollTop = scrolls[this.state.prevPanel];\n\n        if (this.state.isBack) {\n          nextPanelElement.scrollTop = scrolls[this.state.nextPanel];\n        }\n\n        this.waitAnimationFinish(this.pickPanel(this.state.isBack ? this.state.prevPanel : this.state.nextPanel), this.transitionEndHandler);\n      } // Начался свайп назад\n\n\n      if (!prevState.swipingBack && this.state.swipingBack) {\n        this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, {\n          detail: {\n            scrolls: scrolls\n          }\n        }));\n        this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n\n        var _nextPanelElement = this.pickPanel(this.state.swipeBackNextPanel);\n\n        var _prevPanelElement = this.pickPanel(this.state.swipeBackPrevPanel);\n\n        _nextPanelElement.scrollTop = scrolls[this.state.swipeBackNextPanel];\n        _prevPanelElement.scrollTop = scrolls[this.state.swipeBackPrevPanel];\n      } // Началась анимация завершения свайпа назад.\n\n\n      if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n        this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n      } // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n\n\n      if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult) {\n        this.window.scrollTo(0, scrolls[this.state.activePanel]);\n      } // Закончился Safari свайп\n\n\n      if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n        this.setState({\n          browserSwipe: false,\n          nextPanel: null,\n          prevPanel: null,\n          animated: false,\n          visiblePanels: [this.props.activePanel],\n          activePanel: this.props.activePanel\n        });\n      }\n    }\n  }, {\n    key: \"shouldDisableTransitionMotion\",\n    value: function shouldDisableTransitionMotion() {\n      return this.context.transitionMotionEnabled === false;\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(elem, eventHandler) {\n      if (_transitionEvents.default.supported) {\n        var eventName = _transitionEvents.default.prefix ? _transitionEvents.default.prefix + 'TransitionEnd' : 'transitionend';\n        elem.removeEventListener(eventName, eventHandler);\n        elem.addEventListener(eventName, eventHandler);\n      } else {\n        setTimeout(function () {\n          return eventHandler();\n        }, this.props.platform === _platform.ANDROID ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"waitAnimationFinish\",\n    value: function waitAnimationFinish(elem, eventHandler) {\n      if (this.shouldDisableTransitionMotion()) {\n        eventHandler();\n        return;\n      }\n\n      if (_transitionEvents.default.supported) {\n        var eventName = _transitionEvents.default.prefix ? _transitionEvents.default.prefix + 'AnimationEnd' : 'animationend';\n        elem.removeEventListener(eventName, eventHandler);\n        elem.addEventListener(eventName, eventHandler);\n      } else {\n        setTimeout(function () {\n          return eventHandler();\n        }, this.props.platform === _platform.ANDROID ? 300 : 600);\n      }\n    }\n  }, {\n    key: \"blurActiveElement\",\n    value: function blurActiveElement() {\n      if (typeof this.window !== 'undefined' && this.document.activeElement) {\n        this.document.activeElement.blur();\n      }\n    }\n  }, {\n    key: \"pickPanel\",\n    value: function pickPanel(id) {\n      var elem = this.document.getElementById(id);\n\n      if (!elem) {\n        console.warn(\"Element #\".concat(id, \" not found\"));\n      }\n\n      return elem && elem.parentNode.parentNode;\n    }\n  }, {\n    key: \"onSwipeBackSuccess\",\n    value: function onSwipeBackSuccess() {\n      this.props.onSwipeBack && this.props.onSwipeBack();\n    }\n  }, {\n    key: \"onSwipeBackCancel\",\n    value: function onSwipeBackCancel() {\n      var _this3 = this;\n\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipebackStartX: 0,\n        swipeBackShift: 0\n      }, function () {\n        _this3.document.dispatchEvent(new _this3.window.CustomEvent(transitionEndEventName));\n      });\n    }\n  }, {\n    key: \"calcPanelSwipeStyles\",\n    value: function calcPanelSwipeStyles(panelId) {\n      var isPrev = panelId === this.state.swipeBackPrevPanel;\n      var isNext = panelId === this.state.swipeBackNextPanel;\n\n      if (!isPrev && !isNext || this.state.swipeBackResult) {\n        return {};\n      }\n\n      var prevPanelTranslate = \"\".concat(this.state.swipeBackShift, \"px\");\n      var nextPanelTranslate = \"\".concat(-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2, \"%\");\n      var prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n      if (this.state.swipeBackResult) {\n        return isPrev ? {\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        } : {};\n      }\n\n      if (isNext) {\n        return {\n          transform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(nextPanelTranslate, \", 0, 0)\")\n        };\n      }\n\n      if (isPrev) {\n        return {\n          transform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          WebkitTransform: \"translate3d(\".concat(prevPanelTranslate, \", 0, 0)\"),\n          boxShadow: \"-2px 0 12px rgba(0, 0, 0, \".concat(prevPanelShadow, \")\")\n        };\n      }\n\n      return {};\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          popout = _this$props.popout,\n          modal = _this$props.modal,\n          platform = _this$props.platform;\n      var _this$state = this.state,\n          prevPanel = _this$state.prevPanel,\n          nextPanel = _this$state.nextPanel,\n          activePanel = _this$state.activePanel,\n          swipeBackPrevPanel = _this$state.swipeBackPrevPanel,\n          swipeBackNextPanel = _this$state.swipeBackNextPanel,\n          swipeBackResult = _this$state.swipeBackResult;\n      var hasPopout = !!popout;\n      var hasModal = !!modal;\n      var panels = this.panels.filter(function (panel) {\n        var panelId = panel.props.id;\n        return _this4.state.visiblePanels.includes(panelId) || panelId === swipeBackPrevPanel || panelId === swipeBackNextPanel;\n      });\n      var modifiers = {\n        'View--animated': this.state.animated,\n        'View--swiping-back': this.state.swipingBack,\n        'View--no-motion': this.shouldDisableTransitionMotion()\n      };\n      return /*#__PURE__*/_react.default.createElement(_Touch.default, {\n        Component: \"section\",\n        className: (0, _classNames.default)((0, _getClassName.default)('View', platform), this.props.className, modifiers),\n        style: style,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd\n      }, /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"View__panels\"\n      }, panels.map(function (panel) {\n        var panelId = panel.props.id;\n        return /*#__PURE__*/_react.default.createElement(\"div\", {\n          className: (0, _classNames.default)('View__panel', {\n            'View__panel--active': panelId === activePanel,\n            'View__panel--prev': panelId === prevPanel,\n            'View__panel--next': panelId === nextPanel,\n            'View__panel--swipe-back-prev': panelId === swipeBackPrevPanel,\n            'View__panel--swipe-back-next': panelId === swipeBackNextPanel,\n            'View__panel--swipe-back-success': swipeBackResult === SwipeBackResults.success,\n            'View__panel--swipe-back-failed': swipeBackResult === SwipeBackResults.fail\n          }),\n          style: _this4.calcPanelSwipeStyles(panelId),\n          key: panelId\n        }, /*#__PURE__*/_react.default.createElement(\"div\", {\n          className: \"View__panel-in\"\n        }, panel));\n      })), hasPopout && /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"View__popout\"\n      }, popout), hasModal && /*#__PURE__*/_react.default.createElement(\"div\", {\n        className: \"View__modal\"\n      }, modal));\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      return this.context.document || document;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.context.window || window;\n    }\n  }, {\n    key: \"panels\",\n    get: function get() {\n      return [].concat(this.props.children);\n    }\n  }]);\n  return View;\n}(_react.Component);\n\n(0, _defineProperty2.default)(View, \"defaultProps\", {\n  history: []\n});\n(0, _defineProperty2.default)(View, \"contextTypes\", {\n  isWebView: _propTypes.default.bool,\n  window: _propTypes.default.any,\n  document: _propTypes.default.any,\n  transitionMotionEnabled: _propTypes.default.bool\n});\n\nvar _default = (0, _withPlatform.default)(View);\n\nexports.default = _default;","map":{"version":3,"sources":["../../../src/components/View/View.tsx"],"names":["transitionStartEventName","transitionEndEventName","SwipeBackResults","scrollsCache","swipeBackExcludedTags","View","Component","scrolls","props","animated","visiblePanels","activePanel","isBack","prevPanel","nextPanel","swipingBack","swipebackStartX","swipeBackShift","swipeBackNextPanel","swipeBackPrevPanel","swipeBackResult","browserSwipe","history","isWebView","PropTypes","window","document","transitionMotionEnabled","bool","prevProps","prevState","firstLayer","panel","from","to","detail","nextPanelElement","prevPanelElement","elem","eventHandler","transitionEvents","eventName","setTimeout","ANDROID","id","console","e","target","scrollTop","duration","timing","Math","draw","val","platform","IOS","startT","speed","Date","success","fail","panelId","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","style","popout","modal","hasPopout","hasModal","panels","modifiers","onEnd"],"mappings":"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","sourcesContent":["import React, { Component, CSSProperties, HTMLAttributes, ReactNode, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from '../../lib/classNames';\nimport animate from '../../lib/animate';\nimport transitionEvents from '../../lib/transitionEvents';\nimport getClassName from '../../helpers/getClassName';\nimport { IOS, ANDROID } from '../../lib/platform';\nimport Touch, { TouchEvent } from '../Touch/Touch';\nimport removeObjectKeys from '../../lib/removeObjectKeys';\nimport { HasChildren, HasPlatform } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport const transitionStartEventName = 'VKUI:View:transition-start';\nexport const transitionEndEventName = 'VKUI:View:transition-end';\n\nenum SwipeBackResults { fail = 1, success}\n\ninterface Scrolls {\n  [index: string]: number;\n}\n\nexport type TransitionStartEventDetail = {\n  scrolls: Scrolls;\n};\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\ntype AnimationEventHandler = (e?: AnimationEvent) => void;\n\ntype TransitionEventHandler = (e?: TransitionEvent) => void;\n\nlet scrollsCache: ViewsScrolls = {};\n\nconst swipeBackExcludedTags = ['input', 'textarea'];\n\nexport interface ViewProps extends HTMLAttributes<HTMLElement>, HasChildren, HasPlatform {\n  activePanel: string;\n  popout?: ReactNode;\n  modal?: ReactNode;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  onSwipeBack?(): void;\n  onSwipeBackStart?(): void;\n  history?: string[];\n  id?: string;\n  /**\n   * @ignore\n   * @deprecated будет удалено в 4-й версии.\n   */\n  header?: boolean;\n}\n\nexport interface ViewState {\n  scrolls: Scrolls;\n  animated: boolean;\n  startT?: Date;\n\n  visiblePanels: string[];\n  activePanel: string;\n  isBack: boolean;\n  prevPanel: string;\n  nextPanel: string;\n\n  swipingBack: boolean;\n  swipebackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string;\n  swipeBackPrevPanel: string;\n  swipeBackResult: SwipeBackResults;\n\n  browserSwipe: boolean;\n}\n\nclass View extends Component<ViewProps, ViewState> {\n  constructor(props: ViewProps) {\n    super(props);\n\n    this.state = {\n      scrolls: scrollsCache[props.id] || {},\n      animated: false,\n\n      visiblePanels: [props.activePanel],\n      activePanel: props.activePanel,\n      isBack: undefined,\n      prevPanel: null,\n      nextPanel: null,\n\n      swipingBack: false,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n      swipeBackNextPanel: null,\n      swipeBackPrevPanel: null,\n      swipeBackResult: null,\n\n      browserSwipe: false,\n    };\n  }\n\n  static defaultProps: Partial<ViewProps> = {\n    history: [],\n  };\n\n  static contextTypes = {\n    isWebView: PropTypes.bool,\n    window: PropTypes.any,\n    document: PropTypes.any,\n    transitionMotionEnabled: PropTypes.bool,\n  };\n\n  get document() {\n    return this.context.document || document;\n  }\n\n  get window() {\n    return this.context.window || window;\n  }\n\n  get panels(): ReactElement[] {\n    return [].concat(this.props.children);\n  }\n\n  componentWillUnmount() {\n    if (this.props.id) {\n      scrollsCache[this.props.id] = this.state.scrolls;\n    }\n  }\n\n  componentDidUpdate(prevProps: ViewProps, prevState: ViewState) {\n    this.props.popout && !prevProps.popout && this.blurActiveElement();\n    this.props.modal && !prevProps.modal && this.blurActiveElement();\n\n    // Нужен переход\n    if (prevProps.activePanel !== this.props.activePanel && !prevState.swipingBack && !prevState.browserSwipe) {\n      const firstLayer = this.panels.find(\n        (panel) => panel.props.id === prevProps.activePanel || panel.props.id === this.props.activePanel,\n      );\n\n      const isBack = firstLayer && firstLayer.props.id === this.props.activePanel;\n\n      this.blurActiveElement();\n\n      this.setState({\n        visiblePanels: [prevProps.activePanel, this.props.activePanel],\n        prevPanel: prevProps.activePanel,\n        nextPanel: this.props.activePanel,\n        activePanel: null,\n        animated: true,\n        scrolls: {\n          ...prevState.scrolls,\n          [prevProps.activePanel]: this.window.pageYOffset,\n        },\n        isBack,\n      });\n    }\n\n    // Закончилась анимация свайпа назад\n    if (prevProps.activePanel !== this.props.activePanel && prevState.swipingBack) {\n      const nextPanel = this.props.activePanel;\n      const prevPanel = prevProps.activePanel;\n      this.setState({\n        swipeBackPrevPanel: null,\n        swipeBackNextPanel: null,\n        swipingBack: false,\n        swipeBackResult: null,\n        swipebackStartX: 0,\n        swipeBackShift: 0,\n        activePanel: nextPanel,\n        visiblePanels: [nextPanel],\n        scrolls: removeObjectKeys(prevState.scrolls, [prevState.swipeBackPrevPanel]),\n      }, () => {\n        this.document.dispatchEvent(new this.window.CustomEvent(transitionEndEventName));\n        window.scrollTo(0, prevState.scrolls[this.state.activePanel]);\n        prevProps.onTransition && prevProps.onTransition({ isBack: true, from: prevPanel, to: nextPanel });\n      });\n    }\n\n    const scrolls = this.state.scrolls;\n\n    // Начался переход\n    if (!prevState.animated && this.state.animated) {\n      this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, { detail: { scrolls } }));\n      const nextPanelElement = this.pickPanel(this.state.nextPanel);\n      const prevPanelElement = this.pickPanel(this.state.prevPanel);\n\n      prevPanelElement.scrollTop = scrolls[this.state.prevPanel];\n      if (this.state.isBack) {\n        nextPanelElement.scrollTop = scrolls[this.state.nextPanel];\n      }\n      this.waitAnimationFinish(this.pickPanel(this.state.isBack ? this.state.prevPanel : this.state.nextPanel), this.transitionEndHandler);\n    }\n\n    // Начался свайп назад\n    if (!prevState.swipingBack && this.state.swipingBack) {\n      this.document.dispatchEvent(new this.window.CustomEvent(transitionStartEventName, { detail: { scrolls } }));\n      this.props.onSwipeBackStart && this.props.onSwipeBackStart();\n      const nextPanelElement = this.pickPanel(this.state.swipeBackNextPanel);\n      const prevPanelElement = this.pickPanel(this.state.swipeBackPrevPanel);\n\n      nextPanelElement.scrollTop = scrolls[this.state.swipeBackNextPanel];\n      prevPanelElement.scrollTop = scrolls[this.state.swipeBackPrevPanel];\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevState.swipeBackResult && this.state.swipeBackResult) {\n      this.waitTransitionFinish(this.pickPanel(this.state.swipeBackNextPanel), this.swipingBackTransitionEndHandler);\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (prevState.swipeBackResult === SwipeBackResults.fail && !this.state.swipeBackResult) {\n      this.window.scrollTo(0, scrolls[this.state.activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevProps.activePanel !== this.props.activePanel && this.state.browserSwipe) {\n      this.setState({\n        browserSwipe: false,\n        nextPanel: null,\n        prevPanel: null,\n        animated: false,\n        visiblePanels: [this.props.activePanel],\n        activePanel: this.props.activePanel,\n      });\n    }\n  }\n\n  shouldDisableTransitionMotion(): boolean {\n    return this.context.transitionMotionEnabled === false;\n  }\n\n  waitTransitionFinish(elem: HTMLElement, eventHandler: TransitionEventHandler): void {\n    if (transitionEvents.supported) {\n      const eventName = transitionEvents.prefix ? transitionEvents.prefix + 'TransitionEnd' : 'transitionend';\n\n      elem.removeEventListener(eventName, eventHandler);\n      elem.addEventListener(eventName, eventHandler);\n    } else {\n      setTimeout(() => eventHandler(), this.props.platform === ANDROID ? 300 : 600);\n    }\n  }\n\n  waitAnimationFinish(elem: HTMLElement, eventHandler: AnimationEventHandler): void {\n    if (this.shouldDisableTransitionMotion()) {\n      eventHandler();\n      return;\n    }\n\n    if (transitionEvents.supported) {\n      const eventName = transitionEvents.prefix ? transitionEvents.prefix + 'AnimationEnd' : 'animationend';\n\n      elem.removeEventListener(eventName, eventHandler);\n      elem.addEventListener(eventName, eventHandler);\n    } else {\n      setTimeout(() => eventHandler(), this.props.platform === ANDROID ? 300 : 600);\n    }\n  }\n\n  blurActiveElement(): void {\n    if (typeof this.window !== 'undefined' && this.document.activeElement) {\n      this.document.activeElement.blur();\n    }\n  }\n\n  pickPanel(id: string): HTMLElement {\n    const elem = this.document.getElementById(id);\n\n    if (!elem) {\n      console.warn(`Element #${id} not found`);\n    }\n\n    return elem && elem.parentNode.parentNode;\n  }\n\n  transitionEndHandler = (e?: AnimationEvent): void => {\n    if (!e || [\n      'animation-ios-next-forward',\n      'animation-ios-prev-back',\n      'animation-android-next-forward',\n      'animation-android-prev-back',\n    ].includes(e.animationName)) {\n      const activePanel = this.props.activePanel;\n      const isBack = this.state.isBack;\n      const prevPanel = this.state.prevPanel;\n      this.document.dispatchEvent(new this.window.CustomEvent(transitionEndEventName));\n      this.setState({\n        prevPanel: null,\n        nextPanel: null,\n        visiblePanels: [activePanel],\n        activePanel: activePanel,\n        animated: false,\n        isBack: undefined,\n        scrolls: isBack ? removeObjectKeys(this.state.scrolls, [prevPanel]) : this.state.scrolls,\n      }, () => {\n        isBack && this.window.scrollTo(0, this.state.scrolls[activePanel]);\n        this.props.onTransition && this.props.onTransition({ isBack, from: prevPanel, to: activePanel });\n      });\n    }\n  };\n\n  swipingBackTransitionEndHandler = (e?: TransitionEvent): void => {\n    // indexOf because of vendor prefixes in old browsers\n    const target = e.target as HTMLElement;\n    if (e.propertyName.includes('transform') && target.classList.contains('View__panel--swipe-back-next')) {\n      switch (this.state.swipeBackResult) {\n        case SwipeBackResults.fail:\n          this.onSwipeBackCancel();\n          break;\n        case SwipeBackResults.success:\n          this.onSwipeBackSuccess();\n      }\n    }\n  };\n\n  onSwipeBackSuccess(): void {\n    this.props.onSwipeBack && this.props.onSwipeBack();\n  }\n\n  onSwipeBackCancel(): void {\n    this.setState({\n      swipeBackPrevPanel: null,\n      swipeBackNextPanel: null,\n      swipingBack: false,\n      swipeBackResult: null,\n      swipebackStartX: 0,\n      swipeBackShift: 0,\n    }, () => {\n      this.document.dispatchEvent(new this.window.CustomEvent(transitionEndEventName));\n    });\n  }\n\n  onScrollTop = (): void => {\n    const { activePanel } = this.state;\n\n    if (activePanel) {\n      const scrollTop = this.document.body.scrollTop || this.document.documentElement.scrollTop;\n\n      if (scrollTop) {\n        animate({\n          duration: 200,\n          timing: (n: number) => Math.sqrt(n),\n          draw: (val: number) => {\n            this.window.scrollTo(0, scrollTop - val * scrollTop);\n          },\n        });\n      }\n    }\n  };\n\n  onMoveX = (e: TouchEvent): void => {\n    const target = e.originalEvent.target as HTMLElement;\n    if (\n      target &&\n      typeof target.tagName === 'string' &&\n      swipeBackExcludedTags.includes(target.tagName.toLowerCase())\n    ) {\n      return;\n    }\n\n    const { platform } = this.props;\n\n    if (platform === IOS && !this.context.isWebView && (e.startX <= 70 || e.startX >= this.window.innerWidth - 70) && !this.state.browserSwipe) {\n      this.setState({ browserSwipe: true });\n    }\n\n    if (platform === IOS && this.context.isWebView && this.props.onSwipeBack) {\n      if (this.state.animated && e.startX <= 70) {\n        return;\n      }\n\n      if (e.startX <= 70 && !this.state.swipingBack && this.props.history.length > 1) {\n        this.setState({\n          swipingBack: true,\n          swipebackStartX: e.startX,\n          startT: e.startT,\n          swipeBackPrevPanel: this.state.activePanel,\n          swipeBackNextPanel: this.props.history.slice(-2)[0],\n          scrolls: {\n            ...this.state.scrolls,\n            [this.state.activePanel]: this.window.pageYOffset,\n          },\n        });\n      }\n      if (this.state.swipingBack) {\n        let swipeBackShift;\n        if (e.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (e.shiftX > this.window.innerWidth - this.state.swipebackStartX) {\n          swipeBackShift = this.window.innerWidth;\n        } else {\n          swipeBackShift = e.shiftX;\n        }\n        this.setState({ swipeBackShift });\n      }\n    }\n  };\n\n  onEnd = (): void => {\n    if (this.state.swipingBack) {\n      const speed = this.state.swipeBackShift / (Date.now() - this.state.startT.getTime()) * 1000;\n      if (this.state.swipeBackShift === 0) {\n        this.onSwipeBackCancel();\n      } else if (this.state.swipeBackShift >= this.window.innerWidth) {\n        this.onSwipeBackSuccess();\n      } else if (speed > 250 || this.state.swipebackStartX + this.state.swipeBackShift > this.window.innerWidth / 2) {\n        this.setState({ swipeBackResult: SwipeBackResults.success });\n      } else {\n        this.setState({ swipeBackResult: SwipeBackResults.fail });\n      }\n    }\n  };\n\n  calcPanelSwipeStyles(panelId: string): CSSProperties {\n    const isPrev = panelId === this.state.swipeBackPrevPanel;\n    const isNext = panelId === this.state.swipeBackNextPanel;\n\n    if (!isPrev && !isNext || this.state.swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${this.state.swipeBackShift}px`;\n    let nextPanelTranslate = `${-50 + this.state.swipeBackShift * 100 / this.window.innerWidth / 2}%`;\n    let prevPanelShadow = 0.3 * (this.window.innerWidth - this.state.swipeBackShift) / this.window.innerWidth;\n\n    if (this.state.swipeBackResult) {\n      return isPrev ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` } : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  }\n\n  render() {\n    const { style, popout, modal, platform } = this.props;\n    const { prevPanel, nextPanel, activePanel, swipeBackPrevPanel, swipeBackNextPanel, swipeBackResult } = this.state;\n\n    const hasPopout = !!popout;\n    const hasModal = !!modal;\n\n    const panels = this.panels.filter((panel: React.ReactElement) => {\n      const panelId = panel.props.id;\n\n      return this.state.visiblePanels.includes(panelId) ||\n        panelId === swipeBackPrevPanel ||\n        panelId === swipeBackNextPanel;\n    });\n\n    const modifiers = {\n      'View--animated': this.state.animated,\n      'View--swiping-back': this.state.swipingBack,\n      'View--no-motion': this.shouldDisableTransitionMotion(),\n    };\n\n    return (\n      <Touch\n        Component=\"section\"\n        className={classNames(getClassName('View', platform), this.props.className, modifiers)}\n        style={style}\n        onMoveX={this.onMoveX}\n        onEnd={this.onEnd}\n      >\n        <div className=\"View__panels\">\n          {panels.map((panel: React.ReactElement) => {\n            const panelId = panel.props.id;\n\n            return (\n              <div\n                className={classNames('View__panel', {\n                  'View__panel--active': panelId === activePanel,\n                  'View__panel--prev': panelId === prevPanel,\n                  'View__panel--next': panelId === nextPanel,\n                  'View__panel--swipe-back-prev': panelId === swipeBackPrevPanel,\n                  'View__panel--swipe-back-next': panelId === swipeBackNextPanel,\n                  'View__panel--swipe-back-success': swipeBackResult === SwipeBackResults.success,\n                  'View__panel--swipe-back-failed': swipeBackResult === SwipeBackResults.fail,\n                })}\n                style={this.calcPanelSwipeStyles(panelId)}\n                key={panelId}\n              >\n                <div className=\"View__panel-in\">\n                  {panel}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {hasPopout && <div className=\"View__popout\">{popout}</div>}\n        {hasModal && <div className=\"View__modal\">{modal}</div>}\n      </Touch>\n    );\n  }\n}\n\nexport default withPlatform(View);\n"]},"metadata":{},"sourceType":"script"}
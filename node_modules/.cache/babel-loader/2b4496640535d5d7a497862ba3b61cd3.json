{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nvar Gallery = /*#__PURE__*/function (_Component) {\n  _inherits(Gallery, _Component);\n\n  var _super = _createSuper(Gallery);\n\n  function Gallery(props) {\n    var _this;\n\n    _classCallCheck(this, Gallery);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"slidesStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"viewport\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isChildrenDirty\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      _this.setState({\n        animation: false,\n        startT: e.startT\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      if (_this.isDraggable) {\n        e.originalEvent.preventDefault();\n\n        if (e.isSlideX) {\n          _this.props.onDragStart && _this.props.onDragStart(e);\n\n          if (_this.state.deltaX !== e.shiftX || _this.state.dragging !== e.isSlideX) {\n            _this.setState({\n              deltaX: e.shiftX,\n              dragging: e.isSlideX\n            });\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (e) {\n      var targetIndex = e.isSlide ? _this.getTarget() : _this.state.current;\n      _this.props.onDragEnd && _this.props.onDragEnd(e);\n\n      _this.go(targetIndex);\n\n      if (_this.props.onEnd) {\n        _this.props.onEnd({\n          targetIndex: targetIndex\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      _this.initializeSlides();\n\n      var _this$state = _this.state,\n          layerWidth = _this$state.layerWidth,\n          slides = _this$state.slides;\n      var containerWidth = _this.container.current.offsetWidth;\n\n      _this.setState({\n        shiftX: _this.calculateIndent(_this.state.current),\n        containerWidth: containerWidth,\n        min: _this.calcMin({\n          layerWidth: layerWidth,\n          containerWidth: containerWidth,\n          slides: slides\n        }),\n        max: _this.calcMax({\n          slides: slides\n        }),\n        animation: false\n      }, function () {\n        window.requestAnimationFrame(function () {\n          return _this.setState({\n            animation: true\n          });\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTimeout\", function (duration) {\n      if (canUseDOM) {\n        _this.timeout = window.setTimeout(function () {\n          var _this$state2 = _this.state,\n              slides = _this$state2.slides,\n              current = _this$state2.current;\n          var targetIndex = current < slides.length - 1 ? current + 1 : 0;\n\n          _this.go(targetIndex);\n        }, duration);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearTimeout\", function () {\n      clearTimeout(_this.timeout);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getSlideRef\", function (id) {\n      return function (slide) {\n        _this.slidesStore[\"slide-\".concat(id)] = slide;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getViewportRef\", function (viewport) {\n      _this.viewport = viewport;\n    });\n\n    var _current = typeof props.slideIndex === 'number' ? props.slideIndex : props.initialSlideIndex;\n\n    if (!_this.props.onChange && typeof _this.props.slideIndex === 'number') {\n      _this.logControlledError();\n    }\n\n    _this.state = {\n      containerWidth: 0,\n      current: _current,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: false,\n      duration: 0.24\n    };\n    _this.container = React.createRef();\n    _this.slidesStore = {};\n    return _this;\n  }\n\n  _createClass(Gallery, [{\n    key: \"logControlledError\",\n    value: function logControlledError() {\n      console.error('Failed prop type: You provided a `slideIndex` prop to `Gallery` without an `onChange` handler.');\n    }\n  }, {\n    key: \"initializeSlides\",\n    value: function initializeSlides(callback) {\n      var _this2 = this;\n\n      var slides = React.Children.map(this.props.children, function (_item, i) {\n        var elem = _this2.slidesStore[\"slide-\".concat(i)];\n\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth\n        };\n      });\n      var containerWidth = this.container.current.offsetWidth;\n      var layerWidth = slides.reduce(function (val, slide) {\n        return slide.width + val;\n      }, 0);\n      var min = this.calcMin({\n        containerWidth: containerWidth,\n        layerWidth: layerWidth,\n        slides: slides\n      });\n      var max = this.calcMax({\n        slides: slides\n      });\n      this.setState({\n        min: min,\n        max: max,\n        layerWidth: layerWidth,\n        containerWidth: containerWidth,\n        slides: slides\n      }, callback);\n    }\n  }, {\n    key: \"calcMin\",\n    value: function calcMin(_ref) {\n      var containerWidth = _ref.containerWidth,\n          layerWidth = _ref.layerWidth,\n          slides = _ref.slides;\n      var viewportWidth = this.viewport.offsetWidth;\n\n      switch (this.props.align) {\n        case 'left':\n          return containerWidth - layerWidth;\n\n        case 'right':\n          return viewportWidth - layerWidth;\n\n        case 'center':\n          if (this.isCenterWithCustomWidth && slides.length) {\n            var _slides = slides[slides.length - 1],\n                coordX = _slides.coordX,\n                width = _slides.width;\n            return viewportWidth / 2 - coordX - width / 2;\n          } else {\n            return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n          }\n\n      }\n    }\n  }, {\n    key: \"calcMax\",\n    value: function calcMax(_ref2) {\n      var slides = _ref2.slides;\n      var viewportWidth = this.viewport.offsetWidth;\n\n      if (this.isCenterWithCustomWidth && slides.length) {\n        var _slides$ = slides[0],\n            width = _slides$.width,\n            coordX = _slides$.coordX;\n        return viewportWidth / 2 - coordX - width / 2;\n      } else {\n        return 0;\n      }\n    }\n    /*\n     * Считает отступ слоя галереи\n     */\n\n  }, {\n    key: \"calculateIndent\",\n    value: function calculateIndent(targetIndex) {\n      var slides = this.state.slides;\n\n      if (!this.isDraggable) {\n        return 0;\n      }\n\n      var targetSlide = slides.length ? slides[targetIndex] : null;\n\n      if (targetSlide) {\n        var coordX = targetSlide.coordX,\n            width = targetSlide.width;\n\n        if (this.isCenterWithCustomWidth) {\n          var viewportWidth = this.viewport.offsetWidth;\n          return viewportWidth / 2 - coordX - width / 2;\n        }\n\n        return this.validateIndent(-1 * coordX);\n      } else {\n        return 0;\n      }\n    }\n    /*\n     * Считает отступ слоя галереи во время драга\n     */\n\n  }, {\n    key: \"calculateDragIndent\",\n    value: function calculateDragIndent() {\n      var _this$state3 = this.state,\n          shiftX = _this$state3.shiftX,\n          deltaX = _this$state3.deltaX,\n          min = _this$state3.min,\n          max = _this$state3.max;\n      var indent = shiftX + deltaX;\n\n      if (indent > max) {\n        return max + Number((indent - max) / 3);\n      } else if (indent < min) {\n        return min + Number((indent - min) / 3);\n      }\n\n      return indent;\n    }\n  }, {\n    key: \"validateIndent\",\n    value: function validateIndent(value) {\n      var _this$state4 = this.state,\n          min = _this$state4.min,\n          max = _this$state4.max;\n\n      if (value < min) {\n        return min;\n      } else if (value > max) {\n        return max;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getTarget\",\n\n    /*\n     * Получает индекс слайда, к которому будет осуществлен переход\n     */\n    value: function getTarget() {\n      var _this$state5 = this.state,\n          slides = _this$state5.slides,\n          current = _this$state5.current,\n          deltaX = _this$state5.deltaX,\n          shiftX = _this$state5.shiftX,\n          startT = _this$state5.startT,\n          max = _this$state5.max;\n      var expectDeltaX = deltaX / (Date.now() - startT.getTime()) * 240 * 0.6;\n      var shift = shiftX + deltaX + expectDeltaX - max;\n      var direction = deltaX < 0 ? 1 : -1; // Находим ближайшую границу слайда к текущему отступу\n\n      var targetIndex = slides.reduce(function (val, item, index) {\n        var previousValue = Math.abs(slides[val].coordX + shift);\n        var currentValue = Math.abs(item.coordX + shift);\n        return previousValue < currentValue ? val : index;\n      }, current);\n\n      if (targetIndex === current) {\n        var targetSlide = current + direction;\n\n        if (targetSlide >= 0 && targetSlide < slides.length) {\n          if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n            targetIndex = targetSlide;\n          }\n        }\n      }\n\n      return targetIndex;\n    }\n  }, {\n    key: \"go\",\n    value: function go(targetIndex) {\n      if (typeof this.props.slideIndex === 'number' && !this.props.onChange) {\n        this.logControlledError();\n        this.setState({\n          animation: true,\n          deltaX: 0,\n          shiftX: this.calculateIndent(this.state.current)\n        });\n      } else {\n        this.setState({\n          animation: true,\n          deltaX: 0,\n          shiftX: this.calculateIndent(targetIndex),\n          current: targetIndex\n        });\n\n        if (this.timeout) {\n          this.clearTimeout();\n          this.setTimeout(this.props.timeout);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.initializeSlides(function () {\n        _this3.setState({\n          shiftX: _this3.calculateIndent(_this3.state.current)\n        });\n      });\n      window.addEventListener('resize', this.onResize);\n\n      if (this.props.timeout) {\n        this.setTimeout(this.props.timeout);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.children !== prevProps.children) {\n        this.isChildrenDirty = true;\n      }\n\n      if (this.isChildrenDirty) {\n        this.isChildrenDirty = false;\n        this.initializeSlides();\n      }\n\n      if (prevState.current !== this.state.current && this.props.onChange) {\n        this.props.onChange(this.state.current);\n      }\n\n      if (this.props.timeout && !prevProps.timeout) {\n        this.setTimeout(this.props.timeout);\n      }\n\n      if (!this.props.timeout && prevProps.timeout) {\n        this.clearTimeout();\n      }\n\n      if (this.props.slideIndex !== prevProps.slideIndex && typeof this.props.slideIndex === 'number') {\n        this.go(this.props.slideIndex);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n      this.clearTimeout();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state6 = this.state,\n          animation = _this$state6.animation,\n          duration = _this$state6.duration,\n          current = _this$state6.current,\n          dragging = _this$state6.dragging;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          slideWidth = _this$props.slideWidth,\n          timeout = _this$props.timeout,\n          initialSlideIndex = _this$props.initialSlideIndex,\n          slideIndex = _this$props.slideIndex,\n          onDragStart = _this$props.onDragStart,\n          onDragEnd = _this$props.onDragEnd,\n          onChange = _this$props.onChange,\n          onEnd = _this$props.onEnd,\n          align = _this$props.align,\n          bullets = _this$props.bullets,\n          className = _this$props.className,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"slideWidth\", \"timeout\", \"initialSlideIndex\", \"slideIndex\", \"onDragStart\", \"onDragEnd\", \"onChange\", \"onEnd\", \"align\", \"bullets\", \"className\", \"platform\"]);\n\n      var indent = dragging ? this.calculateDragIndent() : this.calculateIndent(current);\n      var layerStyle = {\n        WebkitTransform: \"translateX(\".concat(indent, \"px)\"),\n        transform: \"translateX(\".concat(indent, \"px)\"),\n        WebkitTransition: animation ? \"-webkit-transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none',\n        transition: animation ? \"transform \".concat(duration, \"s cubic-bezier(.1, 0, .25, 1)\") : 'none'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", _extends({\n        className: classNames(getClassName('Gallery', platform), className, \"Gallery--\".concat(align), {\n          'Gallery--dragging': dragging,\n          'Gallery--custom-width': slideWidth === 'custom'\n        })\n      }, restProps, {\n        ref: this.container\n      }), /*#__PURE__*/React.createElement(Touch, {\n        className: \"Gallery__viewport\",\n        onStartX: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        style: {\n          width: slideWidth === 'custom' ? '100%' : slideWidth\n        },\n        getRootRef: this.getViewportRef\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Gallery__layer\",\n        style: layerStyle\n      }, React.Children.map(children, function (item, i) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"Gallery__slide\",\n          key: \"slide-\".concat(i),\n          ref: _this4.getSlideRef(i)\n        }, item);\n      }))), bullets && /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('Gallery__bullets', \"Gallery__bullets--\".concat(bullets))\n      }, React.Children.map(children, function (_item, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames('Gallery__bullet', {\n            'Gallery__bullet--active': index === current\n          }),\n          key: index\n        });\n      })));\n    }\n  }, {\n    key: \"isCenterWithCustomWidth\",\n    get: function get() {\n      return this.props.slideWidth === 'custom' && this.props.align === 'center';\n    }\n  }, {\n    key: \"isDraggable\",\n    get: function get() {\n      return this.state.layerWidth > this.state.containerWidth;\n    }\n  }]);\n\n  return Gallery;\n}(Component);\n\n_defineProperty(Gallery, \"defaultProps\", {\n  slideWidth: '100%',\n  children: '',\n  timeout: 0,\n  initialSlideIndex: 0,\n  align: 'left',\n  bullets: false\n});\n\nexport default withPlatform(Gallery);","map":{"version":3,"sources":["../../../../src/components/Gallery/Gallery.tsx"],"names":["Gallery","Component","current","props","containerWidth","deltaX","shiftX","slides","animation","duration","React","slideWidth","children","timeout","initialSlideIndex","align","bullets","console","callback","elem","coordX","width","offsetWidth","layerWidth","slide","min","max","viewportWidth","targetIndex","targetSlide","indent","Number","value","startT","expectDeltaX","Date","shift","direction","previousValue","Math","currentValue","item","e","dragging","isSlideX","window","clearTimeout","prevProps","prevState","slideIndex","onDragStart","onDragEnd","onChange","onEnd","className","platform","restProps","layerStyle","WebkitTransform","transform","WebkitTransition","transition","classNames","getClassName","container","getViewportRef","index","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component, HTMLAttributes, ReactElement } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport withPlatform from '../../hoc/withPlatform';\nimport { HasAlign, HasPlatform, OldRef } from '../../types';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface GalleryProps extends\n  Omit<HTMLAttributes<HTMLDivElement>, 'onChange' | 'onDragStart' | 'onDragEnd'>,\n  HasPlatform,\n  HasAlign {\n  slideWidth?: string | number;\n  timeout?: number;\n  initialSlideIndex?: number;\n  slideIndex?: number;\n  onDragStart?: TouchEventHandler;\n  onDragEnd?: TouchEventHandler;\n  onChange?(current: GalleryState['current']): void;\n  onEnd?({ targetIndex }: { targetIndex: GalleryState['current'] }): void;\n  bullets?: 'dark' | 'light' | false;\n}\n\nexport interface GalleryState {\n  containerWidth: number;\n  layerWidth?: number;\n  min?: number;\n  max?: number;\n  startT?: Date;\n  current: number;\n  deltaX: number;\n  shiftX: number;\n  slides: GallerySlidesState[];\n  animation: boolean;\n  duration: number;\n  dragging?: boolean;\n}\n\nexport interface GallerySlidesState {\n  coordX: number;\n  width: number;\n}\n\ntype SetTimeout = (duration: number) => void;\n\ntype GetSlideRef = (index: number) => OldRef<HTMLElement>;\n\nclass Gallery extends Component<GalleryProps, GalleryState> {\n  constructor(props: GalleryProps) {\n    super(props);\n\n    const current = typeof props.slideIndex === 'number' ? props.slideIndex : props.initialSlideIndex;\n\n    if (!this.props.onChange && typeof this.props.slideIndex === 'number') {\n      this.logControlledError();\n    }\n\n    this.state = {\n      containerWidth: 0,\n      current,\n      deltaX: 0,\n      shiftX: 0,\n      slides: [],\n      animation: false,\n      duration: 0.24,\n    };\n\n    this.container = React.createRef();\n\n    this.slidesStore = {};\n  }\n\n  container: React.RefObject<HTMLDivElement>;\n  slidesStore: {\n    [index: string]: HTMLElement;\n  };\n  viewport: HTMLElement;\n  timeout: number;\n  isChildrenDirty: boolean;\n\n  static defaultProps: GalleryProps = {\n    slideWidth: '100%',\n    children: '',\n    timeout: 0,\n    initialSlideIndex: 0,\n    align: 'left',\n    bullets: false,\n  };\n\n  logControlledError() {\n    console.error('Failed prop type: You provided a `slideIndex` prop to `Gallery` without an `onChange` handler.');\n  }\n\n  get isCenterWithCustomWidth() {\n    return this.props.slideWidth === 'custom' && this.props.align === 'center';\n  }\n\n  initializeSlides(callback?: VoidFunction) {\n    const slides: GallerySlidesState[] = React.Children.map(\n      this.props.children,\n      (_item: ReactElement, i: number): GallerySlidesState => {\n        const elem = this.slidesStore[`slide-${i}`];\n        return {\n          coordX: elem.offsetLeft,\n          width: elem.offsetWidth,\n        };\n      });\n\n    const containerWidth = this.container.current.offsetWidth;\n    const layerWidth = slides.reduce((val: number, slide: GallerySlidesState) => slide.width + val, 0);\n\n    const min = this.calcMin({ containerWidth, layerWidth, slides });\n    const max = this.calcMax({ slides });\n\n    this.setState({ min, max, layerWidth, containerWidth, slides }, callback);\n  }\n\n  calcMin({ containerWidth, layerWidth, slides }: Pick<GalleryState, 'containerWidth' | 'layerWidth' | 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    switch (this.props.align) {\n      case 'left':\n        return containerWidth - layerWidth;\n      case 'right':\n        return viewportWidth - layerWidth;\n      case 'center':\n        if (this.isCenterWithCustomWidth && slides.length) {\n          const { coordX, width } = slides[slides.length - 1];\n          return viewportWidth / 2 - coordX - width / 2;\n        } else {\n          return viewportWidth - (containerWidth - viewportWidth) / 2 - layerWidth;\n        }\n    }\n  }\n\n  calcMax({ slides }: Pick<GalleryState, 'slides'>) {\n    const viewportWidth = this.viewport.offsetWidth;\n    if (this.isCenterWithCustomWidth && slides.length) {\n      const { width, coordX } = slides[0];\n      return viewportWidth / 2 - coordX - width / 2;\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи\n   */\n  calculateIndent(targetIndex: number) {\n    const { slides } = this.state;\n\n    if (!this.isDraggable) {\n      return 0;\n    }\n\n    const targetSlide = slides.length ? slides[targetIndex] : null;\n\n    if (targetSlide) {\n      const { coordX, width } = targetSlide;\n\n      if (this.isCenterWithCustomWidth) {\n        const viewportWidth = this.viewport.offsetWidth;\n        return viewportWidth / 2 - coordX - width / 2;\n      }\n\n      return this.validateIndent(-1 * coordX);\n    } else {\n      return 0;\n    }\n  }\n\n  /*\n   * Считает отступ слоя галереи во время драга\n   */\n  calculateDragIndent() {\n    const { shiftX, deltaX, min, max } = this.state;\n    const indent = shiftX + deltaX;\n\n    if (indent > max) {\n      return max + Number((indent - max) / 3);\n    } else if (indent < min) {\n      return min + Number((indent - min) / 3);\n    }\n\n    return indent;\n  }\n\n  validateIndent(value: number) {\n    const { min, max } = this.state;\n\n    if (value < min) {\n      return min;\n    } else if (value > max) {\n      return max;\n    }\n\n    return value;\n  }\n\n  get isDraggable() {\n    return this.state.layerWidth > this.state.containerWidth;\n  }\n\n  /*\n   * Получает индекс слайда, к которому будет осуществлен переход\n   */\n  getTarget() {\n    const { slides, current, deltaX, shiftX, startT, max } = this.state;\n    const expectDeltaX = deltaX / (Date.now() - startT.getTime()) * 240 * 0.6;\n    const shift = shiftX + deltaX + expectDeltaX - max;\n    const direction = deltaX < 0 ? 1 : -1;\n\n    // Находим ближайшую границу слайда к текущему отступу\n    let targetIndex = slides.reduce((val: number, item: GallerySlidesState, index: number) => {\n      const previousValue = Math.abs(slides[val].coordX + shift);\n      const currentValue = Math.abs(item.coordX + shift);\n\n      return previousValue < currentValue ? val : index;\n    }, current);\n\n    if (targetIndex === current) {\n      let targetSlide = current + direction;\n\n      if (targetSlide >= 0 && targetSlide < slides.length) {\n        if (Math.abs(deltaX) > slides[targetSlide].width * 0.05) {\n          targetIndex = targetSlide;\n        }\n      }\n    }\n\n    return targetIndex;\n  }\n\n  go(targetIndex: number) {\n    if (typeof this.props.slideIndex === 'number' && !this.props.onChange) {\n      this.logControlledError();\n      this.setState({\n        animation: true,\n        deltaX: 0,\n        shiftX: this.calculateIndent(this.state.current),\n      });\n    } else {\n      this.setState({\n        animation: true,\n        deltaX: 0,\n        shiftX: this.calculateIndent(targetIndex),\n        current: targetIndex,\n      });\n\n      if (this.timeout) {\n        this.clearTimeout();\n        this.setTimeout(this.props.timeout);\n      }\n    }\n  };\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    this.setState({\n      animation: false,\n      startT: e.startT,\n    });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    if (this.isDraggable) {\n      e.originalEvent.preventDefault();\n\n      if (e.isSlideX) {\n        this.props.onDragStart && this.props.onDragStart(e);\n\n        if (this.state.deltaX !== e.shiftX || this.state.dragging !== e.isSlideX) {\n          this.setState({\n            deltaX: e.shiftX,\n            dragging: e.isSlideX,\n          });\n        }\n      }\n    }\n  };\n\n  onEnd: TouchEventHandler = (e: TouchEvent) => {\n    const targetIndex = e.isSlide ? this.getTarget() : this.state.current;\n    this.props.onDragEnd && this.props.onDragEnd(e);\n    this.go(targetIndex);\n\n    if (this.props.onEnd) {\n      this.props.onEnd({ targetIndex });\n    }\n  };\n\n  onResize: VoidFunction = () => {\n    this.initializeSlides();\n\n    const { layerWidth, slides } = this.state;\n    const containerWidth = this.container.current.offsetWidth;\n\n    this.setState({\n      shiftX: this.calculateIndent(this.state.current),\n      containerWidth,\n      min: this.calcMin({ layerWidth, containerWidth, slides }),\n      max: this.calcMax({ slides }),\n      animation: false,\n    }, () => {\n      window.requestAnimationFrame(() => this.setState({ animation: true }));\n    });\n  };\n\n  setTimeout: SetTimeout = (duration: number) => {\n    if (canUseDOM) {\n      this.timeout = window.setTimeout(() => {\n        const { slides, current } = this.state;\n        const targetIndex = current < slides.length - 1 ? current + 1 : 0;\n\n        this.go(targetIndex);\n      }, duration);\n    }\n  };\n\n  clearTimeout: VoidFunction = () => {\n    clearTimeout(this.timeout);\n  };\n\n  getSlideRef: GetSlideRef = (id: number) => (slide: HTMLElement) => {\n    this.slidesStore[`slide-${id}`] = slide;\n  };\n\n  getViewportRef: OldRef<HTMLElement> = (viewport: HTMLElement) => {\n    this.viewport = viewport;\n  };\n\n  componentDidMount() {\n    this.initializeSlides(() => {\n      this.setState({\n        shiftX: this.calculateIndent(this.state.current),\n      });\n    });\n\n    window.addEventListener('resize', this.onResize);\n\n    if (this.props.timeout) {\n      this.setTimeout(this.props.timeout);\n    }\n  }\n\n  componentDidUpdate(prevProps: GalleryProps, prevState: GalleryState) {\n    if (this.props.children !== prevProps.children) {\n      this.isChildrenDirty = true;\n    }\n\n    if (this.isChildrenDirty) {\n      this.isChildrenDirty = false;\n      this.initializeSlides();\n    }\n    if (prevState.current !== this.state.current && this.props.onChange) {\n      this.props.onChange(this.state.current);\n    }\n\n    if (this.props.timeout && !prevProps.timeout) {\n      this.setTimeout(this.props.timeout);\n    }\n\n    if (!this.props.timeout && prevProps.timeout) {\n      this.clearTimeout();\n    }\n\n    if (this.props.slideIndex !== prevProps.slideIndex && typeof this.props.slideIndex === 'number') {\n      this.go(this.props.slideIndex);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n    this.clearTimeout();\n  }\n\n  render() {\n    const { animation, duration, current, dragging } = this.state;\n    const {\n      children,\n      slideWidth,\n      timeout,\n      initialSlideIndex,\n      slideIndex,\n      onDragStart,\n      onDragEnd,\n      onChange,\n      onEnd,\n      align,\n      bullets,\n      className,\n      platform,\n      ...restProps\n    } = this.props;\n\n    const indent = dragging ? this.calculateDragIndent() : this.calculateIndent(current);\n\n    const layerStyle = {\n      WebkitTransform: `translateX(${indent}px)`,\n      transform: `translateX(${indent}px)`,\n      WebkitTransition: animation ? `-webkit-transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n      transition: animation ? `transform ${duration}s cubic-bezier(.1, 0, .25, 1)` : 'none',\n    };\n\n    return (\n      <div className={classNames(getClassName('Gallery', platform), className, `Gallery--${align}`, {\n        'Gallery--dragging': dragging,\n        'Gallery--custom-width': slideWidth === 'custom',\n      })} {...restProps} ref={this.container}>\n        <Touch\n          className=\"Gallery__viewport\"\n          onStartX={this.onStart}\n          onMoveX={this.onMoveX}\n          onEnd={this.onEnd}\n          style={{ width: slideWidth === 'custom' ? '100%' : slideWidth }}\n          getRootRef={this.getViewportRef}\n        >\n          <div className=\"Gallery__layer\" style={layerStyle}>\n            {React.Children.map(children, (item: ReactElement, i: number) =>\n              <div className=\"Gallery__slide\" key={`slide-${i}`} ref={this.getSlideRef(i)}>{item}</div>,\n            )}\n          </div>\n        </Touch>\n\n        {bullets &&\n        <div className={classNames('Gallery__bullets', `Gallery__bullets--${bullets}`)}>\n          {React.Children.map(children, (_item: ReactElement, index: number) =>\n            <div\n              className={classNames('Gallery__bullet', { 'Gallery__bullet--active': index === current })}\n              key={index}\n            />,\n          )}\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(Gallery);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport withPlatform from '../../hoc/withPlatform';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassname from '../../helpers/getClassName';\nimport { canUseDOM } from '../../lib/dom';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { ANDROID } from '../../lib/platform';\nimport { rubber } from '../../lib/touch';\n\nvar Snackbar = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Snackbar, _PureComponent);\n\n  var _super = _createSuper(Snackbar);\n\n  function Snackbar(props) {\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"innerEl\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"bodyElRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"closeTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shiftXPercent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"shiftXCurrent\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"touchStartTime\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"animationFrame\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"setCloseTimeout\", function () {\n      if (canUseDOM) {\n        _this.closeTimeout = window.setTimeout(function () {\n          _this.close();\n        }, _this.props.duration);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearCloseTimeout\", function () {\n      clearTimeout(_this.closeTimeout);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onActionClick\", function (e) {\n      _this.close();\n\n      if (_this.props.action && typeof _this.props.onActionClick === 'function') {\n        _this.props.onActionClick(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInnerRef\", function (el) {\n      return _this.innerEl = el;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchStart\", function () {\n      _this.clearCloseTimeout();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchMoveX\", function (event) {\n      var shiftX = event.shiftX,\n          startT = event.startT,\n          originalEvent = event.originalEvent;\n      originalEvent.preventDefault();\n\n      if (!_this.state.touched) {\n        _this.setState({\n          touched: true\n        });\n      }\n\n      _this.shiftXPercent = shiftX / _this.window.innerWidth * 100;\n      _this.shiftXCurrent = rubber(_this.shiftXPercent, 72, 1.2, _this.props.platform === ANDROID);\n      _this.touchStartTime = startT;\n\n      _this.setBodyTransform(_this.shiftXCurrent);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTouchEnd\", function () {\n      var newState = {\n        touched: false\n      };\n      var callback;\n\n      if (_this.state.touched) {\n        var shiftXReal = _this.shiftXCurrent;\n        var expectTranslateY = shiftXReal / (Date.now() - _this.touchStartTime.getTime()) * 240 * 0.6 * (_this.shiftXPercent < 0 ? -1 : 1);\n        shiftXReal = shiftXReal + expectTranslateY;\n\n        if (shiftXReal >= 50) {\n          _this.clearCloseTimeout();\n\n          _this.waitTransitionFinish(_this.bodyElRef.current, function () {\n            _this.props.onClose();\n          });\n\n          _this.setBodyTransform(120);\n        } else {\n          callback = function callback() {\n            _this.setCloseTimeout();\n\n            _this.setBodyTransform(0);\n          };\n        }\n      } else {\n        _this.setCloseTimeout();\n      }\n\n      _this.setState(newState, callback);\n    });\n\n    _this.state = {\n      closing: false,\n      touched: false\n    };\n    _this.bodyElRef = React.createRef();\n    _this.shiftXPercent = 0;\n    _this.shiftXCurrent = 0;\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCloseTimeout();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearCloseTimeout();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this2 = this;\n\n      this.setState({\n        closing: true\n      });\n      this.waitTransitionFinish(this.innerEl, function () {\n        _this2.props.onClose();\n      });\n    }\n  }, {\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(element, eventHandler) {\n      if (element) {\n        var eventName = transitionEvents.transitionEndEventName;\n        element.removeEventListener(eventName, eventHandler);\n        element.addEventListener(eventName, eventHandler);\n      }\n    }\n  }, {\n    key: \"setBodyTransform\",\n    value: function setBodyTransform(percent) {\n      var _this3 = this;\n\n      cancelAnimationFrame(this.animationFrame);\n      this.animationFrame = requestAnimationFrame(function () {\n        _this3.bodyElRef.current.style.transform = \"translate3d(\".concat(percent, \"%, 0, 0)\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          platform = _this$props.platform,\n          layout = _this$props.layout,\n          action = _this$props.action,\n          before = _this$props.before,\n          after = _this$props.after;\n      var resolvedLayout = after ? 'vertical' : layout;\n      return /*#__PURE__*/React.createElement(FixedLayout, {\n        vertical: \"bottom\",\n        className: classNames(getClassname('Snackbar', platform), className, \"Snackbar--l-\".concat(resolvedLayout), {\n          'Snackbar--closing': this.state.closing,\n          'Snackbar--touched': this.state.touched\n        })\n      }, /*#__PURE__*/React.createElement(Touch, {\n        className: \"Snackbar__in\",\n        getRootRef: this.getInnerRef,\n        onStart: this.onTouchStart,\n        onMoveX: this.onTouchMoveX,\n        onEnd: this.onTouchEnd\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__body\",\n        ref: this.bodyElRef\n      }, before && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__before\"\n      }, before), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__content-text\"\n      }, children), action && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"Snackbar__action\",\n        onClick: this.onActionClick\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__action-self\"\n      }, action))), after && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Snackbar__after\"\n      }, after))));\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.context.window || window;\n    }\n  }]);\n\n  return Snackbar;\n}(PureComponent);\n\n_defineProperty(Snackbar, \"defaultProps\", {\n  duration: 4000\n});\n\n_defineProperty(Snackbar, \"contextTypes\", {\n  window: PropTypes.any,\n  document: PropTypes.any\n});\n\nexport default withPlatform(Snackbar);","map":{"version":3,"sources":["../../../../src/components/Snackbar/Snackbar.tsx"],"names":["Snackbar","PureComponent","closing","touched","React","duration","window","PropTypes","document","any","clearTimeout","element","eventHandler","eventName","transitionEvents","shiftX","startT","originalEvent","event","rubber","newState","shiftXReal","expectTranslateY","Date","callback","percent","cancelAnimationFrame","requestAnimationFrame","children","className","platform","layout","action","before","after","resolvedLayout","classNames","getClassname","onTouchEnd","bodyElRef","onActionClick","withPlatform"],"mappings":"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","sourcesContent":["import React, { HTMLAttributes, PureComponent, MouseEvent } from 'react';\nimport PropTypes from 'prop-types';\nimport withPlatform from '../../hoc/withPlatform';\nimport FixedLayout from '../FixedLayout/FixedLayout';\nimport Touch, { TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport { HasPlatform } from '../../types';\nimport getClassname from '../../helpers/getClassName';\nimport { canUseDOM } from '../../lib/dom';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { ANDROID } from '../../lib/platform';\nimport { rubber } from '../../lib/touch';\n\nexport interface SnackbarProps extends HTMLAttributes<HTMLElement>, HasPlatform {\n  /**\n   * Название кнопки действия в уведомлении\n   */\n  action?: string | React.ComponentType;\n\n  /**\n   * Будет вызвано при клике на кнопку действия\n   */\n  onActionClick?: (e: React.MouseEvent) => void;\n\n  /**\n   * Цветная иконка 24x24 пикселя\n   */\n  before?: React.ReactNode;\n  /**\n   * Контент в правой части, может быть `<Avatar size={32} />`\n   */\n  after?: React.ReactNode;\n  /**\n   * Варианты расположения кнопки\n   */\n  layout?: 'vertical' | 'horizontal';\n  /**\n   * Время в миллисекундах, через которое плашка скроется\n   */\n  duration?: number;\n  /**\n   * Обработчик закрытия уведомления\n   */\n  onClose: () => void;\n}\n\nexport interface SnackbarState {\n  closing: boolean;\n  touched: boolean;\n}\n\nclass Snackbar extends PureComponent<SnackbarProps, SnackbarState> {\n  constructor(props: SnackbarProps) {\n    super(props);\n\n    this.state = {\n      closing: false,\n      touched: false,\n    };\n\n    this.bodyElRef = React.createRef();\n\n    this.shiftXPercent = 0;\n    this.shiftXCurrent = 0;\n  }\n\n  static defaultProps = {\n    duration: 4000,\n  };\n\n  static contextTypes = {\n    window: PropTypes.any,\n    document: PropTypes.any,\n  };\n\n  private innerEl: HTMLDivElement;\n  private readonly bodyElRef: React.RefObject<HTMLDivElement>;\n  private closeTimeout: number;\n\n  private shiftXPercent: number;\n  private shiftXCurrent: number;\n  private touchStartTime: Date;\n  private animationFrame: number;\n\n  componentDidMount() {\n    this.setCloseTimeout();\n  }\n\n  componentWillUnmount() {\n    this.clearCloseTimeout();\n  }\n\n  get window() {\n    return this.context.window || window;\n  }\n\n  setCloseTimeout = () => {\n    if (canUseDOM) {\n      this.closeTimeout = window.setTimeout(() => {\n        this.close();\n      }, this.props.duration);\n    }\n  };\n\n  clearCloseTimeout = () => {\n    clearTimeout(this.closeTimeout);\n  };\n\n  private readonly onActionClick = (e: MouseEvent) => {\n    this.close();\n\n    if (this.props.action && typeof this.props.onActionClick === 'function') {\n      this.props.onActionClick(e);\n    }\n  };\n\n  close() {\n    this.setState({ closing: true });\n    this.waitTransitionFinish(this.innerEl, () => {\n      this.props.onClose();\n    });\n  }\n\n  waitTransitionFinish(element: HTMLElement, eventHandler: VoidFunction) {\n    if (element) {\n      const eventName = transitionEvents.transitionEndEventName;\n\n      element.removeEventListener(eventName, eventHandler);\n      element.addEventListener(eventName, eventHandler);\n    }\n  }\n\n  getInnerRef = (el: HTMLDivElement) => this.innerEl = el;\n\n  onTouchStart = () => {\n    this.clearCloseTimeout();\n  };\n\n  onTouchMoveX = (event: TouchEvent) => {\n    const { shiftX, startT, originalEvent } = event;\n    originalEvent.preventDefault();\n\n    if (!this.state.touched) {\n      this.setState({ touched: true });\n    }\n\n    this.shiftXPercent = shiftX / this.window.innerWidth * 100;\n    this.shiftXCurrent = rubber(this.shiftXPercent, 72, 1.2, this.props.platform === ANDROID);\n    this.touchStartTime = startT;\n\n    this.setBodyTransform(this.shiftXCurrent);\n  };\n\n  onTouchEnd = () => {\n    const newState = {\n      touched: false,\n    };\n\n    let callback;\n\n    if (this.state.touched) {\n      let shiftXReal = this.shiftXCurrent;\n      const expectTranslateY = shiftXReal / (Date.now() - this.touchStartTime.getTime()) * 240 * 0.6 * (this.shiftXPercent < 0 ? -1 : 1);\n      shiftXReal = shiftXReal + expectTranslateY;\n\n      if (shiftXReal >= 50) {\n        this.clearCloseTimeout();\n        this.waitTransitionFinish(this.bodyElRef.current, () => {\n          this.props.onClose();\n        });\n        this.setBodyTransform(120);\n      } else {\n        callback = () => {\n          this.setCloseTimeout();\n          this.setBodyTransform(0);\n        };\n      }\n    } else {\n      this.setCloseTimeout();\n    }\n\n    this.setState(newState, callback);\n  };\n\n  setBodyTransform(percent: number) {\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(() => {\n      this.bodyElRef.current.style.transform = `translate3d(${percent}%, 0, 0)`;\n    });\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      platform,\n      layout,\n      action,\n      before,\n      after,\n    } = this.props;\n\n    const resolvedLayout = after ? 'vertical' : layout;\n\n    return (\n      <FixedLayout\n        vertical=\"bottom\"\n        className={classNames(getClassname('Snackbar', platform), className, `Snackbar--l-${resolvedLayout}`, {\n          'Snackbar--closing': this.state.closing,\n          'Snackbar--touched': this.state.touched,\n        })}\n      >\n        <Touch\n          className=\"Snackbar__in\"\n          getRootRef={this.getInnerRef}\n          onStart={this.onTouchStart}\n          onMoveX={this.onTouchMoveX}\n          onEnd={this.onTouchEnd}\n        >\n          <div className=\"Snackbar__body\" ref={this.bodyElRef}>\n            {before &&\n            <div className=\"Snackbar__before\">\n              {before}\n            </div>}\n\n            <div className=\"Snackbar__content\">\n              <div className=\"Snackbar__content-text\">{children}</div>\n\n              {action &&\n              <button className=\"Snackbar__action\" onClick={this.onActionClick}>\n                <div className=\"Snackbar__action-self\">{action}</div>\n              </button>}\n            </div>\n\n            {after &&\n            <div className=\"Snackbar__after\">\n              {after}\n            </div>}\n          </div>\n        </Touch>\n      </FixedLayout>\n    );\n  }\n}\n\nexport default withPlatform(Snackbar);\n"]},"metadata":{},"sourceType":"module"}
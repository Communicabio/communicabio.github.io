{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { PureComponent } from 'react';\nimport classNames from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\n\nvar Textarea = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Textarea, _PureComponent);\n\n  var _super = _createSuper(Textarea);\n\n  function Textarea(props) {\n    var _this;\n\n    _classCallCheck(this, Textarea);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (element) {\n      _this.element = element;\n      var getRef = _this.props.getRef;\n\n      if (getRef) {\n        if (typeof getRef === 'function') {\n          getRef(element);\n        } else {\n          getRef.current = element;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resize\", function () {\n      var el = _this.element;\n\n      if (el) {\n        var offsetHeight = el.offsetHeight,\n            scrollHeight = el.scrollHeight;\n        var style = window.getComputedStyle(el);\n        var paddingTop = parseInt(style.paddingTop);\n        var paddingBottom = parseInt(style.paddingBottom);\n        var diff = paddingTop + paddingBottom;\n\n        if (scrollHeight + diff <= offsetHeight) {\n          diff = 0;\n        }\n\n        if (el.value) {\n          _this.setState({\n            height: scrollHeight - diff\n          });\n        }\n\n        _this.setState({\n          height: 0\n        }, function () {\n          var height = el.scrollHeight - diff;\n\n          _this.setState({\n            height: height\n          });\n\n          if (_this.props.onResize) {\n            _this.props.onResize(el);\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChange\", function (e) {\n      if (_this.props.grow) {\n        _this.resize();\n      }\n\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          value: e.target.value\n        });\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    });\n\n    if (typeof props.value !== 'undefined') {\n      _this.isControlledOutside = true;\n      _this.state = {};\n    } else {\n      _this.state = {\n        value: props.defaultValue || ''\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Textarea, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.grow) {\n        this.resize();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      if (prevProps.value && this.props.value === '') {\n        // Fix iOS extra indent on removing content\n        window.requestAnimationFrame(function () {\n          _this2.element.value = '';\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          defaultValue = _this$props.defaultValue,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          grow = _this$props.grow,\n          style = _this$props.style,\n          onResize = _this$props.onResize,\n          className = _this$props.className,\n          getRootRef = _this$props.getRootRef,\n          getRef = _this$props.getRef,\n          status = _this$props.status,\n          top = _this$props.top,\n          bottom = _this$props.bottom,\n          restProps = _objectWithoutProperties(_this$props, [\"defaultValue\", \"value\", \"onChange\", \"grow\", \"style\", \"onResize\", \"className\", \"getRootRef\", \"getRef\", \"status\", \"top\", \"bottom\"]);\n\n      var height = this.state.height || style.height || 66;\n      return /*#__PURE__*/React.createElement(FormField, {\n        className: classNames('Textarea', className),\n        style: style,\n        getRootRef: getRootRef,\n        status: status\n      }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, restProps, {\n        className: \"Textarea__el\",\n        value: this.value,\n        onChange: this.onChange,\n        ref: this.getRef,\n        style: {\n          height: height\n        }\n      })));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.isControlledOutside ? this.props.value : this.state.value;\n    }\n  }]);\n\n  return Textarea;\n}(PureComponent);\n\n_defineProperty(Textarea, \"defaultProps\", {\n  style: {},\n  defaultValue: '',\n  grow: true\n});\n\nexport { Textarea as default };","map":{"version":3,"sources":["../../../../src/components/Textarea/Textarea.tsx"],"names":["Textarea","PureComponent","props","value","style","defaultValue","grow","getRef","el","offsetHeight","scrollHeight","window","paddingTop","parseInt","paddingBottom","diff","height","e","prevProps","onChange","onResize","className","getRootRef","status","top","bottom","restProps","classNames"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, ChangeEventHandler, PureComponent, TextareaHTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\nimport FormField from '../FormField/FormField';\nimport { HasFormLabels, HasFormStatus, HasRef, HasRootRef, OldRef } from '../../types';\n\nexport interface TextareaProps extends\n  TextareaHTMLAttributes<HTMLTextAreaElement>,\n  HasRef<HTMLTextAreaElement>,\n  HasRootRef<HTMLElement>,\n  HasFormStatus,\n  HasFormLabels {\n  grow?: boolean;\n  onResize?(el: HTMLTextAreaElement): void;\n  defaultValue?: string;\n}\n\nexport interface TextareaState {\n  value?: string;\n  height?: number;\n}\n\nexport default class Textarea extends PureComponent<TextareaProps, TextareaState> {\n  constructor(props: TextareaProps) {\n    super(props);\n\n    if (typeof props.value !== 'undefined') {\n      this.isControlledOutside = true;\n      this.state = {};\n    } else {\n      this.state = {\n        value: props.defaultValue || '',\n      };\n    }\n  }\n\n  isControlledOutside?: boolean;\n  element: HTMLTextAreaElement;\n\n  componentDidMount() {\n    if (this.props.grow) {\n      this.resize();\n    }\n  }\n\n  static defaultProps: TextareaProps = {\n    style: {},\n    defaultValue: '',\n    grow: true,\n  };\n\n  getRef: OldRef<HTMLTextAreaElement> = (element: HTMLTextAreaElement) => {\n    this.element = element;\n\n    const getRef = this.props.getRef;\n    if (getRef) {\n      if (typeof getRef === 'function') {\n        getRef(element);\n      } else {\n        getRef.current = element;\n      }\n    }\n  };\n\n  resize: VoidFunction = () => {\n    const el = this.element;\n\n    if (el) {\n      const { offsetHeight, scrollHeight } = el;\n      const style = window.getComputedStyle(el);\n      const paddingTop = parseInt(style.paddingTop);\n      const paddingBottom = parseInt(style.paddingBottom);\n\n      let diff = paddingTop + paddingBottom;\n\n      if (scrollHeight + diff <= offsetHeight) {\n        diff = 0;\n      }\n\n      if (el.value) {\n        this.setState({ height: scrollHeight - diff });\n      }\n\n      this.setState({ height: 0 }, () => {\n        const height = el.scrollHeight - diff;\n\n        this.setState({ height });\n\n        if (this.props.onResize) {\n          this.props.onResize(el);\n        }\n      });\n    }\n  };\n\n  get value() {return this.isControlledOutside ? this.props.value : this.state.value;}\n\n  onChange: ChangeEventHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    if (this.props.grow) {\n      this.resize();\n    }\n\n    if (!this.isControlledOutside) {\n      this.setState({ value: e.target.value });\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n  };\n\n  componentDidUpdate(prevProps: TextareaProps) {\n    if (prevProps.value && this.props.value === '') {\n      // Fix iOS extra indent on removing content\n      window.requestAnimationFrame(() => {\n        this.element.value = '';\n      });\n    }\n  }\n\n  render() {\n    const { defaultValue, value, onChange, grow, style, onResize, className,\n      getRootRef, getRef, status, top, bottom, ...restProps } = this.props;\n\n    const height = this.state.height || style.height || 66;\n\n    return (\n      <FormField\n        className={classNames('Textarea', className)}\n        style={style}\n        getRootRef={getRootRef}\n        status={status}\n      >\n        <textarea\n          {...restProps}\n          className=\"Textarea__el\"\n          value={this.value}\n          onChange={this.onChange}\n          ref={this.getRef}\n          style={{ height }}\n        />\n      </FormField>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
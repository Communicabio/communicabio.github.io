{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar PanelHeaderContent = function PanelHeaderContent(_ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      aside = _ref.aside,\n      status = _ref.status,\n      before = _ref.before,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      restProps = _objectWithoutProperties(_ref, [\"className\", \"style\", \"aside\", \"status\", \"before\", \"children\", \"onClick\"]);\n\n  var InComponent = onClick ? Tappable : 'div';\n  var rootProps = onClick ? {} : restProps;\n  var inProps = onClick ? _objectSpread({}, restProps, {\n    activeEffectDelay: 200\n  }) : {};\n  var platform = usePlatform();\n  var baseClassNames = getClassName('PanelHeaderContent', platform);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rootProps, {\n    className: classNames(baseClassNames, className),\n    style: style\n  }), before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeaderContent__before\"\n  }, before), /*#__PURE__*/React.createElement(InComponent, _extends({}, inProps, {\n    className: \"PanelHeaderContent__in\",\n    onClick: onClick\n  }), status && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeaderContent__status\"\n  }, status), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeaderContent__children\"\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"PanelHeaderContent__children-in\"\n  }, children), aside && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeaderContent__aside\"\n  }, aside)), before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"PanelHeaderContent__width\"\n  })));\n};\n\nexport default PanelHeaderContent;","map":{"version":3,"sources":["../../../../src/components/PanelHeaderContent/PanelHeaderContent.tsx"],"names":["PanelHeaderContent","className","style","aside","status","before","children","onClick","restProps","InComponent","rootProps","inProps","activeEffectDelay","platform","usePlatform","baseClassNames","getClassName","classNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAQA,IAAMA,kBAA8D,GAAG,SAAjEA,kBAAiE,CAAA,IAAA,EASxC;AAAA,MAR7BC,SAQ6B,GAAA,IAAA,CAR7BA,SAQ6B;AAAA,MAP7BC,KAO6B,GAAA,IAAA,CAP7BA,KAO6B;AAAA,MAN7BC,KAM6B,GAAA,IAAA,CAN7BA,KAM6B;AAAA,MAL7BC,MAK6B,GAAA,IAAA,CAL7BA,MAK6B;AAAA,MAJ7BC,MAI6B,GAAA,IAAA,CAJ7BA,MAI6B;AAAA,MAH7BC,QAG6B,GAAA,IAAA,CAH7BA,QAG6B;AAAA,MAF7BC,OAE6B,GAAA,IAAA,CAF7BA,OAE6B;AAAA,MAD1BC,SAC0B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,CAAA,CAAA;;AAC7B,MAAMC,WAAW,GAAGF,OAAO,GAAA,QAAA,GAA3B,KAAA;AACA,MAAMG,SAAS,GAAGH,OAAO,GAAA,EAAA,GAAzB,SAAA;AACA,MAAMI,OAAO,GAAGJ,OAAO,GAAA,aAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAmBK,IAAAA,iBAAiB,EAAE;AAAtC,GAAA,CAAA,GAAvB,EAAA;AACA,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,cAAc,GAAGC,YAAY,CAAA,oBAAA,EAAnC,QAAmC,CAAnC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAAoB,IAAA,SAAS,EAAEC,UAAU,CAAA,cAAA,EAAzC,SAAyC,CAAzC;AAAsE,IAAA,KAAK,EAAEf;AAA7E,GAAA,CAAA,EACGG,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AAA0B,IAAA,SAAS,EAAnC,wBAAA;AAA6D,IAAA,OAAO,EAAEE;AAAtE,GAAA,CAAA,EACGH,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EADF,QACE,CADF,EAEGD,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAJd,KAIc,CAFZ,CAFF,EAMGE,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,CANb,CAFF,CADF;AAhBF,CAAA;;AA+BA,eAAA,kBAAA","sourcesContent":["import React, { FunctionComponent, HTMLAttributes, ReactNode } from 'react';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\nimport usePlatform from '../../hooks/usePlatform';\n\ninterface PanelHeaderContentProps extends HTMLAttributes<HTMLDivElement> {\n  aside: ReactNode;\n  before: ReactNode;\n  status: ReactNode;\n}\n\nconst PanelHeaderContent: FunctionComponent<PanelHeaderContentProps> = ({\n  className,\n  style,\n  aside,\n  status,\n  before,\n  children,\n  onClick,\n  ...restProps\n}: PanelHeaderContentProps) => {\n  const InComponent = onClick ? Tappable : 'div';\n  const rootProps = onClick ? {} : restProps;\n  const inProps = onClick ? { ...restProps, activeEffectDelay: 200 } : {};\n  const platform = usePlatform();\n  const baseClassNames = getClassName('PanelHeaderContent', platform);\n\n  return (\n    <div {...rootProps} className={classNames(baseClassNames, className)} style={style}>\n      {before && <div className=\"PanelHeaderContent__before\">{before}</div>}\n      <InComponent {...inProps} className=\"PanelHeaderContent__in\" onClick={onClick}>\n        {status && <div className=\"PanelHeaderContent__status\">{status}</div>}\n        <div className=\"PanelHeaderContent__children\">\n          <span className=\"PanelHeaderContent__children-in\">{children}</span>\n          {aside && <div className=\"PanelHeaderContent__aside\">{aside}</div>}\n        </div>\n        {before && <div className=\"PanelHeaderContent__width\" />}\n      </InComponent>\n    </div>\n  );\n};\n\nexport default PanelHeaderContent;\n"]},"metadata":{},"sourceType":"module"}
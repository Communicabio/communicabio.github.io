{"ast":null,"code":"import { createContext } from 'react';\nexport var Appearance;\n\n(function (Appearance) {\n  Appearance[\"DARK\"] = \"dark\";\n  Appearance[\"LIGHT\"] = \"light\";\n})(Appearance || (Appearance = {}));\n\nexport var Scheme;\n\n(function (Scheme) {\n  Scheme[\"DEPRECATED_CLIENT_LIGHT\"] = \"client_light\";\n  Scheme[\"DEPRECATED_CLIENT_DARK\"] = \"client_dark\";\n  Scheme[\"BRIGHT_LIGHT\"] = \"bright_light\";\n  Scheme[\"SPACE_GRAY\"] = \"space_gray\";\n})(Scheme || (Scheme = {}));\n\nexport var WebviewType;\n\n(function (WebviewType) {\n  WebviewType[\"VKAPPS\"] = \"vkapps\";\n  WebviewType[\"INTERNAL\"] = \"internal\";\n})(WebviewType || (WebviewType = {}));\n\nexport var ConfigProviderContext = createContext({});","map":{"version":3,"sources":["../../../../src/components/ConfigProvider/ConfigProviderContext.tsx"],"names":["Appearance","Scheme","WebviewType","ConfigProviderContext","createContext"],"mappings":"AAAA,SAAA,aAAA,QAAA,OAAA;AAGA,OAAA,IAAA,UAAA;;WAAYA,U;AAAAA,EAAAA,U,QAAAA,G,MAAAA;AAAAA,EAAAA,U,SAAAA,G,OAAAA;GAAAA,U,KAAAA,U;;AAKZ,OAAA,IAAA,MAAA;;WAAYC,M;AAAAA,EAAAA,M,2BAAAA,G,cAAAA;AAAAA,EAAAA,M,0BAAAA,G,aAAAA;AAAAA,EAAAA,M,gBAAAA,G,cAAAA;AAAAA,EAAAA,M,cAAAA,G,YAAAA;GAAAA,M,KAAAA,M;;AAOZ,OAAA,IAAA,WAAA;;WAAYC,W;AAAAA,EAAAA,W,UAAAA,G,QAAAA;AAAAA,EAAAA,W,YAAAA,G,UAAAA;GAAAA,W,KAAAA,W;;AAiCZ,OAAO,IAAMC,qBAAqB,GAAGC,aAAa,CAA3C,EAA2C,CAA3C","sourcesContent":["import { createContext } from 'react';\nimport { AppearanceSchemeType, AppearanceType } from '@vkontakte/vk-bridge';\n\nexport enum Appearance {\n  DARK = 'dark',\n  LIGHT = 'light',\n}\n\nexport enum Scheme {\n  DEPRECATED_CLIENT_LIGHT = 'client_light',\n  DEPRECATED_CLIENT_DARK = 'client_dark',\n  BRIGHT_LIGHT = 'bright_light',\n  SPACE_GRAY = 'space_gray',\n}\n\nexport enum WebviewType {\n  VKAPPS = 'vkapps',\n  INTERNAL = 'internal',\n}\n\nexport interface ConfigProviderContextInterface {\n  /**\n   * Цветовая схема приложения\n   */\n  scheme?: AppearanceSchemeType;\n  /**\n   * Подсказывает приложению, обёрнутому в `ConfigProvider`, где открыто приложение: внутри webview или в мобильном браузере\n   */\n  isWebView?: boolean;\n  /**\n   * Тип вебвью.<br>\n   * В случае `WebviewType.VKAPPS` интерфейс будет адаптирован для отображения в вебвью Mini Apps (системные контролы в правой части шапки)\n   */\n  webviewType?: WebviewType.INTERNAL | WebviewType.VKAPPS;\n  /**\n   * Тип приложения\n   */\n  app?: string;\n  /**\n   * Тип цветовой схемы – `light` или `dark`\n   */\n  appearance?: AppearanceType;\n  /**\n   * Включена ли анимация переходов между экранами в `Root` и `View`\n   */\n  transitionMotionEnabled?: boolean;\n}\n\nexport const ConfigProviderContext = createContext<ConfigProviderContextInterface>({});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport Touch from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\nexport function precisionRound(number, precision) {\n  var factor = Math.pow(10, precision || 1);\n  return Math.round(number * factor) / factor;\n}\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inherits(Slider, _Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      var absolutePosition = _this.validateAbsolute(e.startX - _this.state.containerLeft);\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      _this.onChange(_this.percentToValue(percentPosition), e);\n\n      if (_this.isControlledOutside) {\n        _this.setState({\n          startX: absolutePosition\n        });\n      } else {\n        _this.setState({\n          startX: absolutePosition,\n          percentPosition: percentPosition\n        });\n      }\n\n      var target = e.originalEvent.target;\n\n      _this.setState({\n        active: !!target.closest('.Slider__thumb')\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      var absolutePosition = _this.validateAbsolute(_this.state.startX + (e.shiftX || 0));\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      _this.onChange(_this.percentToValue(percentPosition), e);\n\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          percentPosition: percentPosition\n        });\n      }\n\n      e.originalEvent.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function () {\n      _this.setState({\n        active: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function (callback) {\n      _this.setState({\n        containerLeft: _this.container.offsetLeft,\n        containerWidth: _this.container.offsetWidth\n      }, function () {\n        typeof callback === 'function' && callback();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    _this.state = {\n      startX: 0,\n      containerLeft: 0,\n      percentPosition: 0,\n      active: false,\n      containerWidth: 0\n    };\n    _this.isControlledOutside = _this.props.hasOwnProperty('value');\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"onChange\",\n    value: function onChange(value, e) {\n      this.props.onChange && this.props.onChange(value, e);\n    }\n  }, {\n    key: \"validateAbsolute\",\n    value: function validateAbsolute(absolute) {\n      var res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n      if (this.props.step > 0) {\n        var stepCount = (this.props.max - this.props.min) / this.props.step;\n        var absStep = this.state.containerWidth / stepCount;\n        res = Math.round(res / absStep) * absStep;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"validatePercent\",\n    value: function validatePercent(percent) {\n      return Math.max(0, Math.min(percent, 100));\n    }\n  }, {\n    key: \"absoluteToPecent\",\n    value: function absoluteToPecent(absolute) {\n      return absolute * 100 / this.state.containerWidth;\n    }\n  }, {\n    key: \"percentToValue\",\n    value: function percentToValue(percent) {\n      var res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n\n      if (this.props.step > 0) {\n        var stepFloatPart = \"\".concat(this.props.step).split('.')[1] || '';\n        return precisionRound(res, stepFloatPart.length);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"valueToPercent\",\n    value: function valueToPercent(value) {\n      return (value - this.props.min) * 100 / (this.props.max - this.props.min);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (canUseDOM) {\n        window.addEventListener('resize', this.onResize);\n        this.onResize(function () {\n          _this2.setState({\n            percentPosition: _this2.validatePercent(_this2.valueToPercent(_this2.value))\n          });\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.isControlledOutside && this.props.value !== prevProps.value) {\n        this.setState({\n          percentPosition: this.validatePercent(this.valueToPercent(this.props.value))\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step,\n          value = _this$props.value,\n          defaultValue = _this$props.defaultValue,\n          onChange = _this$props.onChange,\n          getRootRef = _this$props.getRootRef,\n          platform = _this$props.platform,\n          top = _this$props.top,\n          bottom = _this$props.bottom,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"min\", \"max\", \"step\", \"value\", \"defaultValue\", \"onChange\", \"getRootRef\", \"platform\", \"top\", \"bottom\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(getClassName('Slider', platform), className),\n        ref: this.getRef\n      }), /*#__PURE__*/React.createElement(Touch, {\n        onStart: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        className: \"Slider__in\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Slider__dragger\",\n        style: {\n          width: \"\".concat(this.state.percentPosition, \"%\")\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames('Slider__thumb', 'Slider__thumb--end', {\n          'Slider__thumb--active': this.state.active\n        })\n      }))));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      if (this.isControlledOutside) {\n        return this.props.value;\n      } else if (this.props.hasOwnProperty('defaultValue')) {\n        return this.props.defaultValue;\n      } else {\n        return this.props.min;\n      }\n    }\n  }]);\n\n  return Slider;\n}(Component);\n\n_defineProperty(Slider, \"defaultProps\", {\n  min: 0,\n  max: 100,\n  step: 0\n});\n\nexport default withPlatform(Slider);","map":{"version":3,"sources":["../../../../src/components/Slider/Slider.tsx"],"names":["factor","Math","precision","number","Slider","Component","startX","containerLeft","percentPosition","active","containerWidth","min","max","step","absolutePosition","e","target","offsetWidth","callback","value","absolute","res","stepCount","absStep","percent","stepFloatPart","precisionRound","window","prevProps","getRootRef","className","defaultValue","onChange","platform","top","bottom","restProps","classNames","getClassName","getRef","width","withPlatform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,KAAA,MAAA,gBAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AAEA,OAAA,YAAA,MAAA,wBAAA;AACA,SAAA,SAAA,QAAA,eAAA;AAyBA,OAAO,SAAA,cAAA,CAAA,MAAA,EAAA,SAAA,EAA2D;AAChE,MAAIA,MAAM,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,EAAAA,EAAaC,SAAS,IAAnC,CAAaD,CAAb;AACA,SAAOA,IAAI,CAAJA,KAAAA,CAAWE,MAAM,GAAjBF,MAAAA,IAAP,MAAA;AACD;;IAEKG,M;;;;;AACJ,WAAA,MAAA,CAAA,KAAA,EAAgC;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAC9B,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AAD8B,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,qBAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAsBH,UAAA,CAAA,EAAmB;AAC9C,UAAMU,gBAAgB,GAAG,KAAA,CAAA,gBAAA,CAAsBC,CAAC,CAADA,MAAAA,GAAW,KAAA,CAAA,KAAA,CAA1D,aAAyB,CAAzB;;AACA,UAAMP,eAAe,GAAG,KAAA,CAAA,gBAAA,CAAxB,gBAAwB,CAAxB;;AAEA,MAAA,KAAA,CAAA,QAAA,CAAc,KAAA,CAAA,cAAA,CAAd,eAAc,CAAd,EAAA,CAAA;;AAEA,UAAI,KAAA,CAAJ,mBAAA,EAA8B;AAC5B,QAAA,KAAA,CAAA,QAAA,CAAc;AAAEF,UAAAA,MAAM,EAAEQ;AAAV,SAAd;AADF,OAAA,MAEO;AACL,QAAA,KAAA,CAAA,QAAA,CAAc;AACZR,UAAAA,MAAM,EADM,gBAAA;AAEZE,UAAAA,eAAe,EAAfA;AAFY,SAAd;AAID;;AAED,UAAMQ,MAAM,GAAGD,CAAC,CAADA,aAAAA,CAAf,MAAA;;AAEA,MAAA,KAAA,CAAA,QAAA,CAAc;AAAEN,QAAAA,MAAM,EAAE,CAAC,CAACO,MAAM,CAANA,OAAAA,CAAAA,gBAAAA;AAAZ,OAAd;AAvC8B,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EA0CH,UAAA,CAAA,EAAmB;AAC9C,UAAMF,gBAAgB,GAAG,KAAA,CAAA,gBAAA,CAAsB,KAAA,CAAA,KAAA,CAAA,MAAA,IAAqBC,CAAC,CAADA,MAAAA,IAApE,CAA+C,CAAtB,CAAzB;;AACA,UAAMP,eAAe,GAAG,KAAA,CAAA,gBAAA,CAAxB,gBAAwB,CAAxB;;AAEA,MAAA,KAAA,CAAA,QAAA,CAAc,KAAA,CAAA,cAAA,CAAd,eAAc,CAAd,EAAA,CAAA;;AAEA,UAAI,CAAC,KAAA,CAAL,mBAAA,EAA+B;AAC7B,QAAA,KAAA,CAAA,QAAA,CAAc;AAAEA,UAAAA,eAAe,EAAfA;AAAF,SAAd;AACD;;AAEDO,MAAAA,CAAC,CAADA,aAAAA,CAAAA,cAAAA;AApD8B,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,OAAA,EAuDL,YAAM;AAC/B,MAAA,KAAA,CAAA,QAAA,CAAc;AACZN,QAAAA,MAAM,EAAE;AADI,OAAd;AAxD8B,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,UAAA,EA6DL,UAAA,QAAA,EAA6B;AACtD,MAAA,KAAA,CAAA,QAAA,CAAc;AACZF,QAAAA,aAAa,EAAE,KAAA,CAAA,SAAA,CADH,UAAA;AAEZG,QAAAA,cAAc,EAAE,KAAA,CAAA,SAAA,CAAeO;AAFnB,OAAd,EAGG,YAAM;AACP,eAAA,QAAA,KAAA,UAAA,IAAkCC,QAAlC,EAAA;AAJF,OAAA;AA9D8B,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAyIC,UAAA,SAAA,EAA+B;AAC9D,MAAA,KAAA,CAAA,SAAA,GAAA,SAAA;AAEA,UAAMW,UAAU,GAAG,KAAA,CAAA,KAAA,CAAnB,UAAA;;AACA,UAAA,UAAA,EAAgB;AACd,YAAI,OAAA,UAAA,KAAJ,UAAA,EAAsC;AACpCA,UAAAA,UAAU,CAAVA,SAAU,CAAVA;AADF,SAAA,MAEO;AACLA,UAAAA,UAAU,CAAVA,OAAAA,GAAAA,SAAAA;AACD;AACF;AAnJ6B,KAAA,CAAA;;AAE9B,IAAA,KAAA,CAAA,KAAA,GAAa;AACXvB,MAAAA,MAAM,EADK,CAAA;AAEXC,MAAAA,aAAa,EAFF,CAAA;AAGXC,MAAAA,eAAe,EAHJ,CAAA;AAIXC,MAAAA,MAAM,EAJK,KAAA;AAKXC,MAAAA,cAAc,EAAE;AALL,KAAb;AAOA,IAAA,KAAA,CAAA,mBAAA,GAA2B,KAAA,CAAA,KAAA,CAAA,cAAA,CAA3B,OAA2B,CAA3B;AAT8B,WAAA,KAAA;AAU/B;;;;6BA4DQS,K,EAAeJ,C,EAAe;AACrC,WAAA,KAAA,CAAA,QAAA,IAAuB,KAAA,KAAA,CAAA,QAAA,CAAA,KAAA,EAAvB,CAAuB,CAAvB;AACD;;;qCAEgBK,Q,EAAkB;AACjC,UAAIC,GAAG,GAAGpB,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYA,IAAI,CAAJA,GAAAA,CAAAA,QAAAA,EAAmB,KAAA,KAAA,CAAzC,cAAsBA,CAAZA,CAAV;;AAEA,UAAI,KAAA,KAAA,CAAA,IAAA,GAAJ,CAAA,EAAyB;AACvB,YAAMqB,SAAS,GAAG,CAAC,KAAA,KAAA,CAAA,GAAA,GAAiB,KAAA,KAAA,CAAlB,GAAA,IAAoC,KAAA,KAAA,CAAtD,IAAA;AACA,YAAMC,OAAO,GAAG,KAAA,KAAA,CAAA,cAAA,GAAhB,SAAA;AAEAF,QAAAA,GAAG,GAAGpB,IAAI,CAAJA,KAAAA,CAAWoB,GAAG,GAAdpB,OAAAA,IAANoB,OAAAA;AACD;;AAED,aAAA,GAAA;AACD;;;oCAEeG,O,EAAiB;AAC/B,aAAOvB,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYA,IAAI,CAAJA,GAAAA,CAAAA,OAAAA,EAAnB,GAAmBA,CAAZA,CAAP;AACD;;;qCAEgBmB,Q,EAAkB;AACjC,aAAOA,QAAQ,GAARA,GAAAA,GAAiB,KAAA,KAAA,CAAxB,cAAA;AACD;;;mCAEcI,O,EAAiB;AAC9B,UAAMH,GAAG,GAAGG,OAAO,IAAI,KAAA,KAAA,CAAA,GAAA,GAAiB,KAAA,KAAA,CAA5BA,GAAO,CAAPA,GAAAA,GAAAA,GAAoD,KAAA,KAAA,CAAhE,GAAA;;AACA,UAAI,KAAA,KAAA,CAAA,IAAA,GAAJ,CAAA,EAAyB;AACvB,YAAMC,aAAa,GAAG,GAAA,MAAA,CAAG,KAAA,KAAA,CAAH,IAAA,EAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAtB,EAAA;AACA,eAAOC,cAAc,CAAA,GAAA,EAAMD,aAAa,CAAxC,MAAqB,CAArB;AACD;;AACD,aAAA,GAAA;AACD;;;mCAEcN,K,EAAe;AAC5B,aAAO,CAACA,KAAK,GAAG,KAAA,KAAA,CAAT,GAAA,IAAA,GAAA,IAAkC,KAAA,KAAA,CAAA,GAAA,GAAiB,KAAA,KAAA,CAA1D,GAAO,CAAP;AACD;;;wCAYmB;AAAA,UAAA,MAAA,GAAA,IAAA;;AAClB,UAAA,SAAA,EAAe;AACbQ,QAAAA,MAAM,CAANA,gBAAAA,CAAAA,QAAAA,EAAkC,KAAlCA,QAAAA;AACA,aAAA,QAAA,CAAc,YAAM;AAClB,UAAA,MAAI,CAAJ,QAAA,CAAc;AAAEnB,YAAAA,eAAe,EAAE,MAAI,CAAJ,eAAA,CAAqB,MAAI,CAAJ,cAAA,CAAoB,MAAI,CAA7C,KAAqB,CAArB;AAAnB,WAAd;AADF,SAAA;AAGD;AACF;;;uCAEkBoB,S,EAAwB;AACzC,UAAI,KAAA,mBAAA,IAA4B,KAAA,KAAA,CAAA,KAAA,KAAqBA,SAAS,CAA9D,KAAA,EAAsE;AACpE,aAAA,QAAA,CAAc;AAAEpB,UAAAA,eAAe,EAAE,KAAA,eAAA,CAAqB,KAAA,cAAA,CAAoB,KAAA,KAAA,CAAzC,KAAqB,CAArB;AAAnB,SAAd;AACD;AACF;;;2CAEsB;AACrBmB,MAAAA,MAAM,CAANA,mBAAAA,CAAAA,QAAAA,EAAqC,KAArCA,QAAAA;AACD;;;6BAeQ;AAAA,UAAA,WAAA,GAEyD,KAFzD,KAAA;AAAA,UACCG,SADD,GAAA,WAAA,CAAA,SAAA;AAAA,UACYnB,GADZ,GAAA,WAAA,CAAA,GAAA;AAAA,UACiBC,GADjB,GAAA,WAAA,CAAA,GAAA;AAAA,UACsBC,IADtB,GAAA,WAAA,CAAA,IAAA;AAAA,UAC4BM,KAD5B,GAAA,WAAA,CAAA,KAAA;AAAA,UACmCY,YADnC,GAAA,WAAA,CAAA,YAAA;AAAA,UAELC,QAFK,GAAA,WAAA,CAAA,QAAA;AAAA,UAEKH,UAFL,GAAA,WAAA,CAAA,UAAA;AAAA,UAEiBI,QAFjB,GAAA,WAAA,CAAA,QAAA;AAAA,UAE2BC,GAF3B,GAAA,WAAA,CAAA,GAAA;AAAA,UAEgCC,MAFhC,GAAA,WAAA,CAAA,MAAA;AAAA,UAE2CC,SAF3C,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,cAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,KAAA,EAAA,QAAA,CAAA,CAAA;;AAIP,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,QAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,QAAA,EAAb,QAAa,CAAb,EAFvB,SAEuB,CAFvB;AAGE,QAAA,GAAG,EAAE,KAAKC;AAHZ,OAAA,CAAA,EAAA,aAKE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAO,QAAA,OAAO,EAAE,KAAhB,OAAA;AAA8B,QAAA,OAAO,EAAE,KAAvC,OAAA;AAAqD,QAAA,KAAK,EAAE,KAA5D,KAAA;AAAwE,QAAA,SAAS,EAAC;AAAlF,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,iBAAA;AAAiC,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAA,GAAA,MAAA,CAAK,KAAA,KAAA,CAAL,eAAA,EAAA,GAAA;AAAP;AAAxC,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,QAAA,SAAS,EAAEH,UAAU,CAAA,eAAA,EAAA,oBAAA,EAAwC;AAC3D,mCAAyB,KAAA,KAAA,CAAW5B;AADuB,SAAxC;AADvB,OAAA,CADF,CADF,CALF,CADF;AAiBD;;;wBA/DW;AACV,UAAI,KAAJ,mBAAA,EAA8B;AAC5B,eAAO,KAAA,KAAA,CAAP,KAAA;AADF,OAAA,MAEO,IAAI,KAAA,KAAA,CAAA,cAAA,CAAJ,cAAI,CAAJ,EAA+C;AACpD,eAAO,KAAA,KAAA,CAAP,YAAA;AADK,OAAA,MAEA;AACL,eAAO,KAAA,KAAA,CAAP,GAAA;AACD;AACF;;;;EArHkBJ,S;;gBAAfD,M,kBAa+B;AACjCO,EAAAA,GAAG,EAD8B,CAAA;AAEjCC,EAAAA,GAAG,EAF8B,GAAA;AAGjCC,EAAAA,IAAI,EAAE;AAH2B,C;;AAkKrC,eAAe4B,YAAY,CAA3B,MAA2B,CAA3B","sourcesContent":["import React, { Component, HTMLAttributes } from 'react';\nimport Touch, { TouchEventHandler, TouchEvent } from '../Touch/Touch';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { HasFormLabels, HasPlatform, HasRootRef, OldRef } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nexport interface SliderProps extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'defaultValue' | 'onChange'>,\n  HasFormLabels {\n  min?: number;\n  max?: number;\n  value?: number;\n  step?: number;\n  onChange?(value: number, e: TouchEvent): void;\n  defaultValue?: number;\n}\n\nexport interface SliderState {\n  containerLeft: number;\n  startX: number;\n  percentPosition: number;\n  active: boolean;\n  containerWidth: number;\n}\n\nexport type OnSliderResize = (callback?: VoidFunction | Event) => void;\n\nexport function precisionRound(number: number, precision: number) {\n  let factor = Math.pow(10, precision || 1);\n  return Math.round(number * factor) / factor;\n}\n\nclass Slider extends Component<SliderProps, SliderState> {\n  constructor(props: SliderProps) {\n    super(props);\n    this.state = {\n      startX: 0,\n      containerLeft: 0,\n      percentPosition: 0,\n      active: false,\n      containerWidth: 0,\n    };\n    this.isControlledOutside = this.props.hasOwnProperty('value');\n  }\n\n  static defaultProps: SliderProps = {\n    min: 0,\n    max: 100,\n    step: 0,\n  };\n\n  isControlledOutside: boolean;\n\n  container: HTMLDivElement;\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(e.startX - this.state.containerLeft);\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n\n    this.onChange(this.percentToValue(percentPosition), e);\n\n    if (this.isControlledOutside) {\n      this.setState({ startX: absolutePosition });\n    } else {\n      this.setState({\n        startX: absolutePosition,\n        percentPosition,\n      });\n    }\n\n    const target = e.originalEvent.target as HTMLElement;\n\n    this.setState({ active: !!target.closest('.Slider__thumb') });\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n\n    this.onChange(this.percentToValue(percentPosition), e);\n\n    if (!this.isControlledOutside) {\n      this.setState({ percentPosition });\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  onEnd: TouchEventHandler = () => {\n    this.setState({\n      active: false,\n    });\n  };\n\n  onResize: OnSliderResize = (callback?: VoidFunction) => {\n    this.setState({\n      containerLeft: this.container.offsetLeft,\n      containerWidth: this.container.offsetWidth,\n    }, () => {\n      typeof callback === 'function' && callback();\n    });\n  };\n\n  onChange(value: number, e: TouchEvent) {\n    this.props.onChange && this.props.onChange(value, e);\n  }\n\n  validateAbsolute(absolute: number) {\n    let res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n    if (this.props.step > 0) {\n      const stepCount = (this.props.max - this.props.min) / this.props.step;\n      const absStep = this.state.containerWidth / stepCount;\n\n      res = Math.round(res / absStep) * absStep;\n    }\n\n    return res;\n  }\n\n  validatePercent(percent: number) {\n    return Math.max(0, Math.min(percent, 100));\n  }\n\n  absoluteToPecent(absolute: number) {\n    return absolute * 100 / this.state.containerWidth;\n  }\n\n  percentToValue(percent: number) {\n    const res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n    if (this.props.step > 0) {\n      const stepFloatPart = `${this.props.step}`.split('.')[1] || '';\n      return precisionRound(res, stepFloatPart.length);\n    }\n    return res;\n  }\n\n  valueToPercent(value: number) {\n    return (value - this.props.min) * 100 / (this.props.max - this.props.min);\n  }\n\n  get value() {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return this.props.min;\n    }\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('resize', this.onResize);\n      this.onResize(() => {\n        this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.value)) });\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: SliderProps) {\n    if (this.isControlledOutside && this.props.value !== prevProps.value) {\n      this.setState({ percentPosition: this.validatePercent(this.valueToPercent(this.props.value)) });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  getRef: OldRef<HTMLDivElement> = (container: HTMLDivElement) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render() {\n    const { className, min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, top, bottom, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(getClassName('Slider', platform), className)}\n        ref={this.getRef}\n      >\n        <Touch onStart={this.onStart} onMoveX={this.onMoveX} onEnd={this.onEnd} className=\"Slider__in\">\n          <div className=\"Slider__dragger\" style={{ width: `${this.state.percentPosition}%` }}>\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end', {\n                'Slider__thumb--active': this.state.active,\n              })}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(Slider);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from 'react';\nimport classNames from '../../lib/classNames';\n\nfunction calcStrokeDashOffset(value, radius) {\n  var progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nvar PullToRefreshSpinner = function PullToRefreshSpinner(_ref) {\n  var on = _ref.on,\n      progress = _ref.progress,\n      size = _ref.size,\n      strokeWidth = _ref.strokeWidth,\n      style = _ref.style;\n  var radius = 0.5 * size - 0.5 * strokeWidth;\n  var dasharray = 2 * Math.PI * radius;\n  var circleCenter = 0.5 * size;\n  var dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames('PullToRefresh__spinner', {\n      'PullToRefresh__spinner--on': on\n    }),\n    style: style\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"PullToRefresh__spinner-self\",\n    style: {\n      width: size,\n      height: size\n    },\n    viewBox: \"0 0 \".concat(size, \" \").concat(size),\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      width: size,\n      height: size,\n      transformOrigin: \"\".concat(circleCenter, \"px \").concat(circleCenter, \"px\")\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"PullToRefresh__spinner-path\",\n    fill: \"none\",\n    strokeDasharray: dasharray,\n    strokeDashoffset: dashoffset,\n    strokeWidth: strokeWidth,\n    strokeLinecap: \"round\",\n    cx: circleCenter,\n    cy: circleCenter,\n    r: radius\n  }))));\n};\n\nPullToRefreshSpinner.defaultProps = {\n  size: 24,\n  strokeWidth: 2.5,\n  on: true,\n  progress: null\n};\nexport default React.memo(PullToRefreshSpinner);","map":{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"names":["progress","value","Math","PullToRefreshSpinner","on","size","strokeWidth","style","radius","dasharray","circleCenter","dashoffset","calcStrokeDashOffset","classNames","width","height","transformOrigin","React"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;;AAEA,SAAA,oBAAA,CAAA,KAAA,EAAA,MAAA,EAA6D;AAC3D,MAAMA,QAAQ,GAAGC,KAAK,GAAtB,GAAA;AACA,SAAO,IAAIC,IAAI,CAAR,EAAA,GAAA,MAAA,IAAwB,IAA/B,QAAO,CAAP;AACD;;AASD,IAAMC,oBAAkE,GAAG,SAArEA,oBAAqE,CAAA,IAAA,EAM1C;AAAA,MAL/BC,EAK+B,GAAA,IAAA,CAL/BA,EAK+B;AAAA,MAJ/BJ,QAI+B,GAAA,IAAA,CAJ/BA,QAI+B;AAAA,MAH/BK,IAG+B,GAAA,IAAA,CAH/BA,IAG+B;AAAA,MAF/BC,WAE+B,GAAA,IAAA,CAF/BA,WAE+B;AAAA,MAD/BC,KAC+B,GAAA,IAAA,CAD/BA,KAC+B;AAC/B,MAAMC,MAAM,GAAG,MAAA,IAAA,GAAa,MAA5B,WAAA;AACA,MAAMC,SAAS,GAAG,IAAIP,IAAI,CAAR,EAAA,GAAlB,MAAA;AACA,MAAMQ,YAAY,GAAG,MAArB,IAAA;AAEA,MAAMC,UAAU,GAAGC,oBAAoB,CAACR,EAAE,GAAA,EAAA,GAAH,QAAA,EAAvC,MAAuC,CAAvC;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAES,UAAU,CAAA,wBAAA,EAA2B;AAC9C,oCAA8BT;AADgB,KAA3B,CADvB;AAIE,IAAA,KAAK,EAAEG;AAJT,GAAA,EAAA,aAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EADX,6BAAA;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EADA,IAAA;AAELC,MAAAA,MAAM,EAAEV;AAFH,KAFT;AAME,IAAA,OAAO,EAAA,OAAA,MAAA,CAAA,IAAA,EAAA,GAAA,EAAA,MAAA,CANT,IAMS,CANT;AAOE,IAAA,KAAK,EAAC;AAPR,GAAA,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,KAAK,EADA,IAAA;AAELC,MAAAA,MAAM,EAFD,IAAA;AAGLC,MAAAA,eAAe,EAAA,GAAA,MAAA,CAAA,YAAA,EAAA,KAAA,EAAA,MAAA,CAAA,YAAA,EAAA,IAAA;AAHV;AADT,GAAA,EAAA,aAOE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,SAAS,EADX,6BAAA;AAEE,IAAA,IAAI,EAFN,MAAA;AAGE,IAAA,eAAe,EAHjB,SAAA;AAIE,IAAA,gBAAgB,EAJlB,UAAA;AAKE,IAAA,WAAW,EALb,WAAA;AAME,IAAA,aAAa,EANf,OAAA;AAOE,IAAA,EAAE,EAPJ,YAAA;AAQE,IAAA,EAAE,EARJ,YAAA;AASE,IAAA,CAAC,EAAER;AATL,GAAA,CAPF,CATF,CANF,CADF;AAbF,CAAA;;AAqDAL,oBAAoB,CAApBA,YAAAA,GAAoC;AAClCE,EAAAA,IAAI,EAD8B,EAAA;AAElCC,EAAAA,WAAW,EAFuB,GAAA;AAGlCF,EAAAA,EAAE,EAHgC,IAAA;AAIlCJ,EAAAA,QAAQ,EAAE;AAJwB,CAApCG;AAOA,eAAec,KAAK,CAALA,IAAAA,CAAf,oBAAeA,CAAf","sourcesContent":["import React, { FunctionComponent, HTMLAttributes } from 'react';\nimport classNames from '../../lib/classNames';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends HTMLAttributes<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n}\n\nconst PullToRefreshSpinner: FunctionComponent<PullToRefreshSpinnerProps> = ({\n  on,\n  progress,\n  size,\n  strokeWidth,\n  style,\n}: PullToRefreshSpinnerProps) => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <div\n      className={classNames('PullToRefresh__spinner', {\n        'PullToRefresh__spinner--on': on,\n      })}\n      style={style}\n    >\n      <svg\n        className=\"PullToRefresh__spinner-self\"\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            className=\"PullToRefresh__spinner-path\"\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nPullToRefreshSpinner.defaultProps = {\n  size: 24,\n  strokeWidth: 2.5,\n  on: true,\n  progress: null,\n};\n\nexport default React.memo(PullToRefreshSpinner);\n"]},"metadata":{},"sourceType":"module"}
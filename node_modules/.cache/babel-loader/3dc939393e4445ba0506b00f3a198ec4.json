{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport PanelHeaderButton from '../PanelHeaderButton/PanelHeaderButton';\nimport { ANDROID } from '../../lib/platform';\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DoneOutline from '@vkontakte/icons/dist/28/done_outline';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar PanelHeaderEdit = function PanelHeaderEdit(_ref) {\n  var isActive = _ref.isActive,\n      editLabel = _ref.editLabel,\n      doneLabel = _ref.doneLabel,\n      restProps = _objectWithoutProperties(_ref, [\"isActive\", \"editLabel\", \"doneLabel\"]);\n\n  var iOSText = isActive ? doneLabel : editLabel;\n  var AndroidIcon = isActive ? /*#__PURE__*/React.createElement(Icon28DoneOutline, null) : /*#__PURE__*/React.createElement(Icon28EditOutline, null);\n  var platform = usePlatform();\n  return /*#__PURE__*/React.createElement(PanelHeaderButton, restProps, platform === ANDROID ? AndroidIcon : iOSText);\n};\n\nPanelHeaderEdit.defaultProps = {\n  isActive: false,\n  editLabel: 'Редактировать',\n  doneLabel: 'Готово'\n};\nexport default PanelHeaderEdit;","map":{"version":3,"sources":["../../../../src/components/PanelHeaderEdit/PanelHeaderEdit.tsx"],"names":["PanelHeaderEdit","isActive","editLabel","doneLabel","restProps","iOSText","AndroidIcon","platform","usePlatform"],"mappings":";AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,iBAAA,MAAA,wCAAA;AACA,SAAA,OAAA,QAAA,oBAAA;AACA,OAAA,iBAAA,MAAA,uCAAA;AACA,OAAA,iBAAA,MAAA,uCAAA;AACA,OAAA,WAAA,MAAA,yBAAA;;AAiBA,IAAMA,eAAwD,GAAG,SAA3DA,eAA2D,CAAA,IAAA,EAKrC;AAAA,MAJ1BC,QAI0B,GAAA,IAAA,CAJ1BA,QAI0B;AAAA,MAH1BC,SAG0B,GAAA,IAAA,CAH1BA,SAG0B;AAAA,MAF1BC,SAE0B,GAAA,IAAA,CAF1BA,SAE0B;AAAA,MADvBC,SACuB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,CAAA,CAAA;;AAC1B,MAAMC,OAAO,GAAGJ,QAAQ,GAAA,SAAA,GAAxB,SAAA;AACA,MAAMK,WAAW,GAAGL,QAAQ,GAAA,aAAG,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAH,IAAG,CAAH,GAAA,aAA2B,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAvD,IAAuD,CAAvD;AACA,MAAMM,QAAQ,GAAGC,WAAjB,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,SAAA,EACGD,QAAQ,KAARA,OAAAA,GAAAA,WAAAA,GAFL,OACE,CADF;AAVF,CAAA;;AAiBAP,eAAe,CAAfA,YAAAA,GAA+B;AAC7BC,EAAAA,QAAQ,EADqB,KAAA;AAE7BC,EAAAA,SAAS,EAFoB,eAAA;AAG7BC,EAAAA,SAAS,EAAE;AAHkB,CAA/BH;AAMA,eAAA,eAAA","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport PanelHeaderButton, { PanelHeaderButtonProps } from '../PanelHeaderButton/PanelHeaderButton';\nimport { ANDROID } from '../../lib/platform';\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DoneOutline from '@vkontakte/icons/dist/28/done_outline';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface PanelHeaderEditProps extends PanelHeaderButtonProps {\n  /**\n   * Включен ли режим редактирования\n   */\n  isActive?: boolean;\n  /**\n   * iOS only. Текст кнопки, когда режим редактирования не активен\n   */\n  editLabel?: string;\n  /**\n   * iOS only. Текст кнопки при активном режиме редактирования для выхода из него\n   */\n  doneLabel?: string;\n}\n\nconst PanelHeaderEdit: FunctionComponent<PanelHeaderEditProps> = ({\n  isActive,\n  editLabel,\n  doneLabel,\n  ...restProps\n}: PanelHeaderEditProps) => {\n  const iOSText = isActive ? doneLabel : editLabel;\n  const AndroidIcon = isActive ? <Icon28DoneOutline /> : <Icon28EditOutline />;\n  const platform = usePlatform();\n\n  return (\n    <PanelHeaderButton {...restProps}>\n      {platform === ANDROID ? AndroidIcon : iOSText}\n    </PanelHeaderButton>\n  );\n};\n\nPanelHeaderEdit.defaultProps = {\n  isActive: false,\n  editLabel: 'Редактировать',\n  doneLabel: 'Готово',\n};\n\nexport default PanelHeaderEdit;\n"]},"metadata":{},"sourceType":"module"}
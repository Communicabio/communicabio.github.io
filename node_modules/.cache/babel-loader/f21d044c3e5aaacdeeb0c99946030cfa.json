{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport PopoutWrapper from '../PopoutWrapper/PopoutWrapper';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { ANDROID } from '../../lib/platform';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar Alert = /*#__PURE__*/function (_Component) {\n  _inherits(Alert, _Component);\n\n  var _super = _createSuper(Alert);\n\n  function Alert(props) {\n    var _this;\n\n    _classCallCheck(this, Alert);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"element\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onItemClick\", function (item) {\n      return function () {\n        var action = item.action,\n            autoclose = item.autoclose;\n\n        if (autoclose) {\n          _this.setState({\n            closing: true\n          });\n\n          _this.waitTransitionFinish(function (e) {\n            if (!e || e.propertyName === 'opacity') {\n              autoclose && _this.props.onClose();\n              action && action();\n            }\n          });\n        } else {\n          action && action();\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClose\", function () {\n      _this.setState({\n        closing: true\n      });\n\n      _this.waitTransitionFinish(function (e) {\n        if (!e || e.propertyName === 'opacity') {\n          _this.props.onClose();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stopPropagation\", function (e) {\n      e.stopPropagation();\n    });\n\n    _this.element = React.createRef();\n    _this.state = {\n      closing: false\n    };\n    return _this;\n  }\n\n  _createClass(Alert, [{\n    key: \"waitTransitionFinish\",\n    value: function waitTransitionFinish(eventHandler) {\n      if (transitionEvents.supported) {\n        var eventName = transitionEvents.prefix ? transitionEvents.prefix + 'TransitionEnd' : 'transitionend';\n        this.element.current.removeEventListener(eventName, eventHandler);\n        this.element.current.addEventListener(eventName, eventHandler);\n      } else {\n        setTimeout(eventHandler.bind(this), this.props.platform === ANDROID ? 200 : 300);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          actionsLayout = _this$props.actionsLayout,\n          children = _this$props.children,\n          className = _this$props.className,\n          style = _this$props.style,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"actions\", \"actionsLayout\", \"children\", \"className\", \"style\", \"platform\"]);\n\n      var closing = this.state.closing;\n      return /*#__PURE__*/React.createElement(PopoutWrapper, {\n        className: className,\n        closing: closing,\n        style: style,\n        onClick: this.onClose\n      }, /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n        ref: this.element,\n        onClick: this.stopPropagation,\n        className: classNames(getClassName('Alert', platform), {\n          'Alert--v': actionsLayout === 'vertical',\n          'Alert--h': actionsLayout === 'horizontal',\n          'Alert--closing': closing\n        })\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Alert__content\"\n      }, children), /*#__PURE__*/React.createElement(\"footer\", {\n        className: \"Alert__footer\"\n      }, actions.map(function (action, i) {\n        return /*#__PURE__*/React.createElement(Tappable, {\n          Component: \"button\",\n          className: classNames('Alert__btn', \"Alert__btn--\".concat(action.mode)),\n          onClick: _this2.onItemClick(action),\n          key: \"alert-action-\".concat(i)\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: action.title\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return Alert;\n}(Component);\n\n_defineProperty(Alert, \"defaultProps\", {\n  actionsLayout: 'horizontal',\n  actions: []\n});\n\nexport default withPlatform(Alert);","map":{"version":3,"sources":["../../../../src/components/Alert/Alert.tsx"],"names":["Alert","Component","React","closing","actionsLayout","actions","action","autoclose","item","e","eventHandler","transitionEvents","eventName","setTimeout","children","className","style","platform","restProps","onClose","classNames","getClassName","__html","title","withPlatform"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AACA,OAAA,aAAA,MAAA,gCAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,gBAAA,MAAA,4BAAA;AACA,SAAA,OAAA,QAAA,oBAAA;AAEA,OAAA,YAAA,MAAA,wBAAA;;IAuBMA,K;;;;;AACJ,WAAA,KAAA,CAAA,KAAA,EAA+B;AAAA,QAAA,KAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AAC7B,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA;;AAD6B,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,aAAA,EAeA,UAAA,IAAA,EAAA;AAAA,aAAgC,YAAM;AAAA,YAC3DM,MAD2D,GACrCE,IADqC,CAAA,MAAA;AAAA,YACnDD,SADmD,GACrCC,IADqC,CAAA,SAAA;;AAGnE,YAAA,SAAA,EAAe;AACb,UAAA,KAAA,CAAA,QAAA,CAAc;AAAEL,YAAAA,OAAO,EAAE;AAAX,WAAd;;AACA,UAAA,KAAA,CAAA,oBAAA,CAA0B,UAAA,CAAA,EAAyB;AACjD,gBAAI,CAAA,CAAA,IAAMM,CAAC,CAADA,YAAAA,KAAV,SAAA,EAAwC;AACtCF,cAAAA,SAAS,IAAI,KAAA,CAAA,KAAA,CAAbA,OAAa,EAAbA;AACAD,cAAAA,MAAM,IAAIA,MAAVA,EAAAA;AACD;AAJH,WAAA;AAFF,SAAA,MAQO;AACLA,UAAAA,MAAM,IAAIA,MAAVA,EAAAA;AACD;AAb4B,OAAA;AAfA,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,SAAA,EA+BP,YAAM;AAC5B,MAAA,KAAA,CAAA,QAAA,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,MAAA,KAAA,CAAA,oBAAA,CAA0B,UAAA,CAAA,EAAyB;AACjD,YAAI,CAAA,CAAA,IAAMM,CAAC,CAADA,YAAAA,KAAV,SAAA,EAAwC;AACtC,UAAA,KAAA,CAAA,KAAA,CAAA,OAAA;AACD;AAHH,OAAA;AAjC6B,KAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,sBAAA,CAAA,KAAA,CAAA,EAAA,iBAAA,EAwCM,UAAA,CAAA,EAAuB;AAC1DA,MAAAA,CAAC,CAADA,eAAAA;AAzC6B,KAAA,CAAA;;AAE7B,IAAA,KAAA,CAAA,OAAA,GAAeP,KAAK,CAApB,SAAeA,EAAf;AACA,IAAA,KAAA,CAAA,KAAA,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAH6B,WAAA,KAAA;AAM9B;;;;yCAsCoBO,Y,EAAoC;AACvD,UAAIC,gBAAgB,CAApB,SAAA,EAAgC;AAC9B,YAAMC,SAAS,GAAGD,gBAAgB,CAAhBA,MAAAA,GAA0BA,gBAAgB,CAAhBA,MAAAA,GAA1BA,eAAAA,GAAlB,eAAA;AAEA,aAAA,OAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,SAAA,EAAA,YAAA;AACA,aAAA,OAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,SAAA,EAAA,YAAA;AAJF,OAAA,MAKO;AACLE,QAAAA,UAAU,CAACH,YAAY,CAAZA,IAAAA,CAAD,IAACA,CAAD,EAA0B,KAAA,KAAA,CAAA,QAAA,KAAA,OAAA,GAAA,GAAA,GAApCG,GAAU,CAAVA;AACD;AACF;;;6BAEQ;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,WAAA,GACgF,KADhF,KAAA;AAAA,UACCR,OADD,GAAA,WAAA,CAAA,OAAA;AAAA,UACUD,aADV,GAAA,WAAA,CAAA,aAAA;AAAA,UACyBU,QADzB,GAAA,WAAA,CAAA,QAAA;AAAA,UACmCC,SADnC,GAAA,WAAA,CAAA,SAAA;AAAA,UAC8CC,KAD9C,GAAA,WAAA,CAAA,KAAA;AAAA,UACqDC,QADrD,GAAA,WAAA,CAAA,QAAA;AAAA,UACkEC,SADlE,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,SAAA,EAAA,eAAA,EAAA,UAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;;AAAA,UAECf,OAFD,GAEa,KAFb,KAEa,CAFb,OAAA;AAIP,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AACE,QAAA,SAAS,EADX,SAAA;AAEE,QAAA,OAAO,EAFT,OAAA;AAGE,QAAA,KAAK,EAHP,KAAA;AAIE,QAAA,OAAO,EAAE,KAAKgB;AAJhB,OAAA,EAAA,aAME,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,QAAA,GAAG,EAAE,KAFP,OAAA;AAGE,QAAA,OAAO,EAAE,KAHX,eAAA;AAIE,QAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,OAAA,EAAb,QAAa,CAAb,EAAkC;AACrD,sBAAYjB,aAAa,KAD4B,UAAA;AAErD,sBAAYA,aAAa,KAF4B,YAAA;AAGrD,4BAAkBD;AAHmC,SAAlC;AAJvB,OAAA,CAAA,EAAA,aAUE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAVF,QAUE,CAVF,EAAA,aAWE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAQ,QAAA,SAAS,EAAC;AAAlB,OAAA,EACG,OAAO,CAAP,GAAA,CAAY,UAAA,MAAA,EAAA,CAAA,EAA6C;AACxD,eAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,UAAA,SAAS,EADX,QAAA;AAEE,UAAA,SAAS,EAAEiB,UAAU,CAAA,YAAA,EAAA,eAAA,MAAA,CAA8Bd,MAAM,CAF3D,IAEuB,CAAA,CAFvB;AAGE,UAAA,OAAO,EAAE,MAAI,CAAJ,WAAA,CAHX,MAGW,CAHX;AAIE,UAAA,GAAG,EAAA,gBAAA,MAAA,CAAA,CAAA;AAJL,SAAA,EAAA,aAME,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,uBAAuB,EAAE;AAAEgB,YAAAA,MAAM,EAAEhB,MAAM,CAACiB;AAAjB;AAA/B,SAAA,CANF,CADF;AApBV,OAmBS,CADH,CAXF,CANF,CADF;AAmCD;;;;EA/FiBtB,S;;gBAAdD,K,kBAW8B;AAChCI,EAAAA,aAAa,EADmB,YAAA;AAEhCC,EAAAA,OAAO,EAAE;AAFuB,C;;AAuFpC,eAAemB,YAAY,CAA3B,KAA2B,CAA3B","sourcesContent":["import React, { Component, HTMLAttributes, MouseEventHandler, SyntheticEvent } from 'react';\nimport Tappable from '../Tappable/Tappable';\nimport PopoutWrapper from '../PopoutWrapper/PopoutWrapper';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport transitionEvents from '../../lib/transitionEvents';\nimport { ANDROID } from '../../lib/platform';\nimport { HasPlatform } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface AlertActionInterface {\n  title: string;\n  action?(): void;\n  autoclose?: boolean;\n  mode: 'cancel' | 'destructive' | 'default';\n}\n\nexport interface AlertProps extends HTMLAttributes<HTMLElement>, HasPlatform {\n  actionsLayout?: 'vertical' | 'horizontal';\n  actions?: AlertActionInterface[];\n  onClose?(): void;\n}\n\nexport interface AlertState {\n  closing: boolean;\n}\n\ntype TransitionEndHandler = (e?: TransitionEvent) => void;\n\ntype ItemClickHander = (item: AlertActionInterface) => () => void;\n\nclass Alert extends Component<AlertProps, AlertState> {\n  constructor(props: AlertProps) {\n    super(props);\n    this.element = React.createRef();\n    this.state = {\n      closing: false,\n    };\n  }\n\n  element: React.RefObject<HTMLDivElement>;\n\n  static defaultProps: AlertProps = {\n    actionsLayout: 'horizontal',\n    actions: [],\n  };\n\n  onItemClick: ItemClickHander = (item: AlertActionInterface) => () => {\n    const { action, autoclose } = item;\n\n    if (autoclose) {\n      this.setState({ closing: true });\n      this.waitTransitionFinish((e?: TransitionEvent) => {\n        if (!e || e.propertyName === 'opacity') {\n          autoclose && this.props.onClose();\n          action && action();\n        }\n      });\n    } else {\n      action && action();\n    }\n  };\n\n  onClose: VoidFunction = () => {\n    this.setState({ closing: true });\n    this.waitTransitionFinish((e?: TransitionEvent) => {\n      if (!e || e.propertyName === 'opacity') {\n        this.props.onClose();\n      }\n    });\n  };\n\n  stopPropagation: MouseEventHandler = (e: SyntheticEvent) => {\n    e.stopPropagation();\n  };\n\n  waitTransitionFinish(eventHandler: TransitionEndHandler) {\n    if (transitionEvents.supported) {\n      const eventName = transitionEvents.prefix ? transitionEvents.prefix + 'TransitionEnd' : 'transitionend';\n\n      this.element.current.removeEventListener(eventName, eventHandler);\n      this.element.current.addEventListener(eventName, eventHandler);\n    } else {\n      setTimeout(eventHandler.bind(this), this.props.platform === ANDROID ? 200 : 300);\n    }\n  }\n\n  render() {\n    const { actions, actionsLayout, children, className, style, platform, ...restProps } = this.props;\n    const { closing } = this.state;\n\n    return (\n      <PopoutWrapper\n        className={className}\n        closing={closing}\n        style={style}\n        onClick={this.onClose}\n      >\n        <div\n          {...restProps}\n          ref={this.element}\n          onClick={this.stopPropagation}\n          className={classNames(getClassName('Alert', platform), {\n            'Alert--v': actionsLayout === 'vertical',\n            'Alert--h': actionsLayout === 'horizontal',\n            'Alert--closing': closing,\n          })}\n        >\n          <div className=\"Alert__content\">{children}</div>\n          <footer className=\"Alert__footer\">\n            {actions.map((action: AlertActionInterface, i: number) => {\n              return (\n                <Tappable\n                  Component=\"button\"\n                  className={classNames('Alert__btn', `Alert__btn--${action.mode}`)}\n                  onClick={this.onItemClick(action)}\n                  key={`alert-action-${i}`}\n                >\n                  <span dangerouslySetInnerHTML={{ __html: action.title }} />\n                </Tappable>\n              );\n            })}\n          </footer>\n        </div>\n      </PopoutWrapper>\n    );\n  }\n}\n\nexport default withPlatform(Alert);\n"]},"metadata":{},"sourceType":"module"}
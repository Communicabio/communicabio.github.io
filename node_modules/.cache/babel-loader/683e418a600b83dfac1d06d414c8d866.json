{"ast":null,"code":"import { canUseDOM } from './dom';\nexport var OS;\n\n(function (OS) {\n  OS[\"ANDROID\"] = \"android\";\n  OS[\"IOS\"] = \"ios\";\n})(OS || (OS = {}));\n\nexport var ANDROID = OS.ANDROID;\nexport var IOS = OS.IOS;\nexport function platform(useragent) {\n  var ua = useragent || canUseDOM && navigator.userAgent || '';\n  return /android/i.test(ua) ? ANDROID : IOS;\n}\nvar osname = platform();\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\n\nexport var IS_PLATFORM_IOS = osname === IOS;\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\n\nexport var IS_PLATFORM_ANDROID = osname === ANDROID;","map":{"version":3,"sources":["../../../src/lib/platform.ts"],"names":["OS","ANDROID","IOS","ua","useragent","canUseDOM","navigator","osname","platform","IS_PLATFORM_IOS","IS_PLATFORM_ANDROID"],"mappings":"AAAA,SAAA,SAAA,QAAA,OAAA;AAEA,OAAA,IAAA,EAAA;;WAAYA,E;AAAAA,EAAAA,E,WAAAA,G,SAAAA;AAAAA,EAAAA,E,OAAAA,G,KAAAA;GAAAA,E,KAAAA,E;;AAKZ,OAAO,IAAMC,OAAO,GAAGD,EAAE,CAAlB,OAAA;AACP,OAAO,IAAME,GAAG,GAAGF,EAAE,CAAd,GAAA;AAIP,OAAO,SAAA,QAAA,CAAA,SAAA,EAA8C;AACnD,MAAMG,EAAE,GAAGC,SAAS,IAAIC,SAAS,IAAIC,SAAS,CAAnCF,SAAAA,IAAX,EAAA;AAEA,SAAO,WAAA,IAAA,CAAA,EAAA,IAAA,OAAA,GAAP,GAAA;AACD;AAED,IAAMG,MAAM,GAAGC,QAAf,EAAA;AAEA;;;;AAGA,OAAO,IAAMC,eAAwB,GAAGF,MAAM,KAAvC,GAAA;AACP;;;;AAGA,OAAO,IAAMG,mBAA4B,GAAGH,MAAM,KAA3C,OAAA","sourcesContent":["import { canUseDOM } from './dom';\n\nexport enum OS {\n  ANDROID = 'android',\n  IOS = 'ios',\n}\n\nexport const ANDROID = OS.ANDROID;\nexport const IOS = OS.IOS;\n\nexport type OSType = OS.ANDROID | OS.IOS;\n\nexport function platform(useragent?: string): OSType {\n  const ua = useragent || canUseDOM && navigator.userAgent || '';\n\n  return /android/i.test(ua) ? ANDROID : IOS;\n}\n\nconst osname = platform();\n\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_IOS: boolean = osname === IOS;\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_ANDROID: boolean = osname === ANDROID;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component, createRef } from 'react';\nimport Touch from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { precisionRound } from '../Slider/Slider';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nvar RangeSlider = /*#__PURE__*/function (_Component) {\n  _inherits(RangeSlider, _Component);\n\n  var _super = _createSuper(RangeSlider);\n\n  function RangeSlider(props) {\n    var _this;\n\n    _classCallCheck(this, RangeSlider);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"isControlledOutside\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbStart\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"thumbEnd\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (e) {\n      var absolutePosition = _this.validateAbsolute(e.startX - _this.state.containerLeft);\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      var _this$calcPercentRang = _this.calcPercentRange(percentPosition),\n          percentStart = _this$calcPercentRang.percentStart,\n          percentEnd = _this$calcPercentRang.percentEnd;\n\n      _this.onChange([_this.percentToValue(percentStart), _this.percentToValue(percentEnd)], e);\n\n      if (_this.isControlledOutside) {\n        _this.setState({\n          startX: absolutePosition\n        });\n      } else {\n        _this.setState({\n          startX: absolutePosition,\n          percentStart: percentStart,\n          percentEnd: percentEnd\n        });\n      }\n\n      var target = e.originalEvent.target;\n      var thumb = target.closest('.Slider__thumb');\n\n      if (thumb === _this.thumbStart.current) {\n        _this.setState({\n          active: 'start'\n        });\n      } else if (thumb === _this.thumbEnd.current) {\n        _this.setState({\n          active: 'end'\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMoveX\", function (e) {\n      var absolutePosition = _this.validateAbsolute(_this.state.startX + (e.shiftX || 0));\n\n      var percentPosition = _this.absoluteToPecent(absolutePosition);\n\n      var _this$calcPercentRang2 = _this.calcPercentRange(percentPosition),\n          percentStart = _this$calcPercentRang2.percentStart,\n          percentEnd = _this$calcPercentRang2.percentEnd;\n\n      _this.onChange([_this.percentToValue(percentStart), _this.percentToValue(percentEnd)], e);\n\n      if (!_this.isControlledOutside) {\n        _this.setState({\n          percentStart: percentStart,\n          percentEnd: percentEnd\n        });\n      }\n\n      e.originalEvent.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function () {\n      _this.setState({\n        active: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function (callback) {\n      _this.setState({\n        containerLeft: _this.container.offsetLeft,\n        containerWidth: _this.container.offsetWidth\n      }, function () {\n        typeof callback === 'function' && callback();\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    _this.state = {\n      startX: 0,\n      containerLeft: 0,\n      percentStart: 0,\n      percentEnd: 0,\n      active: null,\n      containerWidth: 0\n    };\n    _this.isControlledOutside = _this.props.hasOwnProperty('value');\n    _this.thumbStart = createRef();\n    _this.thumbEnd = createRef();\n    return _this;\n  }\n\n  _createClass(RangeSlider, [{\n    key: \"onChange\",\n    value: function onChange(value, e) {\n      this.props.onChange && this.props.onChange(value, e);\n    }\n  }, {\n    key: \"validateAbsolute\",\n    value: function validateAbsolute(absolute) {\n      var res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n      if (this.props.step > 0) {\n        var stepCount = (this.props.max - this.props.min) / this.props.step;\n        var absStep = this.state.containerWidth / stepCount;\n        res = Math.round(res / absStep) * absStep;\n      }\n\n      return res;\n    }\n  }, {\n    key: \"validatePercent\",\n    value: function validatePercent(_ref) {\n      var percentStart = _ref.percentStart,\n          percentEnd = _ref.percentEnd;\n      return {\n        percentStart: Math.max(0, Math.min(percentStart, 100)),\n        percentEnd: Math.max(0, Math.min(percentEnd, 100))\n      };\n    }\n  }, {\n    key: \"absoluteToPecent\",\n    value: function absoluteToPecent(absolute) {\n      return absolute * 100 / this.state.containerWidth;\n    }\n  }, {\n    key: \"calcPercentRange\",\n    value: function calcPercentRange(percent) {\n      var _this$state = this.state,\n          percentStart = _this$state.percentStart,\n          percentEnd = _this$state.percentEnd;\n\n      if (percentStart === 100) {\n        return {\n          percentStart: percent,\n          percentEnd: percentEnd\n        };\n      } else if (percentEnd === 0) {\n        return {\n          percentEnd: percent,\n          percentStart: percentStart\n        };\n      } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n        return {\n          percentStart: percent,\n          percentEnd: percentEnd\n        };\n      } else {\n        return {\n          percentEnd: percent,\n          percentStart: percentStart\n        };\n      }\n    }\n  }, {\n    key: \"percentToValue\",\n    value: function percentToValue(percent) {\n      var res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n\n      if (this.props.step > 0) {\n        var stepFloatPart = \"\".concat(this.props.step).split('.')[1] || '';\n        return precisionRound(res, stepFloatPart.length);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"valueToPercent\",\n    value: function valueToPercent(_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          valueStart = _ref3[0],\n          valueEnd = _ref3[1];\n\n      return {\n        percentStart: (valueStart - this.props.min) * 100 / (this.props.max - this.props.min),\n        percentEnd: (valueEnd - this.props.min) * 100 / (this.props.max - this.props.min)\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (canUseDOM) {\n        window.addEventListener('resize', this.onResize);\n        this.onResize(function () {\n          _this2.setState(_this2.validatePercent(_this2.valueToPercent(_this2.value)));\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.isControlledOutside && prevProps.value !== this.props.value) {\n        this.setState(this.validatePercent(this.valueToPercent(this.props.value)));\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step,\n          value = _this$props.value,\n          defaultValue = _this$props.defaultValue,\n          onChange = _this$props.onChange,\n          getRootRef = _this$props.getRootRef,\n          platform = _this$props.platform,\n          top = _this$props.top,\n          bottom = _this$props.bottom,\n          restProps = _objectWithoutProperties(_this$props, [\"className\", \"min\", \"max\", \"step\", \"value\", \"defaultValue\", \"onChange\", \"getRootRef\", \"platform\", \"top\", \"bottom\"]);\n\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n        className: classNames(getClassName('Slider', platform), className),\n        ref: this.getRef\n      }), /*#__PURE__*/React.createElement(Touch, {\n        onStart: this.onStart,\n        onMoveX: this.onMoveX,\n        onEnd: this.onEnd,\n        className: \"Slider__in\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Slider__dragger\",\n        style: {\n          width: \"\".concat(this.state.percentEnd - this.state.percentStart, \"%\"),\n          left: \"\".concat(this.state.percentStart, \"%\")\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames('Slider__thumb', 'Slider__thumb--start', {\n          'Slider__thumb--active': this.state.active === 'start'\n        }),\n        ref: this.thumbStart\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames('Slider__thumb', 'Slider__thumb--end', {\n          'Slider__thumb--active': this.state.active === 'end'\n        }),\n        ref: this.thumbEnd\n      }))));\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      if (this.isControlledOutside) {\n        return this.props.value;\n      } else if (this.props.hasOwnProperty('defaultValue')) {\n        return this.props.defaultValue;\n      } else {\n        return [this.props.min, this.props.max];\n      }\n    }\n  }]);\n\n  return RangeSlider;\n}(Component);\n\n_defineProperty(RangeSlider, \"defaultProps\", {\n  min: 0,\n  max: 100,\n  step: 0\n});\n\nexport default withPlatform(RangeSlider);","map":{"version":3,"sources":["../../../../src/components/RangeSlider/RangeSlider.tsx"],"names":["RangeSlider","Component","startX","containerLeft","percentStart","percentEnd","active","containerWidth","createRef","min","max","step","absolutePosition","e","percentPosition","target","thumb","offsetWidth","callback","value","absolute","res","Math","stepCount","absStep","percent","stepFloatPart","precisionRound","valueStart","valueEnd","window","prevProps","getRootRef","className","defaultValue","onChange","platform","top","bottom","restProps","classNames","getClassName","getRef","width","left","thumbStart","thumbEnd","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component, createRef, HTMLAttributes, RefObject } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler } from '../Touch/Touch';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport { HasFormLabels, HasPlatform, HasRootRef, OldRef } from '../../types';\nimport { OnSliderResize, precisionRound } from '../Slider/Slider';\nimport withPlatform from '../../hoc/withPlatform';\nimport { canUseDOM } from '../../lib/dom';\n\nexport type Value = [number, number];\n\nexport interface RangeSliderProps extends\n  HasRootRef<HTMLDivElement>,\n  HasPlatform,\n  Omit<HTMLAttributes<HTMLDivElement>, 'value' | 'defaultValue' | 'onChange'>,\n  HasFormLabels {\n  min?: number;\n  max?: number;\n  step?: number;\n  value?: Value;\n  defaultValue?: Value;\n  onChange?(value: Value, e: TouchEvent): void;\n}\n\nexport interface RangeSliderState {\n  containerLeft: number;\n  startX: number;\n  percentStart: number;\n  percentEnd: number;\n  active: 'start' | 'end' | null;\n  containerWidth: number;\n}\n\nclass RangeSlider extends Component<RangeSliderProps, RangeSliderState> {\n  constructor(props: RangeSliderProps) {\n    super(props);\n    this.state = {\n      startX: 0,\n      containerLeft: 0,\n      percentStart: 0,\n      percentEnd: 0,\n      active: null,\n      containerWidth: 0,\n    };\n    this.isControlledOutside = this.props.hasOwnProperty('value');\n    this.thumbStart = createRef();\n    this.thumbEnd = createRef();\n  }\n\n  static defaultProps: RangeSliderProps = {\n    min: 0,\n    max: 100,\n    step: 0,\n  };\n\n  isControlledOutside: boolean;\n\n  container: HTMLDivElement;\n\n  thumbStart: RefObject<HTMLDivElement>;\n  thumbEnd: RefObject<HTMLDivElement>;\n\n  onStart: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(e.startX - this.state.containerLeft);\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const { percentStart, percentEnd } = this.calcPercentRange(percentPosition);\n\n    this.onChange([this.percentToValue(percentStart), this.percentToValue(percentEnd)], e);\n\n    if (this.isControlledOutside) {\n      this.setState({ startX: absolutePosition });\n    } else {\n      this.setState({\n        startX: absolutePosition,\n        percentStart,\n        percentEnd,\n      });\n    }\n\n    const target = e.originalEvent.target as HTMLElement;\n\n    const thumb = target.closest('.Slider__thumb');\n\n    if (thumb === this.thumbStart.current) {\n      this.setState({ active: 'start' });\n    } else if (thumb === this.thumbEnd.current) {\n      this.setState({ active: 'end' });\n    }\n  };\n\n  onMoveX: TouchEventHandler = (e: TouchEvent) => {\n    const absolutePosition = this.validateAbsolute(this.state.startX + (e.shiftX || 0));\n    const percentPosition = this.absoluteToPecent(absolutePosition);\n    const { percentStart, percentEnd } = this.calcPercentRange(percentPosition);\n\n    this.onChange([this.percentToValue(percentStart), this.percentToValue(percentEnd)], e);\n\n    if (!this.isControlledOutside) {\n      this.setState({\n        percentStart,\n        percentEnd,\n      });\n    }\n\n    e.originalEvent.preventDefault();\n  };\n\n  onEnd: TouchEventHandler = () => {\n    this.setState({\n      active: null,\n    });\n  };\n\n  onResize: OnSliderResize = (callback?: VoidFunction | Event) => {\n    this.setState({\n      containerLeft: this.container.offsetLeft,\n      containerWidth: this.container.offsetWidth,\n    }, () => {\n      typeof callback === 'function' && callback();\n    });\n  };\n\n  onChange(value: Value, e: TouchEvent) {\n    this.props.onChange && this.props.onChange(value, e);\n  }\n\n  validateAbsolute(absolute: number) {\n    let res = Math.max(0, Math.min(absolute, this.state.containerWidth));\n\n    if (this.props.step > 0) {\n      const stepCount = (this.props.max - this.props.min) / this.props.step;\n      const absStep = this.state.containerWidth / stepCount;\n\n      res = Math.round(res / absStep) * absStep;\n    }\n\n    return res;\n  }\n\n  validatePercent({ percentStart, percentEnd }: { percentStart: number; percentEnd: number }) {\n    return {\n      percentStart: Math.max(0, Math.min(percentStart, 100)),\n      percentEnd: Math.max(0, Math.min(percentEnd, 100)),\n    };\n  }\n\n  absoluteToPecent(absolute: number) {\n    return absolute * 100 / this.state.containerWidth;\n  }\n\n  calcPercentRange(percent: number) {\n    const { percentStart, percentEnd } = this.state;\n\n    if (percentStart === 100) {\n      return { percentStart: percent, percentEnd };\n    } else if (percentEnd === 0) {\n      return { percentEnd: percent, percentStart };\n    } else if (Math.abs(percentStart - percent) <= Math.abs(percentEnd - percent)) {\n      return { percentStart: percent, percentEnd };\n    } else {\n      return { percentEnd: percent, percentStart };\n    }\n  }\n\n  percentToValue(percent: number) {\n    const res = percent * (this.props.max - this.props.min) / 100 + this.props.min;\n    if (this.props.step > 0) {\n      const stepFloatPart = `${this.props.step}`.split('.')[1] || '';\n      return precisionRound(res, stepFloatPart.length);\n    }\n    return res;\n  }\n\n  valueToPercent([valueStart, valueEnd]: Value) {\n    return {\n      percentStart: (valueStart - this.props.min) * 100 / (this.props.max - this.props.min),\n      percentEnd: (valueEnd - this.props.min) * 100 / (this.props.max - this.props.min),\n    };\n  }\n\n  get value(): Value {\n    if (this.isControlledOutside) {\n      return this.props.value;\n    } else if (this.props.hasOwnProperty('defaultValue')) {\n      return this.props.defaultValue;\n    } else {\n      return [this.props.min, this.props.max];\n    }\n  }\n\n  componentDidMount() {\n    if (canUseDOM) {\n      window.addEventListener('resize', this.onResize);\n      this.onResize(() => {\n        this.setState(this.validatePercent(this.valueToPercent(this.value)));\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps: RangeSliderProps) {\n    if (this.isControlledOutside && prevProps.value !== this.props.value) {\n      this.setState(this.validatePercent(this.valueToPercent(this.props.value)));\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n\n  getRef: OldRef<HTMLDivElement> = (container: HTMLDivElement) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  render() {\n    const { className, min, max, step, value, defaultValue,\n      onChange, getRootRef, platform, top, bottom, ...restProps } = this.props;\n\n    return (\n      <div\n        {...restProps}\n        className={classNames(getClassName('Slider', platform), className)}\n        ref={this.getRef}\n      >\n        <Touch onStart={this.onStart} onMoveX={this.onMoveX} onEnd={this.onEnd} className=\"Slider__in\">\n          <div\n            className=\"Slider__dragger\"\n            style={{\n              width: `${this.state.percentEnd - this.state.percentStart}%`,\n              left: `${this.state.percentStart}%`,\n            }}\n          >\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--start', {\n                'Slider__thumb--active': this.state.active === 'start',\n              })}\n              ref={this.thumbStart}\n            />\n            <span\n              className={classNames('Slider__thumb', 'Slider__thumb--end', {\n                'Slider__thumb--active': this.state.active === 'end',\n              })}\n              ref={this.thumbEnd}\n            />\n          </div>\n        </Touch>\n      </div>\n    );\n  }\n}\n\nexport default withPlatform(RangeSlider);\n"]},"metadata":{},"sourceType":"module"}
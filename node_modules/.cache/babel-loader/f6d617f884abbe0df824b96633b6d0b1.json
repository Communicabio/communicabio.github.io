{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Tappable from '../Tappable/Tappable';\nimport usePlatform from '../../hooks/usePlatform';\n\nvar Button = function Button(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      size = props.size,\n      mode = props.mode,\n      stretched = props.stretched,\n      align = props.align,\n      children = props.children,\n      before = props.before,\n      after = props.after,\n      getRootRef = props.getRootRef,\n      Component = props.Component,\n      restProps = _objectWithoutProperties(props, [\"className\", \"size\", \"mode\", \"stretched\", \"align\", \"children\", \"before\", \"after\", \"getRootRef\", \"Component\"]);\n\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    className: classNames(getClassName('Button', platform), className, \"Button--sz-\".concat(size), \"Button--lvl-\".concat(mode), \"Button--aln-\".concat(align || 'center'), _defineProperty({}, 'Button--str', stretched)),\n    getRootRef: getRootRef,\n    Component: restProps.href ? 'a' : Component\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button__in\"\n  }, before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button__before\"\n  }, before), children && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button__content\"\n  }, children), after && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button__after\"\n  }, after)));\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  size: 'm',\n  stretched: false,\n  stopPropagation: true\n};\nexport default Button;","map":{"version":3,"sources":["../../../../src/components/Button/Button.tsx"],"names":["Button","platform","usePlatform","className","size","mode","stretched","align","children","before","after","getRootRef","Component","restProps","props","classNames","getClassName","stopPropagation"],"mappings":";;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,QAAA,MAAA,sBAAA;AAEA,OAAA,WAAA,MAAA,yBAAA;;AAiBA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,CAAA,KAAA,EAAwB;AACrE,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AADqE,MAE7DC,SAF6D,GAE6CW,KAF7C,CAAA,SAAA;AAAA,MAElDV,IAFkD,GAE6CU,KAF7C,CAAA,IAAA;AAAA,MAE5CT,IAF4C,GAE6CS,KAF7C,CAAA,IAAA;AAAA,MAEtCR,SAFsC,GAE6CQ,KAF7C,CAAA,SAAA;AAAA,MAE3BP,KAF2B,GAE6CO,KAF7C,CAAA,KAAA;AAAA,MAEpBN,QAFoB,GAE6CM,KAF7C,CAAA,QAAA;AAAA,MAEVL,MAFU,GAE6CK,KAF7C,CAAA,MAAA;AAAA,MAEFJ,KAFE,GAE6CI,KAF7C,CAAA,KAAA;AAAA,MAEKH,UAFL,GAE6CG,KAF7C,CAAA,UAAA;AAAA,MAEiBF,SAFjB,GAE6CE,KAF7C,CAAA,SAAA;AAAA,MAE+BD,SAF/B,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;;AAIrE,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AACL,IAAA,SAAS,EACPE,UAAU,CACRC,YAAY,CAAA,QAAA,EADJ,QACI,CADJ,EAAA,SAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,eAAA,MAAA,CAAA,IAAA,CAAA,EAAA,eAAA,MAAA,CAKOT,KAAK,IALZ,QAAA,CAAA,EAAA,eAAA,CAAA,EAAA,EAAA,aAAA,EAFP,SAEO,CAAA,CAFP;AAaL,IAAA,UAAU,EAbL,UAAA;AAcL,IAAA,SAAS,EAAEM,SAAS,CAATA,IAAAA,GAAAA,GAAAA,GAAuBD;AAd7B,GAAA,CAAA,EAAA,aAgBL,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGH,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAEGD,QAAQ,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAFf,QAEe,CAFf,EAGGE,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAnBd,KAmBc,CAHZ,CAhBK,CAAP;AAJF,CAAA;;AA4BAV,MAAM,CAANA,YAAAA,GAAsB;AACpBK,EAAAA,IAAI,EADgB,SAAA;AAEpBO,EAAAA,SAAS,EAFW,QAAA;AAGpBR,EAAAA,IAAI,EAHgB,GAAA;AAIpBE,EAAAA,SAAS,EAJW,KAAA;AAKpBW,EAAAA,eAAe,EAAE;AALG,CAAtBjB;AAQA,eAAA,MAAA","sourcesContent":["import React, { FunctionComponent, ReactNode, ElementType, ButtonHTMLAttributes } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport Tappable from '../Tappable/Tappable';\nimport { HasAlign, HasRootRef } from '../../types';\nimport usePlatform from '../../hooks/usePlatform';\n\nexport interface VKUIButtonProps extends HasAlign {\n  mode?: 'primary' | 'secondary' | 'tertiary' | 'outline' | 'commerce' | 'destructive' | 'overlay_primary' | 'overlay_secondary' | 'overlay_outline';\n  size?: 'm' | 'l' | 'xl';\n  stretched?: boolean;\n  before?: ReactNode;\n  after?: ReactNode;\n}\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, VKUIButtonProps {\n  Component?: ElementType;\n  stopPropagation?: boolean;\n  href?: string;\n  target?: string;\n}\n\nconst Button: FunctionComponent<ButtonProps> = (props: ButtonProps) => {\n  const platform = usePlatform();\n  const { className, size, mode, stretched, align, children, before, after, getRootRef, Component, ...restProps } = props;\n\n  return <Tappable {...restProps}\n    className={\n      classNames(\n        getClassName('Button', platform),\n        className,\n        `Button--sz-${size}`,\n        `Button--lvl-${mode}`,\n        `Button--aln-${align || 'center'}`,\n        {\n          ['Button--str']: stretched,\n        },\n      )\n    }\n    getRootRef={getRootRef}\n    Component={restProps.href ? 'a' : Component}\n  >\n    <div className=\"Button__in\">\n      {before && <div className=\"Button__before\">{before}</div>}\n      {children && <div className=\"Button__content\">{children}</div>}\n      {after && <div className=\"Button__after\">{after}</div>}\n    </div>\n  </Tappable>;\n};\n\nButton.defaultProps = {\n  mode: 'primary',\n  Component: 'button',\n  size: 'm',\n  stretched: false,\n  stopPropagation: true,\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}
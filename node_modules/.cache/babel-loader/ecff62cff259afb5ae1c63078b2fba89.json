{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport Touch from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY } from '../../lib/touch';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar ts = function ts() {\n  return +Date.now();\n};\n\nexport var ACTIVE_DELAY = 70;\nexport var ACTIVE_EFFECT_DELAY = 600;\nvar storage = {};\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\n\nfunction deactivateOtherInstances(exclude) {\n  Object.keys(storage).filter(function (id) {\n    return id !== exclude;\n  }).forEach(function (id) {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n    delete storage[id];\n  });\n}\n\nvar Tappable = /*#__PURE__*/function (_Component) {\n  _inherits(Tappable, _Component);\n\n  var _super = _createSuper(Tappable);\n\n  function Tappable(props) {\n    var _this;\n\n    _classCallCheck(this, Tappable);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isSlide\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"insideTouchRoot\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"container\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"wavesTimeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"onStart\", function (_ref) {\n      var originalEvent = _ref.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        deactivateOtherInstances();\n        return;\n      }\n\n      if (_this.props.platform === ANDROID) {\n        _this.onDown(originalEvent);\n      }\n\n      storage[_this.id] = {\n        stop: _this.stop,\n        activeTimeout: window.setTimeout(_this.start, ACTIVE_DELAY)\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onMove\", function (_ref2) {\n      var originalEvent = _ref2.originalEvent,\n          shiftXAbs = _ref2.shiftXAbs,\n          shiftYAbs = _ref2.shiftYAbs;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n\n      if (shiftXAbs > 20 || shiftYAbs > 20) {\n        _this.isSlide = true;\n\n        _this.stop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onEnd\", function (_ref3) {\n      var originalEvent = _ref3.originalEvent;\n      !_this.insideTouchRoot && _this.props.stopPropagation && originalEvent.stopPropagation();\n      var now = ts();\n\n      if (originalEvent.touches && originalEvent.touches.length > 0) {\n        _this.isSlide = false;\n        return;\n      }\n\n      if (_this.state.active) {\n        if (now - _this.state.ts >= 100) {\n          // Долгий тап, выключаем подсветку\n          _this.stop();\n        } else {\n          // Короткий тап, оставляем подсветку\n          var timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay - now + _this.state.ts);\n\n          var store = _this.getStorage();\n\n          if (store) {\n            store.timeout = timeout;\n          }\n        }\n      } else if (!_this.isSlide) {\n        // Очень короткий тап, включаем подсветку\n        _this.start();\n\n        var _timeout = window.setTimeout(_this.stop, _this.props.activeEffectDelay);\n\n        if (_this.getStorage()) {\n          clearTimeout(_this.getStorage().activeTimeout);\n          _this.getStorage().timeout = _timeout;\n        } else {\n          _this.timeout = _timeout;\n        }\n      }\n\n      _this.isSlide = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDown\", function (e) {\n      if (_this.props.platform === ANDROID) {\n        var _getOffsetRect = getOffsetRect(_this.container),\n            top = _getOffsetRect.top,\n            left = _getOffsetRect.left;\n\n        var x = coordX(e) - left;\n        var y = coordY(e) - top;\n        var key = 'wave' + Date.now().toString();\n\n        _this.setState(function (state) {\n          return {\n            clicks: _objectSpread({}, state.clicks, _defineProperty({}, key, {\n              x: x,\n              y: y\n            }))\n          };\n        });\n\n        _this.wavesTimeout = window.setTimeout(function () {\n          _this.setState(function (state) {\n            var clicks = _objectSpread({}, state.clicks);\n\n            delete clicks[key];\n            return {\n              clicks: clicks\n            };\n          });\n        }, 225);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"start\", function () {\n      if (!_this.state.active) {\n        _this.setState({\n          active: true,\n          ts: ts()\n        });\n      }\n\n      deactivateOtherInstances(_this.id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"stop\", function () {\n      if (_this.state.active) {\n        _this.setState({\n          active: false,\n          ts: null\n        });\n      }\n\n      if (_this.getStorage()) {\n        clearTimeout(_this.getStorage().activeTimeout);\n        delete storage[_this.id];\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getStorage\", function () {\n      return storage[_this.id];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRef\", function (container) {\n      _this.container = container;\n      var getRootRef = _this.props.getRootRef;\n\n      if (getRootRef) {\n        if (typeof getRootRef === 'function') {\n          getRootRef(container);\n        } else {\n          getRootRef.current = container;\n        }\n      }\n    });\n\n    _this.id = Math.round(Math.random() * 1e8).toString(16);\n    _this.state = {\n      clicks: {},\n      active: false,\n      ts: null\n    };\n    _this.isSlide = false;\n    return _this;\n  }\n\n  _createClass(Tappable, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (storage[this.id]) {\n        clearTimeout(storage[this.id].timeout);\n        clearTimeout(storage[this.id].activeTimeout);\n        delete storage[this.id];\n      }\n\n      clearTimeout(this.wavesTimeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          clicks = _this$state.clicks,\n          active = _this$state.active;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          Component = _this$props.Component,\n          activeEffectDelay = _this$props.activeEffectDelay,\n          stopPropagation = _this$props.stopPropagation,\n          getRootRef = _this$props.getRootRef,\n          platform = _this$props.platform,\n          restProps = _objectWithoutProperties(_this$props, [\"children\", \"className\", \"Component\", \"activeEffectDelay\", \"stopPropagation\", \"getRootRef\", \"platform\"]);\n\n      var classes = classNames(getClassName('Tappable', platform), className, {\n        'Tappable--active': active,\n        'Tappable--inactive': !active\n      });\n      var RootComponent = !restProps.disabled ? Touch : Component;\n      var props = {};\n\n      if (!restProps.disabled) {\n        props.Component = Component;\n        /* eslint-disable */\n\n        props.onStart = this.onStart;\n        props.onMove = this.onMove;\n        props.onEnd = this.onEnd;\n        /* eslint-enable */\n\n        props.getRootRef = this.getRef;\n      } else {\n        props.ref = this.getRef;\n      }\n\n      return /*#__PURE__*/React.createElement(TouchRootContext.Consumer, null, function (insideTouchRoot) {\n        _this2.insideTouchRoot = insideTouchRoot;\n        return /*#__PURE__*/React.createElement(RootComponent, _extends({}, restProps, {\n          className: classes\n        }, props), platform === ANDROID && /*#__PURE__*/React.createElement(\"span\", {\n          className: \"Tappable__waves\"\n        }, Object.keys(clicks).map(function (k) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"Tappable__wave\",\n            style: {\n              top: clicks[k].y,\n              left: clicks[k].x\n            },\n            key: k\n          });\n        })), children);\n      });\n    }\n  }]);\n\n  return Tappable;\n}(Component);\n\n_defineProperty(Tappable, \"defaultProps\", {\n  Component: 'div',\n  role: 'button',\n  stopPropagation: false,\n  disabled: false,\n  activeEffectDelay: ACTIVE_EFFECT_DELAY\n});\n\nexport default withPlatform(Tappable);","map":{"version":3,"sources":["../../../../src/components/Tappable/Tappable.tsx"],"names":["ts","Date","ACTIVE_DELAY","ACTIVE_EFFECT_DELAY","storage","Object","id","clearTimeout","Tappable","Component","Math","clicks","active","role","stopPropagation","disabled","activeEffectDelay","originalEvent","deactivateOtherInstances","stop","activeTimeout","window","shiftXAbs","shiftYAbs","now","timeout","store","top","left","getOffsetRect","x","coordX","y","coordY","key","state","getRootRef","children","className","platform","restProps","classes","classNames","getClassName","RootComponent","props","k","withPlatform"],"mappings":"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","sourcesContent":["import React, { Component, ElementType, HTMLAttributes } from 'react';\nimport Touch, { TouchEvent, TouchEventHandler, TouchProps } from '../Touch/Touch';\nimport TouchRootContext from '../Touch/TouchContext';\nimport classNames from '../../lib/classNames';\nimport getClassName from '../../helpers/getClassName';\nimport { ANDROID } from '../../lib/platform';\nimport { getOffsetRect } from '../../lib/offset';\nimport { coordX, coordY, VKUITouchEvent, VKUITouchEventHander } from '../../lib/touch';\nimport { HasPlatform, HasRootRef, OldRef, RefWithCurrent } from '../../types';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface TappableProps extends HTMLAttributes<HTMLElement>, HasRootRef<HTMLElement>, HasPlatform {\n  Component?: ElementType;\n  activeEffectDelay?: number;\n  disabled?: boolean;\n  stopPropagation?: boolean;\n  href?: string;\n  target?: string;\n}\n\nexport interface TappableState {\n  clicks?: {\n    [index: string]: {\n      x: number;\n      y: number;\n    };\n  };\n  active?: boolean;\n  ts?: number;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: OldRef<HTMLElement> | RefWithCurrent<HTMLElement>;\n}\n\nexport interface StorageItem {\n  activeTimeout: number;\n  timeout?: number;\n  stop(): void;\n}\n\nexport interface Storage {\n  [index: string]: StorageItem;\n}\n\nexport type GetStorage = () => StorageItem;\n\nconst ts = () => +Date.now();\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nlet storage: Storage = {};\n\n/*\n * Очищает таймауты и хранилище для всех экземпляров компонента, кроме переданного\n */\nfunction deactivateOtherInstances(exclude?: string) {\n  Object.keys(storage).filter((id: string) => id !== exclude).forEach((id: string) => {\n    clearTimeout(storage[id].activeTimeout);\n    clearTimeout(storage[id].timeout);\n    storage[id].stop();\n\n    delete storage[id];\n  });\n}\n\nclass Tappable extends Component<TappableProps, TappableState> {\n  constructor(props: TappableProps) {\n    super(props);\n    this.id = Math.round(Math.random() * 1e8).toString(16);\n    this.state = {\n      clicks: {},\n      active: false,\n      ts: null,\n    };\n    this.isSlide = false;\n  }\n\n  id: string;\n\n  isSlide: boolean;\n\n  insideTouchRoot: boolean;\n\n  container: HTMLElement;\n\n  timeout: number;\n\n  wavesTimeout: number;\n\n  static defaultProps: TappableProps = {\n    Component: 'div',\n    role: 'button',\n    stopPropagation: false,\n    disabled: false,\n    activeEffectDelay: ACTIVE_EFFECT_DELAY,\n  };\n\n  /*\n   * Обрабатывает событие touchstart\n   */\n  onStart: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (originalEvent.touches && originalEvent.touches.length > 1) {\n      deactivateOtherInstances();\n      return;\n    }\n\n    if (this.props.platform === ANDROID) {\n      this.onDown(originalEvent);\n    }\n\n    storage[this.id] = {\n      stop: this.stop,\n      activeTimeout: window.setTimeout(this.start, ACTIVE_DELAY),\n    };\n  };\n\n  /*\n   * Обрабатывает событие touchmove\n   */\n  onMove: TouchEventHandler = ({ originalEvent, shiftXAbs, shiftYAbs }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    if (shiftXAbs > 20 || shiftYAbs > 20) {\n      this.isSlide = true;\n      this.stop();\n    }\n  };\n\n  /*\n   * Обрабатывает событие touchend\n   */\n  onEnd: TouchEventHandler = ({ originalEvent }: TouchEvent) => {\n    !this.insideTouchRoot && this.props.stopPropagation && originalEvent.stopPropagation();\n    const now = ts();\n\n    if (originalEvent.touches && originalEvent.touches.length > 0) {\n      this.isSlide = false;\n      return;\n    }\n\n    if (this.state.active) {\n      if (now - this.state.ts >= 100) {\n        // Долгий тап, выключаем подсветку\n        this.stop();\n      } else {\n        // Короткий тап, оставляем подсветку\n        const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay - now + this.state.ts);\n        const store = this.getStorage();\n\n        if (store) {\n          store.timeout = timeout;\n        }\n      }\n    } else if (!this.isSlide) {\n      // Очень короткий тап, включаем подсветку\n      this.start();\n\n      const timeout = window.setTimeout(this.stop, this.props.activeEffectDelay);\n\n      if (this.getStorage()) {\n        clearTimeout(this.getStorage().activeTimeout);\n        this.getStorage().timeout = timeout;\n      } else {\n        this.timeout = timeout;\n      }\n    }\n\n    this.isSlide = false;\n  };\n\n  /*\n   * Реализует эффект при тапе для Андроида\n   */\n  onDown: VKUITouchEventHander = (e: VKUITouchEvent) => {\n    if (this.props.platform === ANDROID) {\n      const { top, left } = getOffsetRect(this.container);\n      const x = coordX(e) - left;\n      const y = coordY(e) - top;\n      const key = 'wave' + Date.now().toString();\n\n      this.setState((state: TappableState): TappableState => {\n        return {\n          clicks: {\n            ...state.clicks,\n            [key]: {\n              x,\n              y,\n            },\n          },\n        };\n      });\n\n      this.wavesTimeout = window.setTimeout(() => {\n        this.setState((state: TappableState): TappableState => {\n          let clicks = { ...state.clicks };\n          delete clicks[key];\n          return { clicks };\n        });\n      }, 225);\n    }\n  };\n\n  /*\n   * Устанавливает активное выделение\n   */\n  start: VoidFunction = () => {\n    if (!this.state.active) {\n      this.setState({\n        active: true,\n        ts: ts(),\n      });\n    }\n    deactivateOtherInstances(this.id);\n  };\n\n  /*\n   * Снимает активное выделение\n   */\n  stop: VoidFunction = () => {\n    if (this.state.active) {\n      this.setState({\n        active: false,\n        ts: null,\n      });\n    }\n    if (this.getStorage()) {\n      clearTimeout(this.getStorage().activeTimeout);\n      delete storage[this.id];\n    }\n  };\n\n  /*\n   * Возвращает хранилище для экземпляра компонента\n   */\n  getStorage: GetStorage = () => {\n    return storage[this.id];\n  };\n\n  /*\n   * Берет ref на DOM-ноду из экземпляра Touch\n   */\n  getRef: OldRef<HTMLElement> = (container: HTMLElement) => {\n    this.container = container;\n\n    const getRootRef = this.props.getRootRef;\n    if (getRootRef) {\n      if (typeof getRootRef === 'function') {\n        getRootRef(container);\n      } else {\n        getRootRef.current = container;\n      }\n    }\n  };\n\n  componentWillUnmount() {\n    if (storage[this.id]) {\n      clearTimeout(storage[this.id].timeout);\n      clearTimeout(storage[this.id].activeTimeout);\n\n      delete storage[this.id];\n    }\n\n    clearTimeout(this.wavesTimeout);\n  }\n\n  render() {\n    const { clicks, active } = this.state;\n    const { children, className, Component, activeEffectDelay,\n      stopPropagation, getRootRef, platform, ...restProps } = this.props;\n\n    const classes = classNames(getClassName('Tappable', platform), className, {\n      'Tappable--active': active,\n      'Tappable--inactive': !active,\n    });\n\n    const RootComponent = !restProps.disabled ? Touch : Component;\n    let props: RootComponentProps = {};\n    if (!restProps.disabled) {\n      props.Component = Component;\n      /* eslint-disable */\n      props.onStart = this.onStart;\n      props.onMove = this.onMove;\n      props.onEnd = this.onEnd;\n      /* eslint-enable */\n      props.getRootRef = this.getRef;\n    } else {\n      props.ref = this.getRef;\n    }\n\n    return (\n      <TouchRootContext.Consumer>\n        {(insideTouchRoot: boolean) => {\n          this.insideTouchRoot = insideTouchRoot;\n\n          return (\n            <RootComponent {...restProps} className={classes} {...props}>\n              {platform === ANDROID &&\n              <span className=\"Tappable__waves\">\n                {Object.keys(clicks).map((k: string) => {\n                  return (\n                    <span className=\"Tappable__wave\" style={{ top: clicks[k].y, left: clicks[k].x }} key={k} />\n                  );\n                })}\n              </span>\n              }\n              {children}\n            </RootComponent>\n          );\n        }}\n      </TouchRootContext.Consumer>\n    );\n  }\n}\n\nexport default withPlatform(Tappable);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\nimport Icon24DismissDark from '@vkontakte/icons/dist/24/dismiss_dark';\nimport Tappable from '../Tappable/Tappable';\n\nvar Banner = function Banner(props) {\n  var platform = usePlatform();\n\n  var className = props.className,\n      mode = props.mode,\n      imageTheme = props.imageTheme,\n      size = props.size,\n      before = props.before,\n      asideMode = props.asideMode,\n      header = props.header,\n      subheader = props.subheader,\n      text = props.text,\n      children = props.children,\n      background = props.background,\n      actions = props.actions,\n      onDismiss = props.onDismiss,\n      restProps = _objectWithoutProperties(props, [\"className\", \"mode\", \"imageTheme\", \"size\", \"before\", \"asideMode\", \"header\", \"subheader\", \"text\", \"children\", \"background\", \"actions\", \"onDismiss\"]);\n\n  var InnerComponent = asideMode === 'expand' ? Tappable : 'div';\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, restProps, {\n    className: classNames(getClassName('Banner', platform), \"Banner--md-\".concat(mode), \"Banner--sz-\".concat(size), {\n      'Banner--inverted': mode === 'image' && imageTheme === 'dark'\n    }, className)\n  }), /*#__PURE__*/React.createElement(InnerComponent, {\n    className: \"Banner__in\"\n  }, mode === 'image' && background && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__bg\"\n  }, background), before && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__before\"\n  }, before), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__content\"\n  }, header && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__header\"\n  }, header), subheader && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__subheader\"\n  }, subheader), text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__text\"\n  }, text), actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__actions\"\n  }, actions)), asideMode === 'expand' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__expand\"\n  }, /*#__PURE__*/React.createElement(Icon24Chevron, null)), asideMode === 'dismiss' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__dismiss\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Banner__dismissIcon\",\n    onClick: onDismiss\n  }, mode === 'image' ? /*#__PURE__*/React.createElement(Icon24DismissDark, null) : /*#__PURE__*/React.createElement(Icon24DismissSubstract, null)))));\n};\n\nBanner.defaultProps = {\n  mode: 'tint',\n  size: 's',\n  imageTheme: 'dark'\n};\nexport default Banner;","map":{"version":3,"sources":["../../../../src/components/Banner/Banner.tsx"],"names":["Banner","platform","usePlatform","className","mode","imageTheme","size","before","asideMode","header","subheader","text","children","background","actions","onDismiss","restProps","props","InnerComponent","classNames","getClassName"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;AACA,OAAA,aAAA,MAAA,kCAAA;AACA,OAAA,sBAAA,MAAA,4CAAA;AACA,OAAA,iBAAA,MAAA,uCAAA;AACA,OAAA,QAAA,MAAA,sBAAA;;AA4DA,IAAMA,MAAsC,GAAG,SAAzCA,MAAyC,CAAA,KAAA,EAAwB;AACrE,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;;AADqE,MAGnEC,SAHmE,GAMjEc,KANiE,CAAA,SAAA;AAAA,MAGxDb,IAHwD,GAMjEa,KANiE,CAAA,IAAA;AAAA,MAGlDZ,UAHkD,GAMjEY,KANiE,CAAA,UAAA;AAAA,MAGtCX,IAHsC,GAMjEW,KANiE,CAAA,IAAA;AAAA,MAGhCV,MAHgC,GAMjEU,KANiE,CAAA,MAAA;AAAA,MAGxBT,SAHwB,GAMjES,KANiE,CAAA,SAAA;AAAA,MAGbR,MAHa,GAMjEQ,KANiE,CAAA,MAAA;AAAA,MAGLP,SAHK,GAMjEO,KANiE,CAAA,SAAA;AAAA,MAGMN,IAHN,GAMjEM,KANiE,CAAA,IAAA;AAAA,MAGYL,QAHZ,GAMjEK,KANiE,CAAA,QAAA;AAAA,MAGsBJ,UAHtB,GAMjEI,KANiE,CAAA,UAAA;AAAA,MAGkCH,OAHlC,GAMjEG,KANiE,CAAA,OAAA;AAAA,MAInEF,SAJmE,GAMjEE,KANiE,CAAA,SAAA;AAAA,MAKhED,SALgE,GAAA,wBAAA,CAAA,KAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,YAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,WAAA,CAAA,CAAA;;AAQrE,MAAME,cAAc,GAAGV,SAAS,KAATA,QAAAA,GAAAA,QAAAA,GAAvB,KAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEW,UAAU,CACnBC,YAAY,CAAA,QAAA,EADO,QACP,CADO,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,cAAA,MAAA,CAAA,IAAA,CAAA,EAGG;AACpB,0BAAoBhB,IAAI,KAAJA,OAAAA,IAAoBC,UAAU,KAAK;AADnC,KAHH,EAAA,SAAA;AAFvB,GAAA,CAAA,EAAA,aAUE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,IAAA,SAAS,EAAC;AAA1B,GAAA,EACGD,IAAI,KAAJA,OAAAA,IAAAA,UAAAA,IAAAA,aACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAFF,UAEE,CAFF,EAOGG,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAPb,MAOa,CAPb,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGE,MAAM,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADb,MACa,CADb,EAEGC,SAAS,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAFhB,SAEgB,CAFhB,EAGGC,IAAI,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAHX,IAGW,CAHX,EAKGG,OAAO,IAAA,aACR,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAfJ,OAeI,CANF,CATF,EAmBGN,SAAS,KAATA,QAAAA,IAAAA,aACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EArBJ,IAqBI,CADF,CApBF,EAyBGA,SAAS,KAATA,SAAAA,IAAAA,aACD,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,qBAAA;AAAqC,IAAA,OAAO,EAAEO;AAA9C,GAAA,EACGX,IAAI,KAAJA,OAAAA,GAAAA,aAAmB,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAnBA,IAAmB,CAAnBA,GAAAA,aAA2C,KAAA,CAAA,aAAA,CAAA,sBAAA,EAvCtD,IAuCsD,CAD9C,CADF,CA1BF,CAVF,CADF;AAVF,CAAA;;AA0DAJ,MAAM,CAANA,YAAAA,GAAsB;AACpBI,EAAAA,IAAI,EADgB,MAAA;AAEpBE,EAAAA,IAAI,EAFgB,GAAA;AAGpBD,EAAAA,UAAU,EAAE;AAHQ,CAAtBL;AAMA,eAAA,MAAA","sourcesContent":["import React, { FunctionComponent, ReactNode, HTMLAttributes, MouseEventHandler } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport Icon24Chevron from '@vkontakte/icons/dist/24/chevron';\nimport Icon24DismissSubstract from '@vkontakte/icons/dist/24/dismiss_substract';\nimport Icon24DismissDark from '@vkontakte/icons/dist/24/dismiss_dark';\nimport Tappable from '../Tappable/Tappable';\n\nexport interface BannerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Тип баннера.\n   */\n  mode?: 'tint' | 'image';\n  size?: 's' | 'm';\n  /**\n   * Тип действия в правой части баннера.\n   *\n   * - `dismiss` – отображается иконка крестика, при клике на неё сработает свойство `onDismiss`.\n   * - `expand` – отображается иконка шеврона, которая подразумевает, что при клике на баннер можно куда-то перейти.\n   */\n  asideMode?: 'dismiss' | 'expand';\n  /**\n   * Срабатывает при клике на иконку крестика при `asideMode=\"dismiss\"`.\n   */\n  onDismiss?: MouseEventHandler<HTMLDivElement>;\n  /**\n   * Содержимое, отображаемое в левой части баннера.\n   */\n  before?: ReactNode;\n  /**\n   * Заголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  header?: ReactNode;\n  /**\n   * Подзаголовок. <br />\n   * При использовании этого свойства рекомендуется не указывать `text`.\n   */\n  subheader?: ReactNode;\n  /**\n   * Текст баннера. <br />\n   * Это свойство следует использовать без указания `header` и `subheader`.\n   */\n  text?: ReactNode;\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * - `light` – в качестве фона используется светлое изображение, цвет текста в баннере будет тёмным.\n   * - `dark` – в качестве фона используется тёмное изображение, цвет текста будет светлым.\n   */\n  imageTheme?: 'light' | 'dark';\n  /**\n   * При использовании `mode=\"image\"`.\n   *\n   * Элемент, который нужно стилизовать цветом и/или фоном. Этот элемент будет растянут на 100% ширины и высоты баннера.\n   */\n  background?: ReactNode;\n  /**\n   * Кнопки, отображаемые в баннере.\n   *\n   * - В режиме `tint` или в `image` со светлым фоном рекомендуется использовать только `<Button mode=\"primary\" />` или `<Button mode=\"tertiary\" />`.\n   * - В режиме `image` с тёмным фоном – `<Button mode=\"overlay\" />`.\n   */\n  actions?: ReactNode;\n}\n\nconst Banner: FunctionComponent<BannerProps> = (props: BannerProps) => {\n  const platform = usePlatform();\n  const {\n    className, mode, imageTheme, size, before, asideMode, header, subheader, text, children, background, actions,\n    onDismiss,\n    ...restProps\n  } = props;\n\n  const InnerComponent = asideMode === 'expand' ? Tappable : 'div';\n\n  return (\n    <div\n      {...restProps}\n      className={classNames(\n        getClassName('Banner', platform),\n        `Banner--md-${mode}`,\n        `Banner--sz-${size}`, {\n          'Banner--inverted': mode === 'image' && imageTheme === 'dark',\n        }, className,\n      )}\n    >\n      <InnerComponent className=\"Banner__in\">\n        {mode === 'image' && background &&\n        <div className=\"Banner__bg\">\n          {background}\n        </div>\n        }\n\n        {before && <div className=\"Banner__before\">{before}</div>}\n\n        <div className=\"Banner__content\">\n          {header && <div className=\"Banner__header\">{header}</div>}\n          {subheader && <div className=\"Banner__subheader\">{subheader}</div>}\n          {text && <div className=\"Banner__text\">{text}</div>}\n\n          {actions &&\n          <div className=\"Banner__actions\">{actions}</div>\n          }\n        </div>\n\n        {asideMode === 'expand' &&\n        <div className=\"Banner__expand\">\n          <Icon24Chevron />\n        </div>\n        }\n\n        {asideMode === 'dismiss' &&\n        <div className=\"Banner__dismiss\">\n          <div className=\"Banner__dismissIcon\" onClick={onDismiss}>\n            {mode === 'image' ? <Icon24DismissDark /> : <Icon24DismissSubstract />}\n          </div>\n        </div>\n        }\n      </InnerComponent>\n    </div>\n  );\n};\n\nBanner.defaultProps = {\n  mode: 'tint',\n  size: 's',\n  imageTheme: 'dark',\n};\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}
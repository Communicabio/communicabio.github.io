{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport React, { Component } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport withModalRootContext from '../ModalRoot/withModalRootContext';\nimport withPlatform from '../../hoc/withPlatform';\n\nvar ModalPage = /*#__PURE__*/function (_Component) {\n  _inherits(ModalPage, _Component);\n\n  var _super = _createSuper(ModalPage);\n\n  function ModalPage() {\n    _classCallCheck(this, ModalPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ModalPage, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.children !== this.props.children) {\n        this.props.updateModalHeight();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          header = _this$props.header,\n          insets = _this$props.insets,\n          platform = _this$props.platform;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(getClassName('ModalPage', platform), className)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__in-wrap\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__in\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__header\"\n      }, header), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ModalPage__content-in\",\n        style: isNumeric(insets.bottom) ? {\n          paddingBottom: insets.bottom\n        } : null\n      }, children)))));\n    }\n  }]);\n\n  return ModalPage;\n}(Component);\n\n_defineProperty(ModalPage, \"defaultProps\", {\n  settlingHeight: 75,\n  insets: {}\n});\n\nexport default withInsets(withPlatform(withModalRootContext(ModalPage)));","map":{"version":3,"sources":["../../../../src/components/ModalPage/ModalPage.tsx"],"names":["ModalPage","Component","prevProps","settlingHeight","insets","children","className","header","platform","classNames","getClassName","paddingBottom","bottom","withInsets","withPlatform","withModalRootContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,SAAA,QAAA,OAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,SAAA,SAAA,QAAA,iBAAA;AAGA,OAAA,oBAAA,MAAA,mCAAA;AACA,OAAA,YAAA,MAAA,wBAAA;;IAuBMA,S;;;;;;;;;;;;;uCACeE,S,EAA2B;AAC5C,UAAIA,SAAS,CAATA,QAAAA,KAAuB,KAAA,KAAA,CAA3B,QAAA,EAAgD;AAC9C,aAAA,KAAA,CAAA,iBAAA;AACD;AACF;;;6BAOQ;AAAA,UAAA,WAAA,GACmD,KADnD,KAAA;AAAA,UACCG,QADD,GAAA,WAAA,CAAA,QAAA;AAAA,UACWC,SADX,GAAA,WAAA,CAAA,SAAA;AAAA,UACsBC,MADtB,GAAA,WAAA,CAAA,MAAA;AAAA,UAC8BH,MAD9B,GAAA,WAAA,CAAA,MAAA;AAAA,UACsCI,QADtC,GAAA,WAAA,CAAA,QAAA;AAGP,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAEC,UAAU,CAACC,YAAY,CAAA,WAAA,EAAb,QAAa,CAAb,EAAA,SAAA;AAA1B,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EADF,MACE,CADF,EAAA,aAKE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAC;AAAf,OAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAd,uBAAA;AAAuC,QAAA,KAAK,EAAE,SAAS,CAACN,MAAM,CAAhB,MAAS,CAAT,GAA2B;AAAEO,UAAAA,aAAa,EAAEP,MAAM,CAACQ;AAAxB,SAA3B,GAA8D;AAA5G,OAAA,EATV,QASU,CADF,CALF,CADF,CADF,CADF;AAiBD;;;;EAhCqBX,S;;gBAAlBD,S,kBAO2C;AAC7CG,EAAAA,cAAc,EAD+B,EAAA;AAE7CC,EAAAA,MAAM,EAAE;AAFqC,C;;AA4BjD,eAAeS,UAAU,CAACC,YAAY,CAACC,oBAAoB,CAA3D,SAA2D,CAArB,CAAb,CAAzB","sourcesContent":["import React, { Component, HTMLAttributes, ReactNode } from 'react';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\nimport { isNumeric } from '../../lib/utils';\nimport { HasInsets, HasPlatform } from '../../types';\nimport { ModalRootContextInterface } from '../ModalRoot/ModalRootContext';\nimport withModalRootContext from '../ModalRoot/withModalRootContext';\nimport withPlatform from '../../hoc/withPlatform';\n\nexport interface ModalPageProps extends HTMLAttributes<HTMLDivElement>, HasInsets, HasPlatform {\n  id: string;\n  /**\n   * Шапка модальной страницы, `<ModalPageHeader />`\n   */\n  header: ReactNode;\n  onClose?(): void;\n  /**\n   * Процент, на который изначально будет открыта модальная страница\n   */\n  settlingHeight?: number;\n  /**\n   * Если высота контента в модальной странице может поменяться, нужно установить это свойство\n   */\n  dynamicContentHeight?: boolean;\n  /**\n   * @ignore\n   */\n  updateModalHeight?: ModalRootContextInterface['updateModalHeight'];\n}\n\nclass ModalPage extends Component<ModalPageProps> {\n  componentDidUpdate(prevProps: ModalPageProps) {\n    if (prevProps.children !== this.props.children) {\n      this.props.updateModalHeight();\n    }\n  }\n\n  static defaultProps: Partial<ModalPageProps> = {\n    settlingHeight: 75,\n    insets: {},\n  };\n\n  render() {\n    const { children, className, header, insets, platform } = this.props;\n\n    return (\n      <div className={classNames(getClassName('ModalPage', platform), className)}>\n        <div className=\"ModalPage__in-wrap\">\n          <div className=\"ModalPage__in\">\n            <div className=\"ModalPage__header\">\n              {header}\n            </div>\n\n            <div className=\"ModalPage__content\">\n              <div className=\"ModalPage__content-in\" style={isNumeric(insets.bottom) ? { paddingBottom: insets.bottom } : null}>\n                {children}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withInsets(withPlatform(withModalRootContext(ModalPage)));\n"]},"metadata":{},"sourceType":"module"}
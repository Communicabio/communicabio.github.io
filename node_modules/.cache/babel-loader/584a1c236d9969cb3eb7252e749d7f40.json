{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassName from '../../helpers/getClassName';\nimport Tappable from '../Tappable/Tappable';\n\nvar RichCell = function RichCell(_ref) {\n  var children = _ref.children,\n      text = _ref.text,\n      caption = _ref.caption,\n      before = _ref.before,\n      after = _ref.after,\n      bottom = _ref.bottom,\n      actions = _ref.actions,\n      multiline = _ref.multiline,\n      className = _ref.className,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"text\", \"caption\", \"before\", \"after\", \"bottom\", \"actions\", \"multiline\", \"className\"]);\n\n  var platform = usePlatform();\n  var isAfterPrimitive = typeof after === 'string' || typeof after === 'number';\n  return /*#__PURE__*/React.createElement(Tappable, _extends({}, restProps, {\n    Component: restProps.href ? 'a' : 'div',\n    className: classNames(className, getClassName('RichCell', platform), {\n      'RichCell--mult': multiline\n    })\n  }), before, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__in\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__top\"\n  }, isAfterPrimitive ? /*#__PURE__*/React.createElement(\"span\", null, after) : after, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__content\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__children\"\n  }, children), after && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__after\"\n  }, after)), text && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__text\"\n  }, text), caption && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__caption\"\n  }, caption), (bottom || actions) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__bottom\"\n  }, bottom, actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"RichCell__actions\"\n  }, actions)))));\n};\n\nexport default RichCell;","map":{"version":3,"sources":["../../../../src/components/RichCell/RichCell.tsx"],"names":["RichCell","children","text","caption","before","after","bottom","actions","multiline","className","restProps","platform","usePlatform","isAfterPrimitive","classNames","getClassName"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,sBAAA;AACA,OAAA,WAAA,MAAA,yBAAA;AACA,OAAA,YAAA,MAAA,4BAAA;AAEA,OAAA,QAAA,MAAA,sBAAA;;AA2BA,IAAMA,QAA0C,GAAG,SAA7CA,QAA6C,CAAA,IAAA,EAW7C;AAAA,MAVJC,QAUI,GAAA,IAAA,CAVJA,QAUI;AAAA,MATJC,IASI,GAAA,IAAA,CATJA,IASI;AAAA,MARJC,OAQI,GAAA,IAAA,CARJA,OAQI;AAAA,MAPJC,MAOI,GAAA,IAAA,CAPJA,MAOI;AAAA,MANJC,KAMI,GAAA,IAAA,CANJA,KAMI;AAAA,MALJC,MAKI,GAAA,IAAA,CALJA,MAKI;AAAA,MAJJC,OAII,GAAA,IAAA,CAJJA,OAII;AAAA,MAHJC,SAGI,GAAA,IAAA,CAHJA,SAGI;AAAA,MAFJC,SAEI,GAAA,IAAA,CAFJA,SAEI;AAAA,MADDC,SACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA,WAAA,CAAA,CAAA;;AACJ,MAAMC,QAAQ,GAAGC,WAAjB,EAAA;AACA,MAAMC,gBAAgB,GAAG,OAAA,KAAA,KAAA,QAAA,IAA6B,OAAA,KAAA,KAAtD,QAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AAEE,IAAA,SAAS,EAAEH,SAAS,CAATA,IAAAA,GAAAA,GAAAA,GAFb,KAAA;AAGE,IAAA,SAAS,EACPI,UAAU,CAAA,SAAA,EAERC,YAAY,CAAA,UAAA,EAFJ,QAEI,CAFJ,EAGR;AACE,wBAAkBP;AADpB,KAHQ;AAJd,GAAA,CAAA,EAAA,MAAA,EAAA,aAcE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAEGK,gBAAgB,GAAA,aAAG,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAH,KAAG,CAAH,GAFnB,KAAA,EAAA,aAGE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EADF,QACE,CADF,EAEGR,KAAK,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EALd,KAKc,CAFZ,CAHF,EAOGH,IAAI,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAPX,IAOW,CAPX,EAQGC,OAAO,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EARd,OAQc,CARd,EASG,CAACG,MAAM,IAAP,OAAA,KAAA,aACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EAAA,MAAA,EAEGC,OAAO,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EA5BxB,OA4BwB,CAFd,CAVJ,CADF,CAdF,CADF;AAfF,CAAA;;AAoDA,eAAA,QAAA","sourcesContent":["import React, { FunctionComponent, HTMLAttributes, ReactNode } from 'react';\nimport classNames from '../../lib/classNames';\nimport usePlatform from '../../hooks/usePlatform';\nimport getClassName from '../../helpers/getClassName';\nimport { HasRootRef } from '../../types';\nimport Tappable from '../Tappable/Tappable';\n\nexport interface RichCellProps extends HTMLAttributes<HTMLElement>, HasRootRef<HTMLElement> {\n  text?: ReactNode;\n  caption?: ReactNode;\n  /**\n   * `<Avatar size={48|72} />`\n   */\n  before?: ReactNode;\n  /**\n   * Иконка 28 или текст\n   */\n  after?: ReactNode;\n  /**\n   * Например `<UsersStack size=\"s\" />`\n   */\n  bottom?: ReactNode;\n  /**\n   * Кнопка или набор кнопок `<Button size=\"m\" />`\n   */\n  actions?: ReactNode;\n  disabled?: boolean;\n  multiline?: boolean;\n  href?: string;\n  target?: string;\n}\n\nconst RichCell: FunctionComponent<RichCellProps> = ({\n  children,\n  text,\n  caption,\n  before,\n  after,\n  bottom,\n  actions,\n  multiline,\n  className,\n  ...restProps\n}) => {\n  const platform = usePlatform();\n  const isAfterPrimitive = typeof after === 'string' || typeof after === 'number';\n\n  return (\n    <Tappable\n      {...restProps}\n      Component={restProps.href ? 'a' : 'div'}\n      className={\n        classNames(\n          className,\n          getClassName('RichCell', platform),\n          {\n            'RichCell--mult': multiline,\n          },\n        )\n      }\n    >\n      {before}\n      <div className=\"RichCell__in\">\n        <div className=\"RichCell__top\">\n          {/* Этот after будет скрыт из верстки. Он нужен для CSS */}\n          {isAfterPrimitive ? <span>{after}</span> : after}\n          <div className=\"RichCell__content\">\n            <div className=\"RichCell__children\">{children}</div>\n            {after && <div className=\"RichCell__after\">{after}</div>}\n          </div>\n          {text && <div className=\"RichCell__text\">{text}</div>}\n          {caption && <div className=\"RichCell__caption\">{caption}</div>}\n          {(bottom || actions) &&\n            <div className=\"RichCell__bottom\">\n              {bottom}\n              {actions && <div className=\"RichCell__actions\">{actions}</div>}\n            </div>\n          }\n        </div>\n      </div>\n    </Tappable>\n  );\n};\n\nexport default RichCell;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["img/communicabio.svg","panels/Home.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","get_chat_history","bind","assertThisInitialized","state","history","last_dialog","formatted_list","i","length","push","text","actor","message","react_default","a","createElement","Cell_default","multiline","before","Avatar_default","src","require","script","document","async","body","appendChild","_this2","Panel_default","id","PanelHeader_default","Div_default","map","Card_default","mode","0","1","size","message2Cell","popout","chatRender","renderFeedbackPanel","loadigRender","React","Component","App","activePanel","activeStory","setHistory","response","json","setState","dialog","urlParams","window","location","search","fetch","SERVER_URL","then","es6","style","marginTop","panels_Home","renderHome","connect","send","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.52c53b36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/communicabio.e8edc935.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport List from '@vkontakte/vkui/dist/components/List/List'\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea'\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid'\nimport Input from '@vkontakte/vkui/dist/components/Input/Input'\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell'\nimport Icon24Send from '@vkontakte/icons/dist/24/send';\nimport Icon24ArrowUturnLeftOutline from '@vkontakte/icons/dist/24/arrow_uturn_left_outline';\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport SERVER_URL from './Params'\nimport ReactDOM from 'react-dom'\nimport {FixedLayout} from '@vkontakte/vkui'\nimport { Tooltip} from '@vkontakte/vkui';\nimport { PanelSpinner, ScreenSpinner, Spinner } from '@vkontakte/vkui';\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\t super();\n\t\t this.props = props\n\t\t console.log(this.props)\n\t\t this.get_chat_history = this.get_chat_history.bind(this);\n\t\t this.state = {history: this.get_chat_history()}\n\t}\n\n\tget_chat_history() {\n\t\tvar last_dialog = this.props.history;\n\t\tvar formatted_list = [];\n\t\tfor (var i = 0; i < last_dialog.length; i += 1) {\n\t\t\tformatted_list.push({'text': last_dialog[i], 'actor': i % 2})\n\t\t}\n\t\tconsole.log('last_dialog ' + formatted_list);\n\t\treturn formatted_list\n\t}\n\n\tmessage2Cell(message) {\n\t\tif (message['actor'] == 0) {\n\t\t\treturn <Cell multiline before={<Avatar src={require(\"../img/communicabio.svg\")}/>}>\n\t\t\t\t\t\t\t\t{message['text']}\n\t\t\t\t\t\t\t</Cell>\n\t\t} else {\n\t\t\treturn <Cell multiline>{message['text']}</Cell>\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst script = document.createElement('script');\n\t\tscript.text = 'VK.Widgets.Auth(\"vk_auth\", {\"authUrl\":\"/app\"})'\n\t\tscript.async = true;\n \t\tdocument.body.appendChild(script);\n\t}\n\n\tchatRender() {\n\t\treturn <Panel id={this.props.id}>\n\t\t\t<PanelHeader>Communicabio</PanelHeader>\n\t\t\t<Div><div id=\"vk_auth\"></div></Div>\n\t\t\t<Div id=\"chat-parent\">\n\t\t\t\t\t{this.state['history'].map(message =>\n\t\t\t\t\t\t<Card mode={{0: \"shadow\", 1: \"tint\"}[message['actor']]} size='l'>\n\t\t\t\t\t\t\t{this.message2Cell(message)}\n\t\t\t\t\t\t </Card>\n\t\t\t\t\t)}\n\t\t\t</Div>\n\t\t</Panel>\n\t}\n\n  render() {\n\t\tconsole.log('home-render')\n\t\tconsole.log(this.props);\n\t\t//console.log(this.state.popout == null)\n\t\t/*this.history = [{'text': \"dddgggg\", \"actor\": 1, \"mistakes\": [{\"metric\": \"m\", \"word\": \"w\"}]}];\n\t\treturn this.renderFeedbackPanel()*/\n\n\t\tif (this.state.popout == null) {\n\t\t\treturn this.chatRender();\n\t\t} else {\n\t\t\tif (this.state.popout === \"feedback\") {\n\t\t\t\treturn this.renderFeedbackPanel();\n\t\t\t}\n\t\t\tif (this.state.popout === \"loading\") {\n\t\t\t\treturn this.loadigRender();\n\t\t\t}\n\t\t\treturn this.state.popout;\n\t\t}\n\t}\n}\n\n/*Home.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n\ttoken: PropTypes.string.isRequired\n};*/\n\nexport default Home;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View, Epic, Tabbar, TabbarItem, Panel, PanelHeader, Spinner } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ChatsOutline from '@vkontakte/icons/dist/28/chats_outline';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon24Settings from '@vkontakte/icons/dist/24/settings';\n\nimport Home from './panels/Home';\nimport SERVER_URL from './panels/Params'\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tactiveStory: 'chat',\n\t\t};\n\n\t\tthis.setHistory = this.setHistory.bind(this);\n\t}\n\n\tasync setHistory(response) {\n\t\tvar json = await response.json();\n\t\tthis.setState({history: json.dialog});\n\t}\n\n\tcomponentDidMount() {\n\t\tconst urlParams = window.location.search;\n\t\tfetch(SERVER_URL + 'dialog' + urlParams).then(response => {this.setHistory(response)});\n\t}\n\n\trenderHome() {\n\t\tif (this.state.history == null) {\n\t\t\treturn <Panel id=\"home\"><Spinner size=\"large\" style={{ marginTop: 50 }} /></Panel>;\n\t\t}\n\t\treturn <Home id=\"home\" history={this.state.history}/>\n\t}\n\n\trender() {\n\t\treturn <View id=\"chat\" activePanel={this.state.activePanel}>\n\t\t\t\t\t\t\t{this.renderHome()}\n\t\t\t\t\t</View>\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}